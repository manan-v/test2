{"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "url": "https://api.github.com/orgs/google", "repos_url": [{"id": 1936771, "node_id": "MDEwOlJlcG9zaXRvcnkxOTM2Nzcx", "name": "truth", "full_name": "google/truth", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/truth", "description": "Fluent assertions for Java and Android", "fork": false, "url": "https://api.github.com/repos/google/truth", "forks_url": "https://api.github.com/repos/google/truth/forks", "keys_url": "https://api.github.com/repos/google/truth/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/truth/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/truth/teams", "hooks_url": "https://api.github.com/repos/google/truth/hooks", "issue_events_url": "https://api.github.com/repos/google/truth/issues/events{/number}", "events_url": "https://api.github.com/repos/google/truth/events", "assignees_url": "https://api.github.com/repos/google/truth/assignees{/user}", "branches_url": "https://api.github.com/repos/google/truth/branches{/branch}", "tags_url": "https://api.github.com/repos/google/truth/tags", "blobs_url": "https://api.github.com/repos/google/truth/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/truth/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/truth/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/truth/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/truth/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/truth/languages", "stargazers_url": "https://api.github.com/repos/google/truth/stargazers", "contributors_url": "https://api.github.com/repos/google/truth/contributors", "subscribers_url": "https://api.github.com/repos/google/truth/subscribers", "subscription_url": "https://api.github.com/repos/google/truth/subscription", "commits_url": "https://api.github.com/repos/google/truth/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/truth/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/truth/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/truth/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/truth/contents/{+path}", "compare_url": "https://api.github.com/repos/google/truth/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/truth/merges", "archive_url": "https://api.github.com/repos/google/truth/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/truth/downloads", "issues_url": "https://api.github.com/repos/google/truth/issues{/number}", "pulls_url": "https://api.github.com/repos/google/truth/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/truth/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/truth/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/truth/labels{/name}", "releases_url": "https://api.github.com/repos/google/truth/releases{/id}", "deployments_url": "https://api.github.com/repos/google/truth/deployments", "created_at": "2011-06-22T18:55:12Z", "updated_at": "2022-05-18T03:46:05Z", "pushed_at": "2022-05-18T13:10:35Z", "git_url": "git://github.com/google/truth.git", "ssh_url": "git@github.com:google/truth.git", "clone_url": "https://github.com/google/truth.git", "svn_url": "https://github.com/google/truth", "homepage": "https://truth.dev/", "size": 33155, "stargazers_count": 2443, "watchers_count": 2443, "language": "Java", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 250, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 75, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "allow_forking": true, "is_template": false, "topics": ["assertion-framework", "java", "junit", "test-framework", "testing-library", "truth", "unit-testing"], "visibility": "public", "forks": 250, "open_issues": 75, "watchers": 2443, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 3248507, "node_id": "MDEwOlJlcG9zaXRvcnkzMjQ4NTA3", "name": "ruby-openid-apps-discovery", "full_name": "google/ruby-openid-apps-discovery", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/ruby-openid-apps-discovery", "description": null, "fork": false, "url": "https://api.github.com/repos/google/ruby-openid-apps-discovery", "forks_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/forks", "keys_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/teams", "hooks_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/hooks", "issue_events_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/issues/events{/number}", "events_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/events", "assignees_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/assignees{/user}", "branches_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/branches{/branch}", "tags_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/tags", "blobs_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/languages", "stargazers_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/stargazers", "contributors_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/contributors", "subscribers_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/subscribers", "subscription_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/subscription", "commits_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/contents/{+path}", "compare_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/merges", "archive_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/downloads", "issues_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/issues{/number}", "pulls_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/labels{/name}", "releases_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/releases{/id}", "deployments_url": "https://api.github.com/repos/google/ruby-openid-apps-discovery/deployments", "created_at": "2012-01-23T17:09:03Z", "updated_at": "2022-01-13T15:11:13Z", "pushed_at": "2020-09-30T19:14:27Z", "git_url": "git://github.com/google/ruby-openid-apps-discovery.git", "ssh_url": "git@github.com:google/ruby-openid-apps-discovery.git", "clone_url": "https://github.com/google/ruby-openid-apps-discovery.git", "svn_url": "https://github.com/google/ruby-openid-apps-discovery", "homepage": "", "size": 176, "stargazers_count": 35, "watchers_count": 35, "language": "Ruby", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 21, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 2, "license": null, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 21, "open_issues": 2, "watchers": 35, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 3248531, "node_id": "MDEwOlJlcG9zaXRvcnkzMjQ4NTMx", "name": "autoparse", "full_name": "google/autoparse", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/autoparse", "description": "A dynamically generated parsing system using JSON Schema.", "fork": false, "url": "https://api.github.com/repos/google/autoparse", "forks_url": "https://api.github.com/repos/google/autoparse/forks", "keys_url": "https://api.github.com/repos/google/autoparse/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/autoparse/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/autoparse/teams", "hooks_url": "https://api.github.com/repos/google/autoparse/hooks", "issue_events_url": "https://api.github.com/repos/google/autoparse/issues/events{/number}", "events_url": "https://api.github.com/repos/google/autoparse/events", "assignees_url": "https://api.github.com/repos/google/autoparse/assignees{/user}", "branches_url": "https://api.github.com/repos/google/autoparse/branches{/branch}", "tags_url": "https://api.github.com/repos/google/autoparse/tags", "blobs_url": "https://api.github.com/repos/google/autoparse/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/autoparse/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/autoparse/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/autoparse/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/autoparse/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/autoparse/languages", "stargazers_url": "https://api.github.com/repos/google/autoparse/stargazers", "contributors_url": "https://api.github.com/repos/google/autoparse/contributors", "subscribers_url": "https://api.github.com/repos/google/autoparse/subscribers", "subscription_url": "https://api.github.com/repos/google/autoparse/subscription", "commits_url": "https://api.github.com/repos/google/autoparse/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/autoparse/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/autoparse/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/autoparse/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/autoparse/contents/{+path}", "compare_url": "https://api.github.com/repos/google/autoparse/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/autoparse/merges", "archive_url": "https://api.github.com/repos/google/autoparse/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/autoparse/downloads", "issues_url": "https://api.github.com/repos/google/autoparse/issues{/number}", "pulls_url": "https://api.github.com/repos/google/autoparse/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/autoparse/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/autoparse/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/autoparse/labels{/name}", "releases_url": "https://api.github.com/repos/google/autoparse/releases{/id}", "deployments_url": "https://api.github.com/repos/google/autoparse/deployments", "created_at": "2012-01-23T17:13:56Z", "updated_at": "2022-01-18T00:52:08Z", "pushed_at": "2015-08-06T14:03:51Z", "git_url": "git://github.com/google/autoparse.git", "ssh_url": "git@github.com:google/autoparse.git", "clone_url": "https://github.com/google/autoparse.git", "svn_url": "https://github.com/google/autoparse", "homepage": "http://code.google.com/p/ruby-autoparse/", "size": 231, "stargazers_count": 144, "watchers_count": 144, "language": "Ruby", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 38, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 4, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 38, "open_issues": 4, "watchers": 144, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 3975462, "node_id": "MDEwOlJlcG9zaXRvcnkzOTc1NDYy", "name": "anvil-build", "full_name": "google/anvil-build", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/anvil-build", "description": "A parallel build system and content pipeline", "fork": false, "url": "https://api.github.com/repos/google/anvil-build", "forks_url": "https://api.github.com/repos/google/anvil-build/forks", "keys_url": "https://api.github.com/repos/google/anvil-build/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/anvil-build/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/anvil-build/teams", "hooks_url": "https://api.github.com/repos/google/anvil-build/hooks", "issue_events_url": "https://api.github.com/repos/google/anvil-build/issues/events{/number}", "events_url": "https://api.github.com/repos/google/anvil-build/events", "assignees_url": "https://api.github.com/repos/google/anvil-build/assignees{/user}", "branches_url": "https://api.github.com/repos/google/anvil-build/branches{/branch}", "tags_url": "https://api.github.com/repos/google/anvil-build/tags", "blobs_url": "https://api.github.com/repos/google/anvil-build/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/anvil-build/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/anvil-build/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/anvil-build/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/anvil-build/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/anvil-build/languages", "stargazers_url": "https://api.github.com/repos/google/anvil-build/stargazers", "contributors_url": "https://api.github.com/repos/google/anvil-build/contributors", "subscribers_url": "https://api.github.com/repos/google/anvil-build/subscribers", "subscription_url": "https://api.github.com/repos/google/anvil-build/subscription", "commits_url": "https://api.github.com/repos/google/anvil-build/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/anvil-build/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/anvil-build/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/anvil-build/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/anvil-build/contents/{+path}", "compare_url": "https://api.github.com/repos/google/anvil-build/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/anvil-build/merges", "archive_url": "https://api.github.com/repos/google/anvil-build/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/anvil-build/downloads", "issues_url": "https://api.github.com/repos/google/anvil-build/issues{/number}", "pulls_url": "https://api.github.com/repos/google/anvil-build/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/anvil-build/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/anvil-build/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/anvil-build/labels{/name}", "releases_url": "https://api.github.com/repos/google/anvil-build/releases{/id}", "deployments_url": "https://api.github.com/repos/google/anvil-build/deployments", "created_at": "2012-04-09T20:09:24Z", "updated_at": "2021-12-23T15:36:48Z", "pushed_at": "2017-08-27T00:30:42Z", "git_url": "git://github.com/google/anvil-build.git", "ssh_url": "git@github.com:google/anvil-build.git", "clone_url": "https://github.com/google/anvil-build.git", "svn_url": "https://github.com/google/anvil-build", "homepage": "http://code.google.com/p/anvil-build/", "size": 204, "stargazers_count": 54, "watchers_count": 54, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 21, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 7, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 21, "open_issues": 7, "watchers": 54, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 5072378, "node_id": "MDEwOlJlcG9zaXRvcnk1MDcyMzc4", "name": "googletv-android-samples", "full_name": "google/googletv-android-samples", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/googletv-android-samples", "description": "Source for many GoogleTV Example applications.", "fork": false, "url": "https://api.github.com/repos/google/googletv-android-samples", "forks_url": "https://api.github.com/repos/google/googletv-android-samples/forks", "keys_url": "https://api.github.com/repos/google/googletv-android-samples/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/googletv-android-samples/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/googletv-android-samples/teams", "hooks_url": "https://api.github.com/repos/google/googletv-android-samples/hooks", "issue_events_url": "https://api.github.com/repos/google/googletv-android-samples/issues/events{/number}", "events_url": "https://api.github.com/repos/google/googletv-android-samples/events", "assignees_url": "https://api.github.com/repos/google/googletv-android-samples/assignees{/user}", "branches_url": "https://api.github.com/repos/google/googletv-android-samples/branches{/branch}", "tags_url": "https://api.github.com/repos/google/googletv-android-samples/tags", "blobs_url": "https://api.github.com/repos/google/googletv-android-samples/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/googletv-android-samples/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/googletv-android-samples/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/googletv-android-samples/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/googletv-android-samples/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/googletv-android-samples/languages", "stargazers_url": "https://api.github.com/repos/google/googletv-android-samples/stargazers", "contributors_url": "https://api.github.com/repos/google/googletv-android-samples/contributors", "subscribers_url": "https://api.github.com/repos/google/googletv-android-samples/subscribers", "subscription_url": "https://api.github.com/repos/google/googletv-android-samples/subscription", "commits_url": "https://api.github.com/repos/google/googletv-android-samples/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/googletv-android-samples/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/googletv-android-samples/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/googletv-android-samples/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/googletv-android-samples/contents/{+path}", "compare_url": "https://api.github.com/repos/google/googletv-android-samples/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/googletv-android-samples/merges", "archive_url": "https://api.github.com/repos/google/googletv-android-samples/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/googletv-android-samples/downloads", "issues_url": "https://api.github.com/repos/google/googletv-android-samples/issues{/number}", "pulls_url": "https://api.github.com/repos/google/googletv-android-samples/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/googletv-android-samples/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/googletv-android-samples/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/googletv-android-samples/labels{/name}", "releases_url": "https://api.github.com/repos/google/googletv-android-samples/releases{/id}", "deployments_url": "https://api.github.com/repos/google/googletv-android-samples/deployments", "created_at": "2012-07-16T19:34:08Z", "updated_at": "2022-04-06T12:46:37Z", "pushed_at": "2019-01-16T09:40:33Z", "git_url": "git://github.com/google/googletv-android-samples.git", "ssh_url": "git@github.com:google/googletv-android-samples.git", "clone_url": "https://github.com/google/googletv-android-samples.git", "svn_url": "https://github.com/google/googletv-android-samples", "homepage": null, "size": 23610, "stargazers_count": 161, "watchers_count": 161, "language": "Java", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 79, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": null, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 79, "open_issues": 0, "watchers": 161, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 5511393, "node_id": "MDEwOlJlcG9zaXRvcnk1NTExMzkz", "name": "ChannelPlate", "full_name": "google/ChannelPlate", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/ChannelPlate", "description": "JavaScript library for postMessage over MessageChannel", "fork": false, "url": "https://api.github.com/repos/google/ChannelPlate", "forks_url": "https://api.github.com/repos/google/ChannelPlate/forks", "keys_url": "https://api.github.com/repos/google/ChannelPlate/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/ChannelPlate/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/ChannelPlate/teams", "hooks_url": "https://api.github.com/repos/google/ChannelPlate/hooks", "issue_events_url": "https://api.github.com/repos/google/ChannelPlate/issues/events{/number}", "events_url": "https://api.github.com/repos/google/ChannelPlate/events", "assignees_url": "https://api.github.com/repos/google/ChannelPlate/assignees{/user}", "branches_url": "https://api.github.com/repos/google/ChannelPlate/branches{/branch}", "tags_url": "https://api.github.com/repos/google/ChannelPlate/tags", "blobs_url": "https://api.github.com/repos/google/ChannelPlate/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/ChannelPlate/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/ChannelPlate/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/ChannelPlate/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/ChannelPlate/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/ChannelPlate/languages", "stargazers_url": "https://api.github.com/repos/google/ChannelPlate/stargazers", "contributors_url": "https://api.github.com/repos/google/ChannelPlate/contributors", "subscribers_url": "https://api.github.com/repos/google/ChannelPlate/subscribers", "subscription_url": "https://api.github.com/repos/google/ChannelPlate/subscription", "commits_url": "https://api.github.com/repos/google/ChannelPlate/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/ChannelPlate/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/ChannelPlate/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/ChannelPlate/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/ChannelPlate/contents/{+path}", "compare_url": "https://api.github.com/repos/google/ChannelPlate/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/ChannelPlate/merges", "archive_url": "https://api.github.com/repos/google/ChannelPlate/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/ChannelPlate/downloads", "issues_url": "https://api.github.com/repos/google/ChannelPlate/issues{/number}", "pulls_url": "https://api.github.com/repos/google/ChannelPlate/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/ChannelPlate/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/ChannelPlate/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/ChannelPlate/labels{/name}", "releases_url": "https://api.github.com/repos/google/ChannelPlate/releases{/id}", "deployments_url": "https://api.github.com/repos/google/ChannelPlate/deployments", "created_at": "2012-08-22T15:31:48Z", "updated_at": "2022-03-06T03:49:05Z", "pushed_at": "2013-10-23T03:11:31Z", "git_url": "git://github.com/google/ChannelPlate.git", "ssh_url": "git@github.com:google/ChannelPlate.git", "clone_url": "https://github.com/google/ChannelPlate.git", "svn_url": "https://github.com/google/ChannelPlate", "homepage": "", "size": 185, "stargazers_count": 19, "watchers_count": 19, "language": "JavaScript", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 13, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 1, "license": null, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 13, "open_issues": 1, "watchers": 19, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 5753459, "node_id": "MDEwOlJlcG9zaXRvcnk1NzUzNDU5", "name": "GL-Shader-Validator", "full_name": "google/GL-Shader-Validator", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/GL-Shader-Validator", "description": null, "fork": false, "url": "https://api.github.com/repos/google/GL-Shader-Validator", "forks_url": "https://api.github.com/repos/google/GL-Shader-Validator/forks", "keys_url": "https://api.github.com/repos/google/GL-Shader-Validator/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/GL-Shader-Validator/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/GL-Shader-Validator/teams", "hooks_url": "https://api.github.com/repos/google/GL-Shader-Validator/hooks", "issue_events_url": "https://api.github.com/repos/google/GL-Shader-Validator/issues/events{/number}", "events_url": "https://api.github.com/repos/google/GL-Shader-Validator/events", "assignees_url": "https://api.github.com/repos/google/GL-Shader-Validator/assignees{/user}", "branches_url": "https://api.github.com/repos/google/GL-Shader-Validator/branches{/branch}", "tags_url": "https://api.github.com/repos/google/GL-Shader-Validator/tags", "blobs_url": "https://api.github.com/repos/google/GL-Shader-Validator/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/GL-Shader-Validator/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/GL-Shader-Validator/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/GL-Shader-Validator/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/GL-Shader-Validator/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/GL-Shader-Validator/languages", "stargazers_url": "https://api.github.com/repos/google/GL-Shader-Validator/stargazers", "contributors_url": "https://api.github.com/repos/google/GL-Shader-Validator/contributors", "subscribers_url": "https://api.github.com/repos/google/GL-Shader-Validator/subscribers", "subscription_url": "https://api.github.com/repos/google/GL-Shader-Validator/subscription", "commits_url": "https://api.github.com/repos/google/GL-Shader-Validator/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/GL-Shader-Validator/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/GL-Shader-Validator/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/GL-Shader-Validator/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/GL-Shader-Validator/contents/{+path}", "compare_url": "https://api.github.com/repos/google/GL-Shader-Validator/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/GL-Shader-Validator/merges", "archive_url": "https://api.github.com/repos/google/GL-Shader-Validator/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/GL-Shader-Validator/downloads", "issues_url": "https://api.github.com/repos/google/GL-Shader-Validator/issues{/number}", "pulls_url": "https://api.github.com/repos/google/GL-Shader-Validator/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/GL-Shader-Validator/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/GL-Shader-Validator/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/GL-Shader-Validator/labels{/name}", "releases_url": "https://api.github.com/repos/google/GL-Shader-Validator/releases{/id}", "deployments_url": "https://api.github.com/repos/google/GL-Shader-Validator/deployments", "created_at": "2012-09-10T18:00:49Z", "updated_at": "2022-01-13T15:11:25Z", "pushed_at": "2017-06-28T16:40:20Z", "git_url": "git://github.com/google/GL-Shader-Validator.git", "ssh_url": "git@github.com:google/GL-Shader-Validator.git", "clone_url": "https://github.com/google/GL-Shader-Validator.git", "svn_url": "https://github.com/google/GL-Shader-Validator", "homepage": null, "size": 922, "stargazers_count": 38, "watchers_count": 38, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 16, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 1, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 16, "open_issues": 1, "watchers": 38, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 5753483, "node_id": "MDEwOlJlcG9zaXRvcnk1NzUzNDgz", "name": "qpp", "full_name": "google/qpp", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/qpp", "description": "Querypoint Debugging Prototype", "fork": false, "url": "https://api.github.com/repos/google/qpp", "forks_url": "https://api.github.com/repos/google/qpp/forks", "keys_url": "https://api.github.com/repos/google/qpp/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/qpp/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/qpp/teams", "hooks_url": "https://api.github.com/repos/google/qpp/hooks", "issue_events_url": "https://api.github.com/repos/google/qpp/issues/events{/number}", "events_url": "https://api.github.com/repos/google/qpp/events", "assignees_url": "https://api.github.com/repos/google/qpp/assignees{/user}", "branches_url": "https://api.github.com/repos/google/qpp/branches{/branch}", "tags_url": "https://api.github.com/repos/google/qpp/tags", "blobs_url": "https://api.github.com/repos/google/qpp/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/qpp/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/qpp/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/qpp/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/qpp/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/qpp/languages", "stargazers_url": "https://api.github.com/repos/google/qpp/stargazers", "contributors_url": "https://api.github.com/repos/google/qpp/contributors", "subscribers_url": "https://api.github.com/repos/google/qpp/subscribers", "subscription_url": "https://api.github.com/repos/google/qpp/subscription", "commits_url": "https://api.github.com/repos/google/qpp/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/qpp/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/qpp/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/qpp/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/qpp/contents/{+path}", "compare_url": "https://api.github.com/repos/google/qpp/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/qpp/merges", "archive_url": "https://api.github.com/repos/google/qpp/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/qpp/downloads", "issues_url": "https://api.github.com/repos/google/qpp/issues{/number}", "pulls_url": "https://api.github.com/repos/google/qpp/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/qpp/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/qpp/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/qpp/labels{/name}", "releases_url": "https://api.github.com/repos/google/qpp/releases{/id}", "deployments_url": "https://api.github.com/repos/google/qpp/deployments", "created_at": "2012-09-10T18:02:58Z", "updated_at": "2021-12-23T17:13:13Z", "pushed_at": "2019-02-08T18:33:38Z", "git_url": "git://github.com/google/qpp.git", "ssh_url": "git@github.com:google/qpp.git", "clone_url": "https://github.com/google/qpp.git", "svn_url": "https://github.com/google/qpp", "homepage": "http://google.github.com/qpp/", "size": 18252, "stargazers_count": 40, "watchers_count": 40, "language": "JavaScript", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 18, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 34, "license": {"key": "bsd-3-clause", "name": "BSD 3-Clause \"New\" or \"Revised\" License", "spdx_id": "BSD-3-Clause", "url": "https://api.github.com/licenses/bsd-3-clause", "node_id": "MDc6TGljZW5zZTU="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 18, "open_issues": 34, "watchers": 40, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 5815969, "node_id": "MDEwOlJlcG9zaXRvcnk1ODE1OTY5", "name": "CSP-Validator", "full_name": "google/CSP-Validator", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/CSP-Validator", "description": "CSP-Validator", "fork": false, "url": "https://api.github.com/repos/google/CSP-Validator", "forks_url": "https://api.github.com/repos/google/CSP-Validator/forks", "keys_url": "https://api.github.com/repos/google/CSP-Validator/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/CSP-Validator/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/CSP-Validator/teams", "hooks_url": "https://api.github.com/repos/google/CSP-Validator/hooks", "issue_events_url": "https://api.github.com/repos/google/CSP-Validator/issues/events{/number}", "events_url": "https://api.github.com/repos/google/CSP-Validator/events", "assignees_url": "https://api.github.com/repos/google/CSP-Validator/assignees{/user}", "branches_url": "https://api.github.com/repos/google/CSP-Validator/branches{/branch}", "tags_url": "https://api.github.com/repos/google/CSP-Validator/tags", "blobs_url": "https://api.github.com/repos/google/CSP-Validator/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/CSP-Validator/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/CSP-Validator/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/CSP-Validator/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/CSP-Validator/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/CSP-Validator/languages", "stargazers_url": "https://api.github.com/repos/google/CSP-Validator/stargazers", "contributors_url": "https://api.github.com/repos/google/CSP-Validator/contributors", "subscribers_url": "https://api.github.com/repos/google/CSP-Validator/subscribers", "subscription_url": "https://api.github.com/repos/google/CSP-Validator/subscription", "commits_url": "https://api.github.com/repos/google/CSP-Validator/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/CSP-Validator/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/CSP-Validator/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/CSP-Validator/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/CSP-Validator/contents/{+path}", "compare_url": "https://api.github.com/repos/google/CSP-Validator/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/CSP-Validator/merges", "archive_url": "https://api.github.com/repos/google/CSP-Validator/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/CSP-Validator/downloads", "issues_url": "https://api.github.com/repos/google/CSP-Validator/issues{/number}", "pulls_url": "https://api.github.com/repos/google/CSP-Validator/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/CSP-Validator/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/CSP-Validator/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/CSP-Validator/labels{/name}", "releases_url": "https://api.github.com/repos/google/CSP-Validator/releases{/id}", "deployments_url": "https://api.github.com/repos/google/CSP-Validator/deployments", "created_at": "2012-09-14T23:38:23Z", "updated_at": "2022-03-31T09:43:40Z", "pushed_at": "2021-07-07T05:58:13Z", "git_url": "git://github.com/google/CSP-Validator.git", "ssh_url": "git@github.com:google/CSP-Validator.git", "clone_url": "https://github.com/google/CSP-Validator.git", "svn_url": "https://github.com/google/CSP-Validator", "homepage": null, "size": 102, "stargazers_count": 25, "watchers_count": 25, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 18, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 2, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 18, "open_issues": 2, "watchers": 25, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 5844236, "node_id": "MDEwOlJlcG9zaXRvcnk1ODQ0MjM2", "name": "embed-dart-vm", "full_name": "google/embed-dart-vm", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/embed-dart-vm", "description": null, "fork": false, "url": "https://api.github.com/repos/google/embed-dart-vm", "forks_url": "https://api.github.com/repos/google/embed-dart-vm/forks", "keys_url": "https://api.github.com/repos/google/embed-dart-vm/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/embed-dart-vm/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/embed-dart-vm/teams", "hooks_url": "https://api.github.com/repos/google/embed-dart-vm/hooks", "issue_events_url": "https://api.github.com/repos/google/embed-dart-vm/issues/events{/number}", "events_url": "https://api.github.com/repos/google/embed-dart-vm/events", "assignees_url": "https://api.github.com/repos/google/embed-dart-vm/assignees{/user}", "branches_url": "https://api.github.com/repos/google/embed-dart-vm/branches{/branch}", "tags_url": "https://api.github.com/repos/google/embed-dart-vm/tags", "blobs_url": "https://api.github.com/repos/google/embed-dart-vm/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/embed-dart-vm/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/embed-dart-vm/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/embed-dart-vm/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/embed-dart-vm/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/embed-dart-vm/languages", "stargazers_url": "https://api.github.com/repos/google/embed-dart-vm/stargazers", "contributors_url": "https://api.github.com/repos/google/embed-dart-vm/contributors", "subscribers_url": "https://api.github.com/repos/google/embed-dart-vm/subscribers", "subscription_url": "https://api.github.com/repos/google/embed-dart-vm/subscription", "commits_url": "https://api.github.com/repos/google/embed-dart-vm/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/embed-dart-vm/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/embed-dart-vm/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/embed-dart-vm/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/embed-dart-vm/contents/{+path}", "compare_url": "https://api.github.com/repos/google/embed-dart-vm/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/embed-dart-vm/merges", "archive_url": "https://api.github.com/repos/google/embed-dart-vm/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/embed-dart-vm/downloads", "issues_url": "https://api.github.com/repos/google/embed-dart-vm/issues{/number}", "pulls_url": "https://api.github.com/repos/google/embed-dart-vm/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/embed-dart-vm/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/embed-dart-vm/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/embed-dart-vm/labels{/name}", "releases_url": "https://api.github.com/repos/google/embed-dart-vm/releases{/id}", "deployments_url": "https://api.github.com/repos/google/embed-dart-vm/deployments", "created_at": "2012-09-17T17:02:46Z", "updated_at": "2022-05-18T14:44:31Z", "pushed_at": "2022-05-18T14:44:08Z", "git_url": "git://github.com/google/embed-dart-vm.git", "ssh_url": "git@github.com:google/embed-dart-vm.git", "clone_url": "https://github.com/google/embed-dart-vm.git", "svn_url": "https://github.com/google/embed-dart-vm", "homepage": null, "size": 13, "stargazers_count": 95, "watchers_count": 95, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 27, "mirror_url": null, "archived": true, "disabled": false, "open_issues_count": 0, "license": null, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 27, "open_issues": 0, "watchers": 95, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 6093488, "node_id": "MDEwOlJlcG9zaXRvcnk2MDkzNDg4", "name": "module-server", "full_name": "google/module-server", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/module-server", "description": "module-server", "fork": false, "url": "https://api.github.com/repos/google/module-server", "forks_url": "https://api.github.com/repos/google/module-server/forks", "keys_url": "https://api.github.com/repos/google/module-server/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/module-server/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/module-server/teams", "hooks_url": "https://api.github.com/repos/google/module-server/hooks", "issue_events_url": "https://api.github.com/repos/google/module-server/issues/events{/number}", "events_url": "https://api.github.com/repos/google/module-server/events", "assignees_url": "https://api.github.com/repos/google/module-server/assignees{/user}", "branches_url": "https://api.github.com/repos/google/module-server/branches{/branch}", "tags_url": "https://api.github.com/repos/google/module-server/tags", "blobs_url": "https://api.github.com/repos/google/module-server/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/module-server/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/module-server/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/module-server/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/module-server/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/module-server/languages", "stargazers_url": "https://api.github.com/repos/google/module-server/stargazers", "contributors_url": "https://api.github.com/repos/google/module-server/contributors", "subscribers_url": "https://api.github.com/repos/google/module-server/subscribers", "subscription_url": "https://api.github.com/repos/google/module-server/subscription", "commits_url": "https://api.github.com/repos/google/module-server/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/module-server/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/module-server/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/module-server/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/module-server/contents/{+path}", "compare_url": "https://api.github.com/repos/google/module-server/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/module-server/merges", "archive_url": "https://api.github.com/repos/google/module-server/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/module-server/downloads", "issues_url": "https://api.github.com/repos/google/module-server/issues{/number}", "pulls_url": "https://api.github.com/repos/google/module-server/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/module-server/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/module-server/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/module-server/labels{/name}", "releases_url": "https://api.github.com/repos/google/module-server/releases{/id}", "deployments_url": "https://api.github.com/repos/google/module-server/deployments", "created_at": "2012-10-05T16:52:55Z", "updated_at": "2022-05-05T04:45:37Z", "pushed_at": "2015-08-10T08:03:34Z", "git_url": "git://github.com/google/module-server.git", "ssh_url": "git@github.com:google/module-server.git", "clone_url": "https://github.com/google/module-server.git", "svn_url": "https://github.com/google/module-server", "homepage": null, "size": 13872, "stargazers_count": 577, "watchers_count": 577, "language": "JavaScript", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 55, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 3, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 55, "open_issues": 3, "watchers": 577, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 6461354, "node_id": "MDEwOlJlcG9zaXRvcnk2NDYxMzU0", "name": "cxx-std-draft", "full_name": "google/cxx-std-draft", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/cxx-std-draft", "description": "C++ standards drafts", "fork": true, "url": "https://api.github.com/repos/google/cxx-std-draft", "forks_url": "https://api.github.com/repos/google/cxx-std-draft/forks", "keys_url": "https://api.github.com/repos/google/cxx-std-draft/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/cxx-std-draft/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/cxx-std-draft/teams", "hooks_url": "https://api.github.com/repos/google/cxx-std-draft/hooks", "issue_events_url": "https://api.github.com/repos/google/cxx-std-draft/issues/events{/number}", "events_url": "https://api.github.com/repos/google/cxx-std-draft/events", "assignees_url": "https://api.github.com/repos/google/cxx-std-draft/assignees{/user}", "branches_url": "https://api.github.com/repos/google/cxx-std-draft/branches{/branch}", "tags_url": "https://api.github.com/repos/google/cxx-std-draft/tags", "blobs_url": "https://api.github.com/repos/google/cxx-std-draft/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/cxx-std-draft/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/cxx-std-draft/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/cxx-std-draft/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/cxx-std-draft/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/cxx-std-draft/languages", "stargazers_url": "https://api.github.com/repos/google/cxx-std-draft/stargazers", "contributors_url": "https://api.github.com/repos/google/cxx-std-draft/contributors", "subscribers_url": "https://api.github.com/repos/google/cxx-std-draft/subscribers", "subscription_url": "https://api.github.com/repos/google/cxx-std-draft/subscription", "commits_url": "https://api.github.com/repos/google/cxx-std-draft/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/cxx-std-draft/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/cxx-std-draft/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/cxx-std-draft/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/cxx-std-draft/contents/{+path}", "compare_url": "https://api.github.com/repos/google/cxx-std-draft/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/cxx-std-draft/merges", "archive_url": "https://api.github.com/repos/google/cxx-std-draft/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/cxx-std-draft/downloads", "issues_url": "https://api.github.com/repos/google/cxx-std-draft/issues{/number}", "pulls_url": "https://api.github.com/repos/google/cxx-std-draft/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/cxx-std-draft/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/cxx-std-draft/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/cxx-std-draft/labels{/name}", "releases_url": "https://api.github.com/repos/google/cxx-std-draft/releases{/id}", "deployments_url": "https://api.github.com/repos/google/cxx-std-draft/deployments", "created_at": "2012-10-30T17:24:01Z", "updated_at": "2022-04-04T08:17:33Z", "pushed_at": "2020-02-14T10:07:29Z", "git_url": "git://github.com/google/cxx-std-draft.git", "ssh_url": "git@github.com:google/cxx-std-draft.git", "clone_url": "https://github.com/google/cxx-std-draft.git", "svn_url": "https://github.com/google/cxx-std-draft", "homepage": "http://www.open-std.org/jtc1/sc22/wg21/", "size": 220591, "stargazers_count": 48, "watchers_count": 48, "language": "TeX", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 20, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": null, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 20, "open_issues": 0, "watchers": 48, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 6461358, "node_id": "MDEwOlJlcG9zaXRvcnk2NDYxMzU4", "name": "filesystem-proposal", "full_name": "google/filesystem-proposal", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/filesystem-proposal", "description": "Boost Filesystem Library with modifications for the C++ standards committee proposal", "fork": true, "url": "https://api.github.com/repos/google/filesystem-proposal", "forks_url": "https://api.github.com/repos/google/filesystem-proposal/forks", "keys_url": "https://api.github.com/repos/google/filesystem-proposal/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/filesystem-proposal/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/filesystem-proposal/teams", "hooks_url": "https://api.github.com/repos/google/filesystem-proposal/hooks", "issue_events_url": "https://api.github.com/repos/google/filesystem-proposal/issues/events{/number}", "events_url": "https://api.github.com/repos/google/filesystem-proposal/events", "assignees_url": "https://api.github.com/repos/google/filesystem-proposal/assignees{/user}", "branches_url": "https://api.github.com/repos/google/filesystem-proposal/branches{/branch}", "tags_url": "https://api.github.com/repos/google/filesystem-proposal/tags", "blobs_url": "https://api.github.com/repos/google/filesystem-proposal/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/filesystem-proposal/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/filesystem-proposal/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/filesystem-proposal/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/filesystem-proposal/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/filesystem-proposal/languages", "stargazers_url": "https://api.github.com/repos/google/filesystem-proposal/stargazers", "contributors_url": "https://api.github.com/repos/google/filesystem-proposal/contributors", "subscribers_url": "https://api.github.com/repos/google/filesystem-proposal/subscribers", "subscription_url": "https://api.github.com/repos/google/filesystem-proposal/subscription", "commits_url": "https://api.github.com/repos/google/filesystem-proposal/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/filesystem-proposal/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/filesystem-proposal/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/filesystem-proposal/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/filesystem-proposal/contents/{+path}", "compare_url": "https://api.github.com/repos/google/filesystem-proposal/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/filesystem-proposal/merges", "archive_url": "https://api.github.com/repos/google/filesystem-proposal/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/filesystem-proposal/downloads", "issues_url": "https://api.github.com/repos/google/filesystem-proposal/issues{/number}", "pulls_url": "https://api.github.com/repos/google/filesystem-proposal/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/filesystem-proposal/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/filesystem-proposal/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/filesystem-proposal/labels{/name}", "releases_url": "https://api.github.com/repos/google/filesystem-proposal/releases{/id}", "deployments_url": "https://api.github.com/repos/google/filesystem-proposal/deployments", "created_at": "2012-10-30T17:24:17Z", "updated_at": "2022-01-13T15:11:27Z", "pushed_at": "2018-12-05T16:43:11Z", "git_url": "git://github.com/google/filesystem-proposal.git", "ssh_url": "git@github.com:google/filesystem-proposal.git", "clone_url": "https://github.com/google/filesystem-proposal.git", "svn_url": "https://github.com/google/filesystem-proposal", "homepage": null, "size": 711, "stargazers_count": 15, "watchers_count": 15, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 17, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": null, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 17, "open_issues": 0, "watchers": 15, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 6461369, "node_id": "MDEwOlJlcG9zaXRvcnk2NDYxMzY5", "name": "libcxx", "full_name": "google/libcxx", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/libcxx", "description": "libc++; cloned from http://llvm.org/git/libcxx.git", "fork": false, "url": "https://api.github.com/repos/google/libcxx", "forks_url": "https://api.github.com/repos/google/libcxx/forks", "keys_url": "https://api.github.com/repos/google/libcxx/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/libcxx/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/libcxx/teams", "hooks_url": "https://api.github.com/repos/google/libcxx/hooks", "issue_events_url": "https://api.github.com/repos/google/libcxx/issues/events{/number}", "events_url": "https://api.github.com/repos/google/libcxx/events", "assignees_url": "https://api.github.com/repos/google/libcxx/assignees{/user}", "branches_url": "https://api.github.com/repos/google/libcxx/branches{/branch}", "tags_url": "https://api.github.com/repos/google/libcxx/tags", "blobs_url": "https://api.github.com/repos/google/libcxx/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/libcxx/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/libcxx/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/libcxx/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/libcxx/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/libcxx/languages", "stargazers_url": "https://api.github.com/repos/google/libcxx/stargazers", "contributors_url": "https://api.github.com/repos/google/libcxx/contributors", "subscribers_url": "https://api.github.com/repos/google/libcxx/subscribers", "subscription_url": "https://api.github.com/repos/google/libcxx/subscription", "commits_url": "https://api.github.com/repos/google/libcxx/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/libcxx/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/libcxx/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/libcxx/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/libcxx/contents/{+path}", "compare_url": "https://api.github.com/repos/google/libcxx/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/libcxx/merges", "archive_url": "https://api.github.com/repos/google/libcxx/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/libcxx/downloads", "issues_url": "https://api.github.com/repos/google/libcxx/issues{/number}", "pulls_url": "https://api.github.com/repos/google/libcxx/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/libcxx/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/libcxx/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/libcxx/labels{/name}", "releases_url": "https://api.github.com/repos/google/libcxx/releases{/id}", "deployments_url": "https://api.github.com/repos/google/libcxx/deployments", "created_at": "2012-10-30T17:25:04Z", "updated_at": "2022-05-09T20:37:40Z", "pushed_at": "2019-06-24T20:44:57Z", "git_url": "git://github.com/google/libcxx.git", "ssh_url": "git@github.com:google/libcxx.git", "clone_url": "https://github.com/google/libcxx.git", "svn_url": "https://github.com/google/libcxx", "homepage": "http://libcxx.llvm.org/", "size": 6647, "stargazers_count": 172, "watchers_count": 172, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 75, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 2, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 75, "open_issues": 2, "watchers": 172, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 6601918, "node_id": "MDEwOlJlcG9zaXRvcnk2NjAxOTE4", "name": "tracing-framework", "full_name": "google/tracing-framework", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/tracing-framework", "description": "Web Tracing Framework libraries and extensions.", "fork": false, "url": "https://api.github.com/repos/google/tracing-framework", "forks_url": "https://api.github.com/repos/google/tracing-framework/forks", "keys_url": "https://api.github.com/repos/google/tracing-framework/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/tracing-framework/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/tracing-framework/teams", "hooks_url": "https://api.github.com/repos/google/tracing-framework/hooks", "issue_events_url": "https://api.github.com/repos/google/tracing-framework/issues/events{/number}", "events_url": "https://api.github.com/repos/google/tracing-framework/events", "assignees_url": "https://api.github.com/repos/google/tracing-framework/assignees{/user}", "branches_url": "https://api.github.com/repos/google/tracing-framework/branches{/branch}", "tags_url": "https://api.github.com/repos/google/tracing-framework/tags", "blobs_url": "https://api.github.com/repos/google/tracing-framework/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/tracing-framework/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/tracing-framework/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/tracing-framework/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/tracing-framework/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/tracing-framework/languages", "stargazers_url": "https://api.github.com/repos/google/tracing-framework/stargazers", "contributors_url": "https://api.github.com/repos/google/tracing-framework/contributors", "subscribers_url": "https://api.github.com/repos/google/tracing-framework/subscribers", "subscription_url": "https://api.github.com/repos/google/tracing-framework/subscription", "commits_url": "https://api.github.com/repos/google/tracing-framework/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/tracing-framework/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/tracing-framework/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/tracing-framework/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/tracing-framework/contents/{+path}", "compare_url": "https://api.github.com/repos/google/tracing-framework/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/tracing-framework/merges", "archive_url": "https://api.github.com/repos/google/tracing-framework/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/tracing-framework/downloads", "issues_url": "https://api.github.com/repos/google/tracing-framework/issues{/number}", "pulls_url": "https://api.github.com/repos/google/tracing-framework/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/tracing-framework/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/tracing-framework/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/tracing-framework/labels{/name}", "releases_url": "https://api.github.com/repos/google/tracing-framework/releases{/id}", "deployments_url": "https://api.github.com/repos/google/tracing-framework/deployments", "created_at": "2012-11-08T19:32:53Z", "updated_at": "2022-05-15T15:12:20Z", "pushed_at": "2019-12-10T20:36:52Z", "git_url": "git://github.com/google/tracing-framework.git", "ssh_url": "git@github.com:google/tracing-framework.git", "clone_url": "https://github.com/google/tracing-framework.git", "svn_url": "https://github.com/google/tracing-framework", "homepage": "http://google.github.io/tracing-framework/", "size": 37520, "stargazers_count": 2634, "watchers_count": 2634, "language": "JavaScript", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 227, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 121, "license": {"key": "bsd-3-clause", "name": "BSD 3-Clause \"New\" or \"Revised\" License", "spdx_id": "BSD-3-Clause", "url": "https://api.github.com/licenses/bsd-3-clause", "node_id": "MDc6TGljZW5zZTU="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 227, "open_issues": 121, "watchers": 2634, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 6694773, "node_id": "MDEwOlJlcG9zaXRvcnk2Njk0Nzcz", "name": "namebench", "full_name": "google/namebench", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/namebench", "description": "namebench", "fork": false, "url": "https://api.github.com/repos/google/namebench", "forks_url": "https://api.github.com/repos/google/namebench/forks", "keys_url": "https://api.github.com/repos/google/namebench/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/namebench/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/namebench/teams", "hooks_url": "https://api.github.com/repos/google/namebench/hooks", "issue_events_url": "https://api.github.com/repos/google/namebench/issues/events{/number}", "events_url": "https://api.github.com/repos/google/namebench/events", "assignees_url": "https://api.github.com/repos/google/namebench/assignees{/user}", "branches_url": "https://api.github.com/repos/google/namebench/branches{/branch}", "tags_url": "https://api.github.com/repos/google/namebench/tags", "blobs_url": "https://api.github.com/repos/google/namebench/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/namebench/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/namebench/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/namebench/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/namebench/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/namebench/languages", "stargazers_url": "https://api.github.com/repos/google/namebench/stargazers", "contributors_url": "https://api.github.com/repos/google/namebench/contributors", "subscribers_url": "https://api.github.com/repos/google/namebench/subscribers", "subscription_url": "https://api.github.com/repos/google/namebench/subscription", "commits_url": "https://api.github.com/repos/google/namebench/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/namebench/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/namebench/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/namebench/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/namebench/contents/{+path}", "compare_url": "https://api.github.com/repos/google/namebench/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/namebench/merges", "archive_url": "https://api.github.com/repos/google/namebench/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/namebench/downloads", "issues_url": "https://api.github.com/repos/google/namebench/issues{/number}", "pulls_url": "https://api.github.com/repos/google/namebench/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/namebench/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/namebench/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/namebench/labels{/name}", "releases_url": "https://api.github.com/repos/google/namebench/releases{/id}", "deployments_url": "https://api.github.com/repos/google/namebench/deployments", "created_at": "2012-11-14T20:56:13Z", "updated_at": "2022-05-17T11:36:22Z", "pushed_at": "2019-08-19T13:05:51Z", "git_url": "git://github.com/google/namebench.git", "ssh_url": "git@github.com:google/namebench.git", "clone_url": "https://github.com/google/namebench.git", "svn_url": "https://github.com/google/namebench", "homepage": null, "size": 26849, "stargazers_count": 811, "watchers_count": 811, "language": "Go", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 151, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 11, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 151, "open_issues": 11, "watchers": 811, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 7411412, "node_id": "MDEwOlJlcG9zaXRvcnk3NDExNDEy", "name": "devtoolsExtended", "full_name": "google/devtoolsExtended", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/devtoolsExtended", "description": "devtoolsExtended: Extended Chrome Devtools in a Chrome Extension", "fork": false, "url": "https://api.github.com/repos/google/devtoolsExtended", "forks_url": "https://api.github.com/repos/google/devtoolsExtended/forks", "keys_url": "https://api.github.com/repos/google/devtoolsExtended/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/devtoolsExtended/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/devtoolsExtended/teams", "hooks_url": "https://api.github.com/repos/google/devtoolsExtended/hooks", "issue_events_url": "https://api.github.com/repos/google/devtoolsExtended/issues/events{/number}", "events_url": "https://api.github.com/repos/google/devtoolsExtended/events", "assignees_url": "https://api.github.com/repos/google/devtoolsExtended/assignees{/user}", "branches_url": "https://api.github.com/repos/google/devtoolsExtended/branches{/branch}", "tags_url": "https://api.github.com/repos/google/devtoolsExtended/tags", "blobs_url": "https://api.github.com/repos/google/devtoolsExtended/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/devtoolsExtended/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/devtoolsExtended/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/devtoolsExtended/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/devtoolsExtended/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/devtoolsExtended/languages", "stargazers_url": "https://api.github.com/repos/google/devtoolsExtended/stargazers", "contributors_url": "https://api.github.com/repos/google/devtoolsExtended/contributors", "subscribers_url": "https://api.github.com/repos/google/devtoolsExtended/subscribers", "subscription_url": "https://api.github.com/repos/google/devtoolsExtended/subscription", "commits_url": "https://api.github.com/repos/google/devtoolsExtended/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/devtoolsExtended/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/devtoolsExtended/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/devtoolsExtended/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/devtoolsExtended/contents/{+path}", "compare_url": "https://api.github.com/repos/google/devtoolsExtended/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/devtoolsExtended/merges", "archive_url": "https://api.github.com/repos/google/devtoolsExtended/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/devtoolsExtended/downloads", "issues_url": "https://api.github.com/repos/google/devtoolsExtended/issues{/number}", "pulls_url": "https://api.github.com/repos/google/devtoolsExtended/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/devtoolsExtended/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/devtoolsExtended/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/devtoolsExtended/labels{/name}", "releases_url": "https://api.github.com/repos/google/devtoolsExtended/releases{/id}", "deployments_url": "https://api.github.com/repos/google/devtoolsExtended/deployments", "created_at": "2013-01-02T18:40:19Z", "updated_at": "2022-03-06T03:29:58Z", "pushed_at": "2013-10-10T00:08:00Z", "git_url": "git://github.com/google/devtoolsExtended.git", "ssh_url": "git@github.com:google/devtoolsExtended.git", "clone_url": "https://github.com/google/devtoolsExtended.git", "svn_url": "https://github.com/google/devtoolsExtended", "homepage": "", "size": 20189, "stargazers_count": 64, "watchers_count": 64, "language": "JavaScript", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 29, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 4, "license": null, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 29, "open_issues": 4, "watchers": 64, "default_branch": "devtoolsApp", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 7411424, "node_id": "MDEwOlJlcG9zaXRvcnk3NDExNDI0", "name": "sirius", "full_name": "google/sirius", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/sirius", "description": "sirius", "fork": false, "url": "https://api.github.com/repos/google/sirius", "forks_url": "https://api.github.com/repos/google/sirius/forks", "keys_url": "https://api.github.com/repos/google/sirius/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/sirius/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/sirius/teams", "hooks_url": "https://api.github.com/repos/google/sirius/hooks", "issue_events_url": "https://api.github.com/repos/google/sirius/issues/events{/number}", "events_url": "https://api.github.com/repos/google/sirius/events", "assignees_url": "https://api.github.com/repos/google/sirius/assignees{/user}", "branches_url": "https://api.github.com/repos/google/sirius/branches{/branch}", "tags_url": "https://api.github.com/repos/google/sirius/tags", "blobs_url": "https://api.github.com/repos/google/sirius/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/sirius/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/sirius/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/sirius/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/sirius/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/sirius/languages", "stargazers_url": "https://api.github.com/repos/google/sirius/stargazers", "contributors_url": "https://api.github.com/repos/google/sirius/contributors", "subscribers_url": "https://api.github.com/repos/google/sirius/subscribers", "subscription_url": "https://api.github.com/repos/google/sirius/subscription", "commits_url": "https://api.github.com/repos/google/sirius/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/sirius/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/sirius/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/sirius/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/sirius/contents/{+path}", "compare_url": "https://api.github.com/repos/google/sirius/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/sirius/merges", "archive_url": "https://api.github.com/repos/google/sirius/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/sirius/downloads", "issues_url": "https://api.github.com/repos/google/sirius/issues{/number}", "pulls_url": "https://api.github.com/repos/google/sirius/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/sirius/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/sirius/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/sirius/labels{/name}", "releases_url": "https://api.github.com/repos/google/sirius/releases{/id}", "deployments_url": "https://api.github.com/repos/google/sirius/deployments", "created_at": "2013-01-02T18:40:54Z", "updated_at": "2022-03-20T22:56:45Z", "pushed_at": "2013-01-02T18:40:54Z", "git_url": "git://github.com/google/sirius.git", "ssh_url": "git@github.com:google/sirius.git", "clone_url": "https://github.com/google/sirius.git", "svn_url": "https://github.com/google/sirius", "homepage": null, "size": 60, "stargazers_count": 5, "watchers_count": 5, "language": null, "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 3, "license": null, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 3, "watchers": 5, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 7411426, "node_id": "MDEwOlJlcG9zaXRvcnk3NDExNDI2", "name": "testRunner", "full_name": "google/testRunner", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/testRunner", "description": "testRunner", "fork": false, "url": "https://api.github.com/repos/google/testRunner", "forks_url": "https://api.github.com/repos/google/testRunner/forks", "keys_url": "https://api.github.com/repos/google/testRunner/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/testRunner/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/testRunner/teams", "hooks_url": "https://api.github.com/repos/google/testRunner/hooks", "issue_events_url": "https://api.github.com/repos/google/testRunner/issues/events{/number}", "events_url": "https://api.github.com/repos/google/testRunner/events", "assignees_url": "https://api.github.com/repos/google/testRunner/assignees{/user}", "branches_url": "https://api.github.com/repos/google/testRunner/branches{/branch}", "tags_url": "https://api.github.com/repos/google/testRunner/tags", "blobs_url": "https://api.github.com/repos/google/testRunner/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/testRunner/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/testRunner/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/testRunner/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/testRunner/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/testRunner/languages", "stargazers_url": "https://api.github.com/repos/google/testRunner/stargazers", "contributors_url": "https://api.github.com/repos/google/testRunner/contributors", "subscribers_url": "https://api.github.com/repos/google/testRunner/subscribers", "subscription_url": "https://api.github.com/repos/google/testRunner/subscription", "commits_url": "https://api.github.com/repos/google/testRunner/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/testRunner/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/testRunner/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/testRunner/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/testRunner/contents/{+path}", "compare_url": "https://api.github.com/repos/google/testRunner/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/testRunner/merges", "archive_url": "https://api.github.com/repos/google/testRunner/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/testRunner/downloads", "issues_url": "https://api.github.com/repos/google/testRunner/issues{/number}", "pulls_url": "https://api.github.com/repos/google/testRunner/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/testRunner/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/testRunner/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/testRunner/labels{/name}", "releases_url": "https://api.github.com/repos/google/testRunner/releases{/id}", "deployments_url": "https://api.github.com/repos/google/testRunner/deployments", "created_at": "2013-01-02T18:41:06Z", "updated_at": "2021-12-23T17:13:26Z", "pushed_at": "2013-10-10T23:03:42Z", "git_url": "git://github.com/google/testRunner.git", "ssh_url": "git@github.com:google/testRunner.git", "clone_url": "https://github.com/google/testRunner.git", "svn_url": "https://github.com/google/testRunner", "homepage": null, "size": 483, "stargazers_count": 9, "watchers_count": 9, "language": "JavaScript", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 13, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "bsd-3-clause", "name": "BSD 3-Clause \"New\" or \"Revised\" License", "spdx_id": "BSD-3-Clause", "url": "https://api.github.com/licenses/bsd-3-clause", "node_id": "MDc6TGljZW5zZTU="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 13, "open_issues": 0, "watchers": 9, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 7411430, "node_id": "MDEwOlJlcG9zaXRvcnk3NDExNDMw", "name": "crx2app", "full_name": "google/crx2app", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/crx2app", "description": null, "fork": false, "url": "https://api.github.com/repos/google/crx2app", "forks_url": "https://api.github.com/repos/google/crx2app/forks", "keys_url": "https://api.github.com/repos/google/crx2app/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/crx2app/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/crx2app/teams", "hooks_url": "https://api.github.com/repos/google/crx2app/hooks", "issue_events_url": "https://api.github.com/repos/google/crx2app/issues/events{/number}", "events_url": "https://api.github.com/repos/google/crx2app/events", "assignees_url": "https://api.github.com/repos/google/crx2app/assignees{/user}", "branches_url": "https://api.github.com/repos/google/crx2app/branches{/branch}", "tags_url": "https://api.github.com/repos/google/crx2app/tags", "blobs_url": "https://api.github.com/repos/google/crx2app/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/crx2app/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/crx2app/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/crx2app/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/crx2app/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/crx2app/languages", "stargazers_url": "https://api.github.com/repos/google/crx2app/stargazers", "contributors_url": "https://api.github.com/repos/google/crx2app/contributors", "subscribers_url": "https://api.github.com/repos/google/crx2app/subscribers", "subscription_url": "https://api.github.com/repos/google/crx2app/subscription", "commits_url": "https://api.github.com/repos/google/crx2app/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/crx2app/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/crx2app/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/crx2app/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/crx2app/contents/{+path}", "compare_url": "https://api.github.com/repos/google/crx2app/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/crx2app/merges", "archive_url": "https://api.github.com/repos/google/crx2app/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/crx2app/downloads", "issues_url": "https://api.github.com/repos/google/crx2app/issues{/number}", "pulls_url": "https://api.github.com/repos/google/crx2app/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/crx2app/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/crx2app/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/crx2app/labels{/name}", "releases_url": "https://api.github.com/repos/google/crx2app/releases{/id}", "deployments_url": "https://api.github.com/repos/google/crx2app/deployments", "created_at": "2013-01-02T18:41:23Z", "updated_at": "2022-03-06T03:48:50Z", "pushed_at": "2013-07-11T21:20:23Z", "git_url": "git://github.com/google/crx2app.git", "ssh_url": "git@github.com:google/crx2app.git", "clone_url": "https://github.com/google/crx2app.git", "svn_url": "https://github.com/google/crx2app", "homepage": null, "size": 297, "stargazers_count": 19, "watchers_count": 19, "language": "JavaScript", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 14, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 1, "license": null, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 14, "open_issues": 1, "watchers": 19, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 7697149, "node_id": "MDEwOlJlcG9zaXRvcnk3Njk3MTQ5", "name": "episodes.dart", "full_name": "google/episodes.dart", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/episodes.dart", "description": "A framework for timing performance of web apps.", "fork": false, "url": "https://api.github.com/repos/google/episodes.dart", "forks_url": "https://api.github.com/repos/google/episodes.dart/forks", "keys_url": "https://api.github.com/repos/google/episodes.dart/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/episodes.dart/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/episodes.dart/teams", "hooks_url": "https://api.github.com/repos/google/episodes.dart/hooks", "issue_events_url": "https://api.github.com/repos/google/episodes.dart/issues/events{/number}", "events_url": "https://api.github.com/repos/google/episodes.dart/events", "assignees_url": "https://api.github.com/repos/google/episodes.dart/assignees{/user}", "branches_url": "https://api.github.com/repos/google/episodes.dart/branches{/branch}", "tags_url": "https://api.github.com/repos/google/episodes.dart/tags", "blobs_url": "https://api.github.com/repos/google/episodes.dart/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/episodes.dart/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/episodes.dart/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/episodes.dart/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/episodes.dart/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/episodes.dart/languages", "stargazers_url": "https://api.github.com/repos/google/episodes.dart/stargazers", "contributors_url": "https://api.github.com/repos/google/episodes.dart/contributors", "subscribers_url": "https://api.github.com/repos/google/episodes.dart/subscribers", "subscription_url": "https://api.github.com/repos/google/episodes.dart/subscription", "commits_url": "https://api.github.com/repos/google/episodes.dart/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/episodes.dart/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/episodes.dart/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/episodes.dart/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/episodes.dart/contents/{+path}", "compare_url": "https://api.github.com/repos/google/episodes.dart/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/episodes.dart/merges", "archive_url": "https://api.github.com/repos/google/episodes.dart/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/episodes.dart/downloads", "issues_url": "https://api.github.com/repos/google/episodes.dart/issues{/number}", "pulls_url": "https://api.github.com/repos/google/episodes.dart/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/episodes.dart/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/episodes.dart/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/episodes.dart/labels{/name}", "releases_url": "https://api.github.com/repos/google/episodes.dart/releases{/id}", "deployments_url": "https://api.github.com/repos/google/episodes.dart/deployments", "created_at": "2013-01-19T00:31:37Z", "updated_at": "2022-05-10T19:55:28Z", "pushed_at": "2014-10-09T21:39:33Z", "git_url": "git://github.com/google/episodes.dart.git", "ssh_url": "git@github.com:google/episodes.dart.git", "clone_url": "https://github.com/google/episodes.dart.git", "svn_url": "https://github.com/google/episodes.dart", "homepage": null, "size": 191, "stargazers_count": 13, "watchers_count": 13, "language": "Dart", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 25, "mirror_url": null, "archived": true, "disabled": false, "open_issues_count": 0, "license": {"key": "bsd-3-clause", "name": "BSD 3-Clause \"New\" or \"Revised\" License", "spdx_id": "BSD-3-Clause", "url": "https://api.github.com/licenses/bsd-3-clause", "node_id": "MDc6TGljZW5zZTU="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 25, "open_issues": 0, "watchers": 13, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 7776515, "node_id": "MDEwOlJlcG9zaXRvcnk3Nzc2NTE1", "name": "cpp-netlib", "full_name": "google/cpp-netlib", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/cpp-netlib", "description": "The C++ Network Library Project -- header-only, cross-platform, standards compliant networking library.", "fork": true, "url": "https://api.github.com/repos/google/cpp-netlib", "forks_url": "https://api.github.com/repos/google/cpp-netlib/forks", "keys_url": "https://api.github.com/repos/google/cpp-netlib/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/cpp-netlib/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/cpp-netlib/teams", "hooks_url": "https://api.github.com/repos/google/cpp-netlib/hooks", "issue_events_url": "https://api.github.com/repos/google/cpp-netlib/issues/events{/number}", "events_url": "https://api.github.com/repos/google/cpp-netlib/events", "assignees_url": "https://api.github.com/repos/google/cpp-netlib/assignees{/user}", "branches_url": "https://api.github.com/repos/google/cpp-netlib/branches{/branch}", "tags_url": "https://api.github.com/repos/google/cpp-netlib/tags", "blobs_url": "https://api.github.com/repos/google/cpp-netlib/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/cpp-netlib/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/cpp-netlib/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/cpp-netlib/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/cpp-netlib/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/cpp-netlib/languages", "stargazers_url": "https://api.github.com/repos/google/cpp-netlib/stargazers", "contributors_url": "https://api.github.com/repos/google/cpp-netlib/contributors", "subscribers_url": "https://api.github.com/repos/google/cpp-netlib/subscribers", "subscription_url": "https://api.github.com/repos/google/cpp-netlib/subscription", "commits_url": "https://api.github.com/repos/google/cpp-netlib/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/cpp-netlib/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/cpp-netlib/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/cpp-netlib/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/cpp-netlib/contents/{+path}", "compare_url": "https://api.github.com/repos/google/cpp-netlib/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/cpp-netlib/merges", "archive_url": "https://api.github.com/repos/google/cpp-netlib/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/cpp-netlib/downloads", "issues_url": "https://api.github.com/repos/google/cpp-netlib/issues{/number}", "pulls_url": "https://api.github.com/repos/google/cpp-netlib/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/cpp-netlib/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/cpp-netlib/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/cpp-netlib/labels{/name}", "releases_url": "https://api.github.com/repos/google/cpp-netlib/releases{/id}", "deployments_url": "https://api.github.com/repos/google/cpp-netlib/deployments", "created_at": "2013-01-23T14:45:32Z", "updated_at": "2022-04-12T21:44:18Z", "pushed_at": "2018-12-05T17:42:29Z", "git_url": "git://github.com/google/cpp-netlib.git", "ssh_url": "git@github.com:google/cpp-netlib.git", "clone_url": "https://github.com/google/cpp-netlib.git", "svn_url": "https://github.com/google/cpp-netlib", "homepage": "http://cpp-netlib.github.com/", "size": 8937, "stargazers_count": 334, "watchers_count": 334, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 67, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "bsl-1.0", "name": "Boost Software License 1.0", "spdx_id": "BSL-1.0", "url": "https://api.github.com/licenses/bsl-1.0", "node_id": "MDc6TGljZW5zZTI4"}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 67, "open_issues": 0, "watchers": 334, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 7968417, "node_id": "MDEwOlJlcG9zaXRvcnk3OTY4NDE3", "name": "dagger", "full_name": "google/dagger", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/dagger", "description": "A fast dependency injector for Android and Java.", "fork": true, "url": "https://api.github.com/repos/google/dagger", "forks_url": "https://api.github.com/repos/google/dagger/forks", "keys_url": "https://api.github.com/repos/google/dagger/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/dagger/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/dagger/teams", "hooks_url": "https://api.github.com/repos/google/dagger/hooks", "issue_events_url": "https://api.github.com/repos/google/dagger/issues/events{/number}", "events_url": "https://api.github.com/repos/google/dagger/events", "assignees_url": "https://api.github.com/repos/google/dagger/assignees{/user}", "branches_url": "https://api.github.com/repos/google/dagger/branches{/branch}", "tags_url": "https://api.github.com/repos/google/dagger/tags", "blobs_url": "https://api.github.com/repos/google/dagger/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/dagger/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/dagger/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/dagger/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/dagger/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/dagger/languages", "stargazers_url": "https://api.github.com/repos/google/dagger/stargazers", "contributors_url": "https://api.github.com/repos/google/dagger/contributors", "subscribers_url": "https://api.github.com/repos/google/dagger/subscribers", "subscription_url": "https://api.github.com/repos/google/dagger/subscription", "commits_url": "https://api.github.com/repos/google/dagger/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/dagger/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/dagger/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/dagger/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/dagger/contents/{+path}", "compare_url": "https://api.github.com/repos/google/dagger/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/dagger/merges", "archive_url": "https://api.github.com/repos/google/dagger/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/dagger/downloads", "issues_url": "https://api.github.com/repos/google/dagger/issues{/number}", "pulls_url": "https://api.github.com/repos/google/dagger/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/dagger/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/dagger/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/dagger/labels{/name}", "releases_url": "https://api.github.com/repos/google/dagger/releases{/id}", "deployments_url": "https://api.github.com/repos/google/dagger/deployments", "created_at": "2013-02-01T23:14:14Z", "updated_at": "2022-05-18T14:15:55Z", "pushed_at": "2022-05-18T12:10:05Z", "git_url": "git://github.com/google/dagger.git", "ssh_url": "git@github.com:google/dagger.git", "clone_url": "https://github.com/google/dagger.git", "svn_url": "https://github.com/google/dagger", "homepage": "https://dagger.dev", "size": 79938, "stargazers_count": 16636, "watchers_count": 16636, "language": "Java", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 1958, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 231, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 1958, "open_issues": 231, "watchers": 16636, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 8165161, "node_id": "MDEwOlJlcG9zaXRvcnk4MTY1MTYx", "name": "ios-webkit-debug-proxy", "full_name": "google/ios-webkit-debug-proxy", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/ios-webkit-debug-proxy", "description": "A DevTools proxy (Chrome Remote Debugging Protocol) for iOS devices (Safari Remote Web Inspector).", "fork": false, "url": "https://api.github.com/repos/google/ios-webkit-debug-proxy", "forks_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/forks", "keys_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/teams", "hooks_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/hooks", "issue_events_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/issues/events{/number}", "events_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/events", "assignees_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/assignees{/user}", "branches_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/branches{/branch}", "tags_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/tags", "blobs_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/languages", "stargazers_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/stargazers", "contributors_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/contributors", "subscribers_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/subscribers", "subscription_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/subscription", "commits_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/contents/{+path}", "compare_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/merges", "archive_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/downloads", "issues_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/issues{/number}", "pulls_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/labels{/name}", "releases_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/releases{/id}", "deployments_url": "https://api.github.com/repos/google/ios-webkit-debug-proxy/deployments", "created_at": "2013-02-12T19:08:19Z", "updated_at": "2022-05-17T17:21:27Z", "pushed_at": "2022-04-16T16:08:01Z", "git_url": "git://github.com/google/ios-webkit-debug-proxy.git", "ssh_url": "git@github.com:google/ios-webkit-debug-proxy.git", "clone_url": "https://github.com/google/ios-webkit-debug-proxy.git", "svn_url": "https://github.com/google/ios-webkit-debug-proxy", "homepage": "", "size": 717, "stargazers_count": 5478, "watchers_count": 5478, "language": "C", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 460, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 26, "license": {"key": "bsd-3-clause", "name": "BSD 3-Clause \"New\" or \"Revised\" License", "spdx_id": "BSD-3-Clause", "url": "https://api.github.com/licenses/bsd-3-clause", "node_id": "MDc6TGljZW5zZTU="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 460, "open_issues": 26, "watchers": 5478, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 8459994, "node_id": "MDEwOlJlcG9zaXRvcnk4NDU5OTk0", "name": "google.github.io", "full_name": "google/google.github.io", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/google.github.io", "description": null, "fork": false, "url": "https://api.github.com/repos/google/google.github.io", "forks_url": "https://api.github.com/repos/google/google.github.io/forks", "keys_url": "https://api.github.com/repos/google/google.github.io/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/google.github.io/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/google.github.io/teams", "hooks_url": "https://api.github.com/repos/google/google.github.io/hooks", "issue_events_url": "https://api.github.com/repos/google/google.github.io/issues/events{/number}", "events_url": "https://api.github.com/repos/google/google.github.io/events", "assignees_url": "https://api.github.com/repos/google/google.github.io/assignees{/user}", "branches_url": "https://api.github.com/repos/google/google.github.io/branches{/branch}", "tags_url": "https://api.github.com/repos/google/google.github.io/tags", "blobs_url": "https://api.github.com/repos/google/google.github.io/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/google.github.io/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/google.github.io/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/google.github.io/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/google.github.io/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/google.github.io/languages", "stargazers_url": "https://api.github.com/repos/google/google.github.io/stargazers", "contributors_url": "https://api.github.com/repos/google/google.github.io/contributors", "subscribers_url": "https://api.github.com/repos/google/google.github.io/subscribers", "subscription_url": "https://api.github.com/repos/google/google.github.io/subscription", "commits_url": "https://api.github.com/repos/google/google.github.io/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/google.github.io/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/google.github.io/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/google.github.io/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/google.github.io/contents/{+path}", "compare_url": "https://api.github.com/repos/google/google.github.io/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/google.github.io/merges", "archive_url": "https://api.github.com/repos/google/google.github.io/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/google.github.io/downloads", "issues_url": "https://api.github.com/repos/google/google.github.io/issues{/number}", "pulls_url": "https://api.github.com/repos/google/google.github.io/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/google.github.io/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/google.github.io/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/google.github.io/labels{/name}", "releases_url": "https://api.github.com/repos/google/google.github.io/releases{/id}", "deployments_url": "https://api.github.com/repos/google/google.github.io/deployments", "created_at": "2013-02-27T16:21:19Z", "updated_at": "2022-05-18T14:31:00Z", "pushed_at": "2021-01-07T13:51:08Z", "git_url": "git://github.com/google/google.github.io.git", "ssh_url": "git@github.com:google/google.github.io.git", "clone_url": "https://github.com/google/google.github.io.git", "svn_url": "https://github.com/google/google.github.io", "homepage": null, "size": 8, "stargazers_count": 245, "watchers_count": 245, "language": "HTML", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": true, "forks_count": 65, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": null, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 65, "open_issues": 0, "watchers": 245, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 8566972, "node_id": "MDEwOlJlcG9zaXRvcnk4NTY2OTcy", "name": "kratu", "full_name": "google/kratu", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/kratu", "description": null, "fork": false, "url": "https://api.github.com/repos/google/kratu", "forks_url": "https://api.github.com/repos/google/kratu/forks", "keys_url": "https://api.github.com/repos/google/kratu/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/kratu/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/kratu/teams", "hooks_url": "https://api.github.com/repos/google/kratu/hooks", "issue_events_url": "https://api.github.com/repos/google/kratu/issues/events{/number}", "events_url": "https://api.github.com/repos/google/kratu/events", "assignees_url": "https://api.github.com/repos/google/kratu/assignees{/user}", "branches_url": "https://api.github.com/repos/google/kratu/branches{/branch}", "tags_url": "https://api.github.com/repos/google/kratu/tags", "blobs_url": "https://api.github.com/repos/google/kratu/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/kratu/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/kratu/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/kratu/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/kratu/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/kratu/languages", "stargazers_url": "https://api.github.com/repos/google/kratu/stargazers", "contributors_url": "https://api.github.com/repos/google/kratu/contributors", "subscribers_url": "https://api.github.com/repos/google/kratu/subscribers", "subscription_url": "https://api.github.com/repos/google/kratu/subscription", "commits_url": "https://api.github.com/repos/google/kratu/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/kratu/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/kratu/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/kratu/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/kratu/contents/{+path}", "compare_url": "https://api.github.com/repos/google/kratu/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/kratu/merges", "archive_url": "https://api.github.com/repos/google/kratu/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/kratu/downloads", "issues_url": "https://api.github.com/repos/google/kratu/issues{/number}", "pulls_url": "https://api.github.com/repos/google/kratu/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/kratu/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/kratu/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/kratu/labels{/name}", "releases_url": "https://api.github.com/repos/google/kratu/releases{/id}", "deployments_url": "https://api.github.com/repos/google/kratu/deployments", "created_at": "2013-03-04T22:52:33Z", "updated_at": "2021-12-21T19:21:18Z", "pushed_at": "2017-08-06T05:44:34Z", "git_url": "git://github.com/google/kratu.git", "ssh_url": "git@github.com:google/kratu.git", "clone_url": "https://github.com/google/kratu.git", "svn_url": "https://github.com/google/kratu", "homepage": null, "size": 1777, "stargazers_count": 283, "watchers_count": 283, "language": "JavaScript", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 38, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 38, "open_issues": 0, "watchers": 283, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 8858648, "node_id": "MDEwOlJlcG9zaXRvcnk4ODU4NjQ4", "name": "build-debian-cloud", "full_name": "google/build-debian-cloud", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/build-debian-cloud", "description": "Script to create Debian Squeeze & Wheezy Amazon Machine Images (AMIs) and Google Compute Engine images", "fork": true, "url": "https://api.github.com/repos/google/build-debian-cloud", "forks_url": "https://api.github.com/repos/google/build-debian-cloud/forks", "keys_url": "https://api.github.com/repos/google/build-debian-cloud/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/build-debian-cloud/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/build-debian-cloud/teams", "hooks_url": "https://api.github.com/repos/google/build-debian-cloud/hooks", "issue_events_url": "https://api.github.com/repos/google/build-debian-cloud/issues/events{/number}", "events_url": "https://api.github.com/repos/google/build-debian-cloud/events", "assignees_url": "https://api.github.com/repos/google/build-debian-cloud/assignees{/user}", "branches_url": "https://api.github.com/repos/google/build-debian-cloud/branches{/branch}", "tags_url": "https://api.github.com/repos/google/build-debian-cloud/tags", "blobs_url": "https://api.github.com/repos/google/build-debian-cloud/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/build-debian-cloud/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/build-debian-cloud/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/build-debian-cloud/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/build-debian-cloud/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/build-debian-cloud/languages", "stargazers_url": "https://api.github.com/repos/google/build-debian-cloud/stargazers", "contributors_url": "https://api.github.com/repos/google/build-debian-cloud/contributors", "subscribers_url": "https://api.github.com/repos/google/build-debian-cloud/subscribers", "subscription_url": "https://api.github.com/repos/google/build-debian-cloud/subscription", "commits_url": "https://api.github.com/repos/google/build-debian-cloud/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/build-debian-cloud/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/build-debian-cloud/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/build-debian-cloud/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/build-debian-cloud/contents/{+path}", "compare_url": "https://api.github.com/repos/google/build-debian-cloud/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/build-debian-cloud/merges", "archive_url": "https://api.github.com/repos/google/build-debian-cloud/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/build-debian-cloud/downloads", "issues_url": "https://api.github.com/repos/google/build-debian-cloud/issues{/number}", "pulls_url": "https://api.github.com/repos/google/build-debian-cloud/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/build-debian-cloud/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/build-debian-cloud/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/build-debian-cloud/labels{/name}", "releases_url": "https://api.github.com/repos/google/build-debian-cloud/releases{/id}", "deployments_url": "https://api.github.com/repos/google/build-debian-cloud/deployments", "created_at": "2013-03-18T16:32:00Z", "updated_at": "2021-12-23T15:37:00Z", "pushed_at": "2014-06-17T18:52:10Z", "git_url": "git://github.com/google/build-debian-cloud.git", "ssh_url": "git@github.com:google/build-debian-cloud.git", "clone_url": "https://github.com/google/build-debian-cloud.git", "svn_url": "https://github.com/google/build-debian-cloud", "homepage": "", "size": 986, "stargazers_count": 35, "watchers_count": 35, "language": "Shell", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": false, "has_pages": false, "forks_count": 23, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 23, "open_issues": 0, "watchers": 35, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 9060347, "node_id": "MDEwOlJlcG9zaXRvcnk5MDYwMzQ3", "name": "traceur-compiler", "full_name": "google/traceur-compiler", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/traceur-compiler", "description": "Traceur is a JavaScript.next-to-JavaScript-of-today compiler", "fork": false, "url": "https://api.github.com/repos/google/traceur-compiler", "forks_url": "https://api.github.com/repos/google/traceur-compiler/forks", "keys_url": "https://api.github.com/repos/google/traceur-compiler/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/traceur-compiler/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/traceur-compiler/teams", "hooks_url": "https://api.github.com/repos/google/traceur-compiler/hooks", "issue_events_url": "https://api.github.com/repos/google/traceur-compiler/issues/events{/number}", "events_url": "https://api.github.com/repos/google/traceur-compiler/events", "assignees_url": "https://api.github.com/repos/google/traceur-compiler/assignees{/user}", "branches_url": "https://api.github.com/repos/google/traceur-compiler/branches{/branch}", "tags_url": "https://api.github.com/repos/google/traceur-compiler/tags", "blobs_url": "https://api.github.com/repos/google/traceur-compiler/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/traceur-compiler/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/traceur-compiler/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/traceur-compiler/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/traceur-compiler/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/traceur-compiler/languages", "stargazers_url": "https://api.github.com/repos/google/traceur-compiler/stargazers", "contributors_url": "https://api.github.com/repos/google/traceur-compiler/contributors", "subscribers_url": "https://api.github.com/repos/google/traceur-compiler/subscribers", "subscription_url": "https://api.github.com/repos/google/traceur-compiler/subscription", "commits_url": "https://api.github.com/repos/google/traceur-compiler/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/traceur-compiler/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/traceur-compiler/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/traceur-compiler/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/traceur-compiler/contents/{+path}", "compare_url": "https://api.github.com/repos/google/traceur-compiler/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/traceur-compiler/merges", "archive_url": "https://api.github.com/repos/google/traceur-compiler/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/traceur-compiler/downloads", "issues_url": "https://api.github.com/repos/google/traceur-compiler/issues{/number}", "pulls_url": "https://api.github.com/repos/google/traceur-compiler/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/traceur-compiler/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/traceur-compiler/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/traceur-compiler/labels{/name}", "releases_url": "https://api.github.com/repos/google/traceur-compiler/releases{/id}", "deployments_url": "https://api.github.com/repos/google/traceur-compiler/deployments", "created_at": "2013-03-27T18:05:40Z", "updated_at": "2022-05-17T07:58:59Z", "pushed_at": "2022-04-27T15:06:06Z", "git_url": "git://github.com/google/traceur-compiler.git", "ssh_url": "git@github.com:google/traceur-compiler.git", "clone_url": "https://github.com/google/traceur-compiler.git", "svn_url": "https://github.com/google/traceur-compiler", "homepage": "", "size": 27487, "stargazers_count": 8164, "watchers_count": 8164, "language": "JavaScript", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 625, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 298, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 625, "open_issues": 298, "watchers": 8164, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 9065917, "node_id": "MDEwOlJlcG9zaXRvcnk5MDY1OTE3", "name": "firmata.py", "full_name": "google/firmata.py", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/firmata.py", "description": null, "fork": false, "url": "https://api.github.com/repos/google/firmata.py", "forks_url": "https://api.github.com/repos/google/firmata.py/forks", "keys_url": "https://api.github.com/repos/google/firmata.py/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/firmata.py/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/firmata.py/teams", "hooks_url": "https://api.github.com/repos/google/firmata.py/hooks", "issue_events_url": "https://api.github.com/repos/google/firmata.py/issues/events{/number}", "events_url": "https://api.github.com/repos/google/firmata.py/events", "assignees_url": "https://api.github.com/repos/google/firmata.py/assignees{/user}", "branches_url": "https://api.github.com/repos/google/firmata.py/branches{/branch}", "tags_url": "https://api.github.com/repos/google/firmata.py/tags", "blobs_url": "https://api.github.com/repos/google/firmata.py/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/firmata.py/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/firmata.py/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/firmata.py/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/firmata.py/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/firmata.py/languages", "stargazers_url": "https://api.github.com/repos/google/firmata.py/stargazers", "contributors_url": "https://api.github.com/repos/google/firmata.py/contributors", "subscribers_url": "https://api.github.com/repos/google/firmata.py/subscribers", "subscription_url": "https://api.github.com/repos/google/firmata.py/subscription", "commits_url": "https://api.github.com/repos/google/firmata.py/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/firmata.py/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/firmata.py/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/firmata.py/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/firmata.py/contents/{+path}", "compare_url": "https://api.github.com/repos/google/firmata.py/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/firmata.py/merges", "archive_url": "https://api.github.com/repos/google/firmata.py/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/firmata.py/downloads", "issues_url": "https://api.github.com/repos/google/firmata.py/issues{/number}", "pulls_url": "https://api.github.com/repos/google/firmata.py/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/firmata.py/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/firmata.py/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/firmata.py/labels{/name}", "releases_url": "https://api.github.com/repos/google/firmata.py/releases{/id}", "deployments_url": "https://api.github.com/repos/google/firmata.py/deployments", "created_at": "2013-03-27T23:20:35Z", "updated_at": "2021-12-20T16:06:49Z", "pushed_at": "2013-03-27T23:34:35Z", "git_url": "git://github.com/google/firmata.py.git", "ssh_url": "git@github.com:google/firmata.py.git", "clone_url": "https://github.com/google/firmata.py.git", "svn_url": "https://github.com/google/firmata.py", "homepage": null, "size": 160, "stargazers_count": 20, "watchers_count": 20, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 23, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 23, "open_issues": 0, "watchers": 20, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}, {"id": 9402340, "node_id": "MDEwOlJlcG9zaXRvcnk5NDAyMzQw", "name": "vector_math.dart", "full_name": "google/vector_math.dart", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/vector_math.dart", "description": "A vector math package for 2D and 3D applications", "fork": false, "url": "https://api.github.com/repos/google/vector_math.dart", "forks_url": "https://api.github.com/repos/google/vector_math.dart/forks", "keys_url": "https://api.github.com/repos/google/vector_math.dart/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/vector_math.dart/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/vector_math.dart/teams", "hooks_url": "https://api.github.com/repos/google/vector_math.dart/hooks", "issue_events_url": "https://api.github.com/repos/google/vector_math.dart/issues/events{/number}", "events_url": "https://api.github.com/repos/google/vector_math.dart/events", "assignees_url": "https://api.github.com/repos/google/vector_math.dart/assignees{/user}", "branches_url": "https://api.github.com/repos/google/vector_math.dart/branches{/branch}", "tags_url": "https://api.github.com/repos/google/vector_math.dart/tags", "blobs_url": "https://api.github.com/repos/google/vector_math.dart/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/vector_math.dart/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/vector_math.dart/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/vector_math.dart/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/vector_math.dart/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/vector_math.dart/languages", "stargazers_url": "https://api.github.com/repos/google/vector_math.dart/stargazers", "contributors_url": "https://api.github.com/repos/google/vector_math.dart/contributors", "subscribers_url": "https://api.github.com/repos/google/vector_math.dart/subscribers", "subscription_url": "https://api.github.com/repos/google/vector_math.dart/subscription", "commits_url": "https://api.github.com/repos/google/vector_math.dart/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/vector_math.dart/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/vector_math.dart/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/vector_math.dart/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/vector_math.dart/contents/{+path}", "compare_url": "https://api.github.com/repos/google/vector_math.dart/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/vector_math.dart/merges", "archive_url": "https://api.github.com/repos/google/vector_math.dart/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/vector_math.dart/downloads", "issues_url": "https://api.github.com/repos/google/vector_math.dart/issues{/number}", "pulls_url": "https://api.github.com/repos/google/vector_math.dart/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/vector_math.dart/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/vector_math.dart/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/vector_math.dart/labels{/name}", "releases_url": "https://api.github.com/repos/google/vector_math.dart/releases{/id}", "deployments_url": "https://api.github.com/repos/google/vector_math.dart/deployments", "created_at": "2013-04-12T19:46:07Z", "updated_at": "2022-05-06T22:41:29Z", "pushed_at": "2022-05-16T16:27:50Z", "git_url": "git://github.com/google/vector_math.dart.git", "ssh_url": "git@github.com:google/vector_math.dart.git", "clone_url": "https://github.com/google/vector_math.dart.git", "svn_url": "https://github.com/google/vector_math.dart", "homepage": "https://pub.dev/packages/vector_math", "size": 2864, "stargazers_count": 248, "watchers_count": 248, "language": "Dart", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 72, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 14, "license": {"key": "other", "name": "Other", "spdx_id": "NOASSERTION", "url": null, "node_id": "MDc6TGljZW5zZTA="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 72, "open_issues": 14, "watchers": 248, "default_branch": "master", "permissions": {"admin": false, "maintain": false, "push": false, "triage": false, "pull": true}}], "events_url": [{"id": "21858502436", "type": "IssuesEvent", "actor": {"id": 228050, "login": "gino-m", "display_login": "gino-m", "gravatar_id": "", "url": "https://api.github.com/users/gino-m", "avatar_url": "https://avatars.githubusercontent.com/u/228050?"}, "repo": {"id": 127777820, "name": "google/ground-android", "url": "https://api.github.com/repos/google/ground-android"}, "payload": {"action": "opened", "issue": {"url": "https://api.github.com/repos/google/ground-android/issues/1123", "repository_url": "https://api.github.com/repos/google/ground-android", "labels_url": "https://api.github.com/repos/google/ground-android/issues/1123/labels{/name}", "comments_url": "https://api.github.com/repos/google/ground-android/issues/1123/comments", "events_url": "https://api.github.com/repos/google/ground-android/issues/1123/events", "html_url": "https://github.com/google/ground-android/issues/1123", "id": 1240169200, "node_id": "I_kwDOB528HM5J63rw", "number": 1123, "title": "[Map] Remove \"+\" fab", "user": {"login": "gino-m", "id": 228050, "node_id": "MDQ6VXNlcjIyODA1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/228050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gino-m", "html_url": "https://github.com/gino-m", "followers_url": "https://api.github.com/users/gino-m/followers", "following_url": "https://api.github.com/users/gino-m/following{/other_user}", "gists_url": "https://api.github.com/users/gino-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/gino-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gino-m/subscriptions", "organizations_url": "https://api.github.com/users/gino-m/orgs", "repos_url": "https://api.github.com/users/gino-m/repos", "events_url": "https://api.github.com/users/gino-m/events{/privacy}", "received_events_url": "https://api.github.com/users/gino-m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-18T15:52:36Z", "updated_at": "2022-05-18T15:52:36Z", "closed_at": null, "author_association": "COLLABORATOR", "active_lock_reason": null, "body": null, "reactions": {"url": "https://api.github.com/repos/google/ground-android/issues/1123/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/google/ground-android/issues/1123/timeline", "performed_via_github_app": null}}, "public": true, "created_at": "2022-05-18T15:52:37Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858496543", "type": "WatchEvent", "actor": {"id": 2090758, "login": "hyshka", "display_login": "hyshka", "gravatar_id": "", "url": "https://api.github.com/users/hyshka", "avatar_url": "https://avatars.githubusercontent.com/u/2090758?"}, "repo": {"id": 440909617, "name": "google/wireit", "url": "https://api.github.com/repos/google/wireit"}, "payload": {"action": "started"}, "public": true, "created_at": "2022-05-18T15:52:20Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858487681", "type": "WatchEvent", "actor": {"id": 87385775, "login": "TranQuocToan1996", "display_login": "TranQuocToan1996", "gravatar_id": "", "url": "https://api.github.com/users/TranQuocToan1996", "avatar_url": "https://avatars.githubusercontent.com/u/87385775?"}, "repo": {"id": 96570421, "name": "google/go-cmp", "url": "https://api.github.com/repos/google/go-cmp"}, "payload": {"action": "started"}, "public": true, "created_at": "2022-05-18T15:51:55Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858481981", "type": "IssuesEvent", "actor": {"id": 228050, "login": "gino-m", "display_login": "gino-m", "gravatar_id": "", "url": "https://api.github.com/users/gino-m", "avatar_url": "https://avatars.githubusercontent.com/u/228050?"}, "repo": {"id": 131027760, "name": "google/ground-platform", "url": "https://api.github.com/repos/google/ground-platform"}, "payload": {"action": "opened", "issue": {"url": "https://api.github.com/repos/google/ground-platform/issues/867", "repository_url": "https://api.github.com/repos/google/ground-platform", "labels_url": "https://api.github.com/repos/google/ground-platform/issues/867/labels{/name}", "comments_url": "https://api.github.com/repos/google/ground-platform/issues/867/comments", "events_url": "https://api.github.com/repos/google/ground-platform/issues/867/events", "html_url": "https://github.com/google/ground-platform/issues/867", "id": 1240167055, "node_id": "I_kwDOB89TMM5J63KP", "number": 867, "title": "[Migration] Rename Firestore collection, doc, and string references", "user": {"login": "gino-m", "id": 228050, "node_id": "MDQ6VXNlcjIyODA1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/228050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gino-m", "html_url": "https://github.com/gino-m", "followers_url": "https://api.github.com/users/gino-m/followers", "following_url": "https://api.github.com/users/gino-m/following{/other_user}", "gists_url": "https://api.github.com/users/gino-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/gino-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gino-m/subscriptions", "organizations_url": "https://api.github.com/users/gino-m/orgs", "repos_url": "https://api.github.com/users/gino-m/repos", "events_url": "https://api.github.com/users/gino-m/events{/privacy}", "received_events_url": "https://api.github.com/users/gino-m/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1129258558, "node_id": "MDU6TGFiZWwxMTI5MjU4NTU4", "url": "https://api.github.com/repos/google/ground-platform/labels/cloud%20functions", "name": "cloud functions", "color": "eeeeff", "default": false, "description": "Server-side Cloud Functions hosted in Firebase, including database triggers"}, {"id": 1129259233, "node_id": "MDU6TGFiZWwxMTI5MjU5MjMz", "url": "https://api.github.com/repos/google/ground-platform/labels/web", "name": "web", "color": "eeffee", "default": false, "description": "Angular implementation of Web UI"}, {"id": 1131494154, "node_id": "MDU6TGFiZWwxMTMxNDk0MTU0", "url": "https://api.github.com/repos/google/ground-platform/labels/firestore", "name": "firestore", "color": "F7CC4E", "default": false, "description": "Issues relating to database setting, configuration, management, etc."}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-18T15:51:38Z", "updated_at": "2022-05-18T15:51:38Z", "closed_at": null, "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "To be applied to web, Cloud Functions, and rules:\r\n\r\n- [ ] projects -> surveys\r\n- [ ] layers -> jobs\r\n- [ ] forms -> tasks \r\n- [ ] features -> lois\r\n- [ ] question -> step\r\n- [ ] observation -> submission\r\n- [ ] manager -> survey-organizer\r\n- [ ] contributor -> data-collector\r\n", "reactions": {"url": "https://api.github.com/repos/google/ground-platform/issues/867/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/google/ground-platform/issues/867/timeline", "performed_via_github_app": null}}, "public": true, "created_at": "2022-05-18T15:51:38Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858468559", "type": "WatchEvent", "actor": {"id": 41895063, "login": "minjung-s", "display_login": "minjung-s", "gravatar_id": "", "url": "https://api.github.com/users/minjung-s", "avatar_url": "https://avatars.githubusercontent.com/u/41895063?"}, "repo": {"id": 331759533, "name": "google/nerfies", "url": "https://api.github.com/repos/google/nerfies"}, "payload": {"action": "started"}, "public": true, "created_at": "2022-05-18T15:50:59Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858447146", "type": "IssueCommentEvent", "actor": {"id": 73545194, "login": "wpdarren", "display_login": "wpdarren", "gravatar_id": "", "url": "https://api.github.com/users/wpdarren", "avatar_url": "https://avatars.githubusercontent.com/u/73545194?"}, "repo": {"id": 191387173, "name": "google/site-kit-wp", "url": "https://api.github.com/repos/google/site-kit-wp"}, "payload": {"action": "created", "issue": {"url": "https://api.github.com/repos/google/site-kit-wp/issues/5204", "repository_url": "https://api.github.com/repos/google/site-kit-wp", "labels_url": "https://api.github.com/repos/google/site-kit-wp/issues/5204/labels{/name}", "comments_url": "https://api.github.com/repos/google/site-kit-wp/issues/5204/comments", "events_url": "https://api.github.com/repos/google/site-kit-wp/issues/5204/events", "html_url": "https://github.com/google/site-kit-wp/issues/5204", "id": 1234190191, "node_id": "I_kwDOC2hWJc5JkD9v", "number": 5204, "title": "Merge Existing Tag Simplification", "user": {"login": "aaemnnosttv", "id": 1621608, "node_id": "MDQ6VXNlcjE2MjE2MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1621608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaemnnosttv", "html_url": "https://github.com/aaemnnosttv", "followers_url": "https://api.github.com/users/aaemnnosttv/followers", "following_url": "https://api.github.com/users/aaemnnosttv/following{/other_user}", "gists_url": "https://api.github.com/users/aaemnnosttv/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaemnnosttv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaemnnosttv/subscriptions", "organizations_url": "https://api.github.com/users/aaemnnosttv/orgs", "repos_url": "https://api.github.com/users/aaemnnosttv/repos", "events_url": "https://api.github.com/users/aaemnnosttv/events{/privacy}", "received_events_url": "https://api.github.com/users/aaemnnosttv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1412247193, "node_id": "MDU6TGFiZWwxNDEyMjQ3MTkz", "url": "https://api.github.com/repos/google/site-kit-wp/labels/P0", "name": "P0", "color": "ef8783", "default": false, "description": "High priority"}, {"id": 1425834856, "node_id": "MDU6TGFiZWwxNDI1ODM0ODU2", "url": "https://api.github.com/repos/google/site-kit-wp/labels/Type:%20Enhancement", "name": "Type: Enhancement", "color": "c5def5", "default": false, "description": "Improvement of an existing feature"}, {"id": 2338632990, "node_id": "MDU6TGFiZWwyMzM4NjMyOTkw", "url": "https://api.github.com/repos/google/site-kit-wp/labels/Module:%20Analytics", "name": "Module: Analytics", "color": "f2aa03", "default": false, "description": "Google Analytics module related issues"}, {"id": 2340690998, "node_id": "MDU6TGFiZWwyMzQwNjkwOTk4", "url": "https://api.github.com/repos/google/site-kit-wp/labels/Module:%20AdSense", "name": "Module: AdSense", "color": "adffc1", "default": false, "description": "Google AdSense module related issues"}, {"id": 2340699699, "node_id": "MDU6TGFiZWwyMzQwNjk5Njk5", "url": "https://api.github.com/repos/google/site-kit-wp/labels/Module:%20Tag%20Manager", "name": "Module: Tag Manager", "color": "bbf492", "default": false, "description": "Google Tag Manager module related issues"}], "state": "open", "locked": false, "assignee": {"login": "wpdarren", "id": 73545194, "node_id": "MDQ6VXNlcjczNTQ1MTk0", "avatar_url": "https://avatars.githubusercontent.com/u/73545194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wpdarren", "html_url": "https://github.com/wpdarren", "followers_url": "https://api.github.com/users/wpdarren/followers", "following_url": "https://api.github.com/users/wpdarren/following{/other_user}", "gists_url": "https://api.github.com/users/wpdarren/gists{/gist_id}", "starred_url": "https://api.github.com/users/wpdarren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wpdarren/subscriptions", "organizations_url": "https://api.github.com/users/wpdarren/orgs", "repos_url": "https://api.github.com/users/wpdarren/repos", "events_url": "https://api.github.com/users/wpdarren/events{/privacy}", "received_events_url": "https://api.github.com/users/wpdarren/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "wpdarren", "id": 73545194, "node_id": "MDQ6VXNlcjczNTQ1MTk0", "avatar_url": "https://avatars.githubusercontent.com/u/73545194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wpdarren", "html_url": "https://github.com/wpdarren", "followers_url": "https://api.github.com/users/wpdarren/followers", "following_url": "https://api.github.com/users/wpdarren/following{/other_user}", "gists_url": "https://api.github.com/users/wpdarren/gists{/gist_id}", "starred_url": "https://api.github.com/users/wpdarren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wpdarren/subscriptions", "organizations_url": "https://api.github.com/users/wpdarren/orgs", "repos_url": "https://api.github.com/users/wpdarren/repos", "events_url": "https://api.github.com/users/wpdarren/events{/privacy}", "received_events_url": "https://api.github.com/users/wpdarren/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2022-05-12T15:56:17Z", "updated_at": "2022-05-18T15:49:58Z", "closed_at": null, "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The https://github.com/google/site-kit-wp/tree/feature/existing-tag-simplification branch should be merged into `develop`.\r\n\r\n---------------\r\n\r\n_Do not alter or remove anything below. The following sections will be managed by moderators only._\r\n\r\n## Acceptance criteria\r\n\r\n* The https://github.com/google/site-kit-wp/tree/feature/existing-tag-simplification branch should be merged into `develop`.\r\n\r\n## Implementation Brief\r\n\r\n* Merge #4893 \r\n\r\n### Test Coverage\r\n\r\n* N/A\r\n\r\n## QA Brief\r\n\r\n* This issue brings the existing tag simplification work into the upcoming release\r\n* Nothing regarding ETS behavior should change from the previous round of testing \r\n\r\n## Changelog entry\r\n\r\n* Simplify module setup and settings management involving existing tags.\r\n", "reactions": {"url": "https://api.github.com/repos/google/site-kit-wp/issues/5204/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/google/site-kit-wp/issues/5204/timeline", "performed_via_github_app": null}, "comment": {"url": "https://api.github.com/repos/google/site-kit-wp/issues/comments/1130192442", "html_url": "https://github.com/google/site-kit-wp/issues/5204#issuecomment-1130192442", "issue_url": "https://api.github.com/repos/google/site-kit-wp/issues/5204", "id": 1130192442, "node_id": "IC_kwDOC2hWJc5DXV46", "user": {"login": "wpdarren", "id": 73545194, "node_id": "MDQ6VXNlcjczNTQ1MTk0", "avatar_url": "https://avatars.githubusercontent.com/u/73545194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wpdarren", "html_url": "https://github.com/wpdarren", "followers_url": "https://api.github.com/users/wpdarren/followers", "following_url": "https://api.github.com/users/wpdarren/following{/other_user}", "gists_url": "https://api.github.com/users/wpdarren/gists{/gist_id}", "starred_url": "https://api.github.com/users/wpdarren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wpdarren/subscriptions", "organizations_url": "https://api.github.com/users/wpdarren/orgs", "repos_url": "https://api.github.com/users/wpdarren/repos", "events_url": "https://api.github.com/users/wpdarren/events{/privacy}", "received_events_url": "https://api.github.com/users/wpdarren/received_events", "type": "User", "site_admin": false}, "created_at": "2022-05-18T15:49:57Z", "updated_at": "2022-05-18T15:49:57Z", "author_association": "COLLABORATOR", "body": "QA Update: \u26a0\ufe0f \r\n\r\n@aaemnnosttv @kuasha420 when I tested this earlier today for `Existing UA tag matches selected primary UA tag` the UA snippet was disabled by default, which is expected. I have just re-tested this with a new site, the UA snippet is enabled by default. Do you think the settings fix we've just implemented could impact this? \r\n\r\n![image](https://user-images.githubusercontent.com/73545194/169086013-7bf4a7a6-0ac7-484a-9a8a-1067ae30454c.png)\r\n\r\nI'm going to continue to test the scenarios to find any other issues, but wanted to highlight this. \r\n", "reactions": {"url": "https://api.github.com/repos/google/site-kit-wp/issues/comments/1130192442/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "performed_via_github_app": null}}, "public": true, "created_at": "2022-05-18T15:49:58Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858401384", "type": "IssueCommentEvent", "actor": {"id": 47663858, "login": "IrisPeter", "display_login": "IrisPeter", "gravatar_id": "", "url": "https://api.github.com/users/IrisPeter", "avatar_url": "https://avatars.githubusercontent.com/u/47663858?"}, "repo": {"id": 20900043, "name": "google/fruit", "url": "https://api.github.com/repos/google/fruit"}, "payload": {"action": "created", "issue": {"url": "https://api.github.com/repos/google/fruit/issues/138", "repository_url": "https://api.github.com/repos/google/fruit", "labels_url": "https://api.github.com/repos/google/fruit/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/google/fruit/issues/138/comments", "events_url": "https://api.github.com/repos/google/fruit/issues/138/events", "html_url": "https://github.com/google/fruit/issues/138", "id": 1135707989, "node_id": "I_kwDOAT7oy85DsYdV", "number": 138, "title": "Fruit does not build in Visual Studio Versions 2019, 2022 or 2022 Preview with CMake", "user": {"login": "IrisPeter", "id": 47663858, "node_id": "MDQ6VXNlcjQ3NjYzODU4", "avatar_url": "https://avatars.githubusercontent.com/u/47663858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IrisPeter", "html_url": "https://github.com/IrisPeter", "followers_url": "https://api.github.com/users/IrisPeter/followers", "following_url": "https://api.github.com/users/IrisPeter/following{/other_user}", "gists_url": "https://api.github.com/users/IrisPeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/IrisPeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IrisPeter/subscriptions", "organizations_url": "https://api.github.com/users/IrisPeter/orgs", "repos_url": "https://api.github.com/users/IrisPeter/repos", "events_url": "https://api.github.com/users/IrisPeter/events{/privacy}", "received_events_url": "https://api.github.com/users/IrisPeter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2022-02-13T11:38:24Z", "updated_at": "2022-05-18T15:47:46Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I need to build fruit on Windows with the MSVC Compiler, whilst it works fine with GCC in WSL, when building under windows there are 3 errors:\r\n\r\nError 1\r\n`  FAILED: examples/scaling_doubles/CMakeFiles/scaling.dir/scaler.cpp.obj \r\n  C:\\PROGRA~1\\MIB055~1\\2022\\PROFES~1\\VC\\Tools\\MSVC\\1430~1.307\\bin\\Hostx64\\x64\\cl.exe  /nologo /TP  -IC:\\ExtBuildUtils\\Boost\\boost_1_78_0 -I\"F:\\VisualStudio Projects\\Libraries\\fruit\\include\" -I\"F:\\VisualStudio Projects\\Libraries\\fruit\\out\\build\\windows-default\\include\" /DWIN32 /D_WINDOWS /EHsc /Zi /Ob0 /Od /RTC1 -MDd    /nologo /FS /W4 /wd4324 /wd4709 /wd4459 /wd4141 /wd4714 /wd4577 /wd4530 /wd5205 /D_SCL_SECURE_NO_WARNINGS /showIncludes /Foexamples\\scaling_doubles\\CMakeFiles\\scaling.dir\\scaler.cpp.obj /Fdexamples\\scaling_doubles\\CMakeFiles\\scaling.dir\\ /FS -c \"F:\\VisualStudio Projects\\Libraries\\fruit\\examples\\scaling_doubles\\scaler.cpp\"\r\nF:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit\\impl\\component_functors.defn.h(454): error C2440: '<function-style-cast>': cannot convert from 'initializer list' to 'fruit::impl::meta::RegisterFactoryHelper::apply<MetaExpr,fruit::impl::meta::Type<ReturnType (fruit::Assisted<double>,Multiplier *)>,fruit::impl::meta::Type<fruit::impl::meta::RegisterConstructorAsUniquePtrFactory::apply<MetaExpr,fruit::impl::meta::Type<ReturnType (fruit::Assisted<double>,Multiplier *)>,fruit::impl::meta::Type<ReturnType (double,Multiplier *)>>::Op::()::<lambda_aa5d8e12306951438d3faeeff2cad75d>>,fruit::impl::meta::Type<ReturnType (double)>,fruit::impl::meta::Type<ReturnType (double,Multiplier *)>,fruit::impl::meta::Vector<T>,fruit::impl::meta::Vector<T>,fruit::impl::meta::Vector<fruit::impl::meta::Int<0>,fruit::impl::meta::Int<1>>>::Op::()::<lambda_d7bce2ccaf431ac65c27230ad51fdb66>::()::<lambda_98f4ee469026525ea06aa04b20f1f8e1>'\r\n          with\r\n          [\r\n              MetaExpr=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              ReturnType=std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>>,\r\n              T=fruit::impl::meta::Type<Multiplier *>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/component_functors.defn.h(454): note: No constructor could take the source type, or constructor overload resolution was ambiguous\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/component_functors.defn.h(438): note: while compiling class template member function 'void fruit::impl::meta::RegisterFactoryHelper::apply<MetaExpr,fruit::impl::meta::Type<ReturnType (fruit::Assisted<double>,Multiplier *)>,fruit::impl::meta::Type<fruit::impl::meta::RegisterConstructorAsUniquePtrFactory::apply<MetaExpr,fruit::impl::meta::Type<ReturnType (fruit::Assisted<double>,Multiplier *)>,fruit::impl::meta::Type<ReturnType (double,Multiplier *)>>::Op::()::<lambda_aa5d8e12306951438d3faeeff2cad75d>>,fruit::impl::meta::Type<ReturnType (double)>,fruit::impl::meta::Type<ReturnType (double,Multiplier *)>,fruit::impl::meta::Vector<T>,fruit::impl::meta::Vector<T>,fruit::impl::meta::Vector<fruit::impl::meta::Int<0>,fruit::impl::meta::Int<1>>>::Op::operator ()(fruit::impl::FixedSizeVector<fruit::impl::ComponentStorageEntry,std::allocator<fruit::impl::ComponentStorageEntry>> &)'\r\n          with\r\n          [\r\n              MetaExpr=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              ReturnType=std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>>,\r\n              T=fruit::impl::meta::Type<Multiplier *>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/component_functors.defn.h(667): note: see reference to function template instantiation 'void fruit::impl::meta::RegisterFactoryHelper::apply<MetaExpr,fruit::impl::meta::Type<ReturnType (fruit::Assisted<double>,Multiplier *)>,fruit::impl::meta::Type<fruit::impl::meta::RegisterConstructorAsUniquePtrFactory::apply<MetaExpr,fruit::impl::meta::Type<ReturnType (fruit::Assisted<double>,Multiplier *)>,fruit::impl::meta::Type<ReturnType (double,Multiplier *)>>::Op::()::<lambda_aa5d8e12306951438d3faeeff2cad75d>>,fruit::impl::meta::Type<ReturnType (double)>,fruit::impl::meta::Type<ReturnType (double,Multiplier *)>,fruit::impl::meta::Vector<T>,fruit::impl::meta::Vector<T>,fruit::impl::meta::Vector<fruit::impl::meta::Int<0>,fruit::impl::meta::Int<1>>>::Op::operator ()(fruit::impl::FixedSizeVector<fruit::impl::ComponentStorageEntry,std::allocator<fruit::impl::ComponentStorageEntry>> &)' being compiled\r\n          with\r\n          [\r\n              MetaExpr=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              ReturnType=std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>>,\r\n              T=fruit::impl::meta::Type<Multiplier *>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/component_functors.defn.h(667): note: see reference to class template instantiation 'fruit::impl::meta::RegisterFactoryHelper::apply<MetaExpr,fruit::impl::meta::Type<ReturnType (fruit::Assisted<double>,Multiplier *)>,fruit::impl::meta::Type<fruit::impl::meta::RegisterConstructorAsUniquePtrFactory::apply<MetaExpr,fruit::impl::meta::Type<ReturnType (fruit::Assisted<double>,Multiplier *)>,fruit::impl::meta::Type<ReturnType (double,Multiplier *)>>::Op::()::<lambda_aa5d8e12306951438d3faeeff2cad75d>>,fruit::impl::meta::Type<ReturnType (double)>,fruit::impl::meta::Type<ReturnType (double,Multiplier *)>,fruit::impl::meta::Vector<T>,fruit::impl::meta::Vector<T>,fruit::impl::meta::Vector<fruit::impl::meta::Int<0>,fruit::impl::meta::Int<1>>>::Op' being compiled\r\n          with\r\n          [\r\n              MetaExpr=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              ReturnType=std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>>,\r\n              T=fruit::impl::meta::Type<Multiplier *>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/component_functors.defn.h(661): note: while compiling class template member function 'void fruit::impl::meta::RegisterConstructorAsUniquePtrFactory::apply<MetaExpr,fruit::impl::meta::Type<ReturnType (fruit::Assisted<double>,Multiplier *)>,fruit::impl::meta::Type<ReturnType (double,Multiplier *)>>::Op::operator ()(fruit::impl::FixedSizeVector<fruit::impl::ComponentStorageEntry,std::allocator<T>> &)'\r\n          with\r\n          [\r\n              MetaExpr=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              ReturnType=std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>>,\r\n              T=fruit::impl::ComponentStorageEntry\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/component_functors.defn.h(87): note: see reference to function template instantiation 'void fruit::impl::meta::RegisterConstructorAsUniquePtrFactory::apply<MetaExpr,fruit::impl::meta::Type<ReturnType (fruit::Assisted<double>,Multiplier *)>,fruit::impl::meta::Type<ReturnType (double,Multiplier *)>>::Op::operator ()(fruit::impl::FixedSizeVector<fruit::impl::ComponentStorageEntry,std::allocator<T>> &)' being compiled\r\n          with\r\n          [\r\n              MetaExpr=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              ReturnType=std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>>,\r\n              T=fruit::impl::ComponentStorageEntry\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/component_functors.defn.h(44): note: see reference to class template instantiation 'fruit::impl::meta::RegisterConstructorAsUniquePtrFactory::apply<MetaExpr,fruit::impl::meta::Type<ReturnType (fruit::Assisted<double>,Multiplier *)>,fruit::impl::meta::Type<ReturnType (double,Multiplier *)>>::Op' being compiled\r\n          with\r\n          [\r\n              MetaExpr=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              ReturnType=std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(102): note: see reference to class template instantiation 'fruit::impl::meta::GetResult::apply<fruit::impl::meta::RegisterConstructorAsUniquePtrFactory::apply<MetaExpr,fruit::impl::meta::Type<ReturnType (fruit::Assisted<double>,Multiplier *)>,fruit::impl::meta::Type<ReturnType (double,Multiplier *)>>::Op>' being compiled\r\n          with\r\n          [\r\n              MetaExpr=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              ReturnType=std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/component_functors.defn.h(85): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::GetResult (fruit::impl::meta::ComponentFunctor::apply<MetaExpr,fruit::impl::meta::Type<ReturnType (fruit::Assisted<double>,Multiplier *)>>::type (__cdecl *)(fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(Comp))))>' being compiled\r\n          with\r\n          [\r\n              MetaExpr=fruit::impl::meta::RegisterConstructorAsUniquePtrFactory,\r\n              ReturnType=std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>>,\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/component_functors.defn.h(85): note: see reference to alias template instantiation 'fruit::impl::meta::Eval<fruit::impl::meta::GetResult(fruit::impl::meta::ComponentFunctor::apply<MetaExpr,fruit::impl::meta::Type<ReturnType (fruit::Assisted<double>,Multiplier *)>>::type (__cdecl *)(fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(Comp))))>' being compiled\r\n          with\r\n          [\r\n              MetaExpr=fruit::impl::meta::RegisterConstructorAsUniquePtrFactory,\r\n              ReturnType=std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>>,\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/component_functors.defn.h(44): note: see reference to class template instantiation 'fruit::impl::meta::Compose2ComponentFunctors::apply<InitialValue,T0>::type::apply<MetaExpr>::Op' being compiled\r\n          with\r\n          [\r\n              InitialValue=fruit::impl::meta::ComponentFunctorIdentity,\r\n              T0=fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::RegisterConstructorAsUniquePtrFactory,fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (fruit::Assisted<double>,Multiplier *)>>::type,\r\n              MetaExpr=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(117): note: see reference to class template instantiation 'fruit::impl::meta::GetResult::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<InitialValue,T0>::type::apply<MetaExpr>::Op>' being compiled\r\n          with\r\n          [\r\n              InitialValue=fruit::impl::meta::ComponentFunctorIdentity,\r\n              T0=fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::RegisterConstructorAsUniquePtrFactory,fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (fruit::Assisted<double>,Multiplier *)>>::type,\r\n              MetaExpr=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(117): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::Compose2ComponentFunctors::apply<InitialValue,T0>::type (__cdecl *)(Comp))>' being compiled\r\n          with\r\n          [\r\n              InitialValue=fruit::impl::meta::ComponentFunctorIdentity,\r\n              T0=fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::RegisterConstructorAsUniquePtrFactory,fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (fruit::Assisted<double>,Multiplier *)>>::type,\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(249): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<MaybeErrorMetaExpr>' being compiled\r\n          with\r\n          [\r\n              MaybeErrorMetaExpr=fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::EnsureProvidedTypes,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>>::type (__cdecl *)(fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctorIdentity,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::RegisterConstructorAsUniquePtrFactory,fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (fruit::Assisted<double>,Multiplier *)>>::type>::type (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>)))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(220): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ElseMetaExpr=fruit::impl::meta::PropagateError (__cdecl *)(fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::EnsureProvidedTypes,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>>::type (__cdecl *)(fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctorIdentity,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::RegisterConstructorAsUniquePtrFactory,fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (fruit::Assisted<double>,Multiplier *)>>::type>::type (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>))),fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctorIdentity,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::RegisterConstructorAsUniquePtrFactory,fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (fruit::Assisted<double>,Multiplier *)>>::type>::type,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::EnsureProvidedTypes,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>>::type>::type::apply<fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>>::Op)\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(236): note: see reference to class template instantiation 'fruit::impl::meta::EvalPropagateError<fruit::impl::meta::Compose2ComponentFunctors::apply<InitialValue,T0>::type::apply<MetaExpr>::Op,ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              InitialValue=fruit::impl::meta::ComponentFunctorIdentity,\r\n              T0=fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::RegisterConstructorAsUniquePtrFactory,fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (fruit::Assisted<double>,Multiplier *)>>::type,\r\n              MetaExpr=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              ElseMetaExpr=fruit::impl::meta::PropagateError (__cdecl *)(fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::EnsureProvidedTypes,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>>::type (__cdecl *)(fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctorIdentity,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::RegisterConstructorAsUniquePtrFactory,fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (fruit::Assisted<double>,Multiplier *)>>::type>::type (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>))),fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctorIdentity,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::RegisterConstructorAsUniquePtrFactory,fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (fruit::Assisted<double>,Multiplier *)>>::type>::type,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::EnsureProvidedTypes,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>>::type>::type::apply<fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>>::Op)\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(117): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::PropagateError (fruit::impl::meta::Compose2ComponentFunctors::apply<InitialValue,T0>::type (__cdecl *)(Comp),fruit::impl::meta::PropagateError (__cdecl *)(fruit::impl::meta::ComponentFunctor::apply<MetaExpr,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>>::type (__cdecl *)(fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::Compose2ComponentFunctors::apply<InitialValue,T0>::type (__cdecl *)(Comp))),fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<InitialValue,T0>::type,T1>::type::apply<Comp>::Op))>' being compiled\r\n          with\r\n          [\r\n              InitialValue=fruit::impl::meta::ComponentFunctorIdentity,\r\n              T0=fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::RegisterConstructorAsUniquePtrFactory,fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (fruit::Assisted<double>,Multiplier *)>>::type,\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              MetaExpr=fruit::impl::meta::EnsureProvidedTypes,\r\n              T1=fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::EnsureProvidedTypes,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>>::type\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(191): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ElseMetaExpr=fruit::impl::meta::Call (__cdecl *)(fruit::impl::meta::ComposeFunctors (__cdecl *)(fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::RegisterConstructorAsUniquePtrFactory,fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>),fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::GetInjectAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>),fruit::impl::meta::RemoveUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>)))))))),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::EnsureProvidedTypes,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeTypeVector (__cdecl *)(fruit::impl::meta::RemoveAssisted (__cdecl *)(fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>),fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::GetInjectAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>),fruit::impl::meta::RemoveUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>)))))))))),fruit::impl::meta::NormalizedNonConstTypesIn (__cdecl *)(fruit::impl::meta::RemoveAssisted (__cdecl *)(fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>),fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::GetInjectAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>),fruit::impl::meta::RemoveUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>)))))))))))),fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>)\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(202): note: see reference to class template instantiation 'fruit::impl::meta::EvalIf<fruit::impl::meta::Bool<false>,ThenMetaExpr,ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ThenMetaExpr=fruit::impl::meta::ConstructError (__cdecl *)(fruit::impl::FunctorSignatureDoesNotMatchErrorTag,fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>,fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>),fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::GetInjectAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>),fruit::impl::meta::RemoveUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>)))))))),fruit::impl::meta::RemoveNonAssisted (__cdecl *)(fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>),fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::GetInjectAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>),fruit::impl::meta::RemoveUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>))))))))))),\r\n              ElseMetaExpr=fruit::impl::meta::Call (__cdecl *)(fruit::impl::meta::ComposeFunctors (__cdecl *)(fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::RegisterConstructorAsUniquePtrFactory,fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>),fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::GetInjectAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>),fruit::impl::meta::RemoveUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>)))))))),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::EnsureProvidedTypes,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeTypeVector (__cdecl *)(fruit::impl::meta::RemoveAssisted (__cdecl *)(fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>),fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::GetInjectAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>),fruit::impl::meta::RemoveUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>)))))))))),fruit::impl::meta::NormalizedNonConstTypesIn (__cdecl *)(fruit::impl::meta::RemoveAssisted (__cdecl *)(fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>),fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::GetInjectAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>),fruit::impl::meta::RemoveUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>)))))))))))),fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>)\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(102): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::If (fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::IsSame (__cdecl *)(AnnotatedSignature,fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature),fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::GetInjectAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature),fruit::impl::meta::RemoveUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature)))))))),fruit::impl::meta::RemoveNonAssisted (__cdecl *)(fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature),fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::GetInjectAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature),fruit::impl::meta::RemoveUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature)))))))))))),fruit::impl::meta::ConstructError (__cdecl *)(fruit::impl::FunctorSignatureDoesNotMatchErrorTag,AnnotatedSignature,fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature),fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::GetInjectAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature),fruit::impl::meta::RemoveUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature)))))))),fruit::impl::meta::RemoveNonAssisted (__cdecl *)(fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature),fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::GetInjectAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature),fruit::impl::meta::RemoveUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature))))))))))),fruit::impl::meta::Call (__cdecl *)(fruit::impl::meta::ComposeFunctors (__cdecl *)(fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::RegisterConstructorAsUniquePtrFactory,fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature),fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::GetInjectAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature),fruit::impl::meta::RemoveUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature)))))))),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::EnsureProvidedTypes,TargetRequirements,TargetNonConstRequirements,fruit::impl::meta::NormalizeTypeVector (__cdecl *)(fruit::impl::meta::RemoveAssisted (__cdecl *)(fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature),fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::GetInjectAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature),fruit::impl::meta::RemoveUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature)))))))))),fruit::impl::meta::NormalizedNonConstTypesIn (__cdecl *)(fruit::impl::meta::RemoveAssisted (__cdecl *)(fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::ConsSignatureWithVector (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature),fruit::impl::meta::SignatureArgs (__cdecl *)(fruit::impl::meta::GetInjectAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature),fruit::impl::meta::RemoveUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature)))))))))))),Comp))>' being compiled\r\n          with\r\n          [\r\n              AnnotatedSignature=fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>,\r\n              TargetRequirements=fruit::impl::meta::Vector<>,\r\n              TargetNonConstRequirements=fruit::impl::meta::Vector<>,\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(117): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::AutoRegisterFactoryHelper (Comp,TargetRequirements,TargetNonConstRequirements,fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<T>,fruit::impl::meta::Type<C>),fruit::impl::meta::HasInjectAnnotation (__cdecl *)(fruit::impl::meta::Type<C>),fruit::impl::meta::IsAbstract (__cdecl *)(fruit::impl::meta::Type<C>),fruit::impl::meta::Type<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>>>,fruit::impl::meta::Type<ReturnType (double)>,fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::Type<double>))>' being compiled\r\n          with\r\n          [\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              TargetRequirements=fruit::impl::meta::Vector<>,\r\n              TargetNonConstRequirements=fruit::impl::meta::Vector<>,\r\n              T=fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>,\r\n              C=ScalerImpl,\r\n              ReturnType=std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(191): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ElseMetaExpr=fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(215): note: see reference to class template instantiation 'fruit::impl::meta::EvalIf<fruit::impl::meta::Bool<false>,ThenMetaExpr,ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ThenMetaExpr=fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::NoBindingFoundErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>>),fruit::impl::NoBindingFoundForAbstractClassErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>>),\r\n              ElseMetaExpr=fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(191): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ElseMetaExpr=fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::Bool<false>,fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>),fruit::impl::meta::Vector<>)),fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::NoBindingFoundErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>>),fruit::impl::NoBindingFoundForAbstractClassErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>>),fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(215): note: see reference to class template instantiation 'fruit::impl::meta::EvalIf<fruit::impl::meta::Bool<false>,ThenMetaExpr,ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ThenMetaExpr=fruit::impl::meta::Call (__cdecl *)(fruit::impl::meta::ComposeFunctors (__cdecl *)(fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::ProcessInterfaceBinding,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>),fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::meta::Bool<false>),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::meta::Bool<false>)),fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>),\r\n              ElseMetaExpr=fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::Bool<false>,fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>),fruit::impl::meta::Vector<>)),fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::NoBindingFoundErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>>),fruit::impl::NoBindingFoundForAbstractClassErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>>),fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(191): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ElseMetaExpr=fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::IsNone (__cdecl *)(fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)))),fruit::impl::meta::Call (__cdecl *)(fruit::impl::meta::ComposeFunctors (__cdecl *)(fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::ProcessInterfaceBinding,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>),fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::meta::Bool<false>),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::meta::Bool<false>)),fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::Bool<false>,fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>),fruit::impl::meta::Vector<>)),fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::NoBindingFoundErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>>),fruit::impl::NoBindingFoundForAbstractClassErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>>),fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>))))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(215): note: see reference to class template instantiation 'fruit::impl::meta::EvalIf<fruit::impl::meta::Bool<false>,ThenMetaExpr,ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ThenMetaExpr=fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>),\r\n              ElseMetaExpr=fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::IsNone (__cdecl *)(fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)))),fruit::impl::meta::Call (__cdecl *)(fruit::impl::meta::ComposeFunctors (__cdecl *)(fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::ProcessInterfaceBinding,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>),fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::meta::Bool<false>),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::meta::Bool<false>)),fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::Bool<false>,fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>),fruit::impl::meta::Vector<>)),fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::NoBindingFoundErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>>),fruit::impl::NoBindingFoundForAbstractClassErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>>),fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>))))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(191): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ElseMetaExpr=fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>),fruit::impl::meta::Vector<>),fruit::impl::meta::Or (__cdecl *)(fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::Bool<false>),fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>),fruit::impl::meta::Vector<>))),fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::IsNone (__cdecl *)(fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)))),fruit::impl::meta::Call (__cdecl *)(fruit::impl::meta::ComposeFunctors (__cdecl *)(fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::ProcessInterfaceBinding,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>),fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::meta::Bool<false>),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::meta::Bool<false>)),fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::Bool<false>,fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>),fruit::impl::meta::Vector<>)),fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::NoBindingFoundErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>>),fruit::impl::NoBindingFoundForAbstractClassErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>>),fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)))))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(202): note: see reference to class template instantiation 'fruit::impl::meta::EvalIf<fruit::impl::meta::Bool<false>,ThenMetaExpr,ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ThenMetaExpr=fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::Bool<false>,fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>),fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>))),fruit::impl::meta::ConstructError (__cdecl *)(fruit::impl::NonConstBindingRequiredButConstBindingProvidedErrorTag,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>)),\r\n              ElseMetaExpr=fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>),fruit::impl::meta::Vector<>),fruit::impl::meta::Or (__cdecl *)(fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::Bool<false>),fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>),fruit::impl::meta::Vector<>))),fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::IsNone (__cdecl *)(fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)))),fruit::impl::meta::Call (__cdecl *)(fruit::impl::meta::ComposeFunctors (__cdecl *)(fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::ProcessInterfaceBinding,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>),fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::meta::Bool<false>),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::meta::Bool<false>)),fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::Bool<false>,fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>),fruit::impl::meta::Vector<>)),fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)),fruit::impl::NoBindingFoundErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>>),fruit::impl::NoBindingFoundForAbstractClassErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>>),fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>)))))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(102): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::If (fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT),fruit::impl::meta::Vector<MetaExpr>),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(NonConstBindingRequired,fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT),fruit::impl::meta::Vector<MetaExpr>))),fruit::impl::meta::ConstructError (__cdecl *)(fruit::impl::NonConstBindingRequiredButConstBindingProvidedErrorTag,fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT)),fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(Comp)),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT),TargetRequirements),fruit::impl::meta::Or (__cdecl *)(fruit::impl::meta::Not (__cdecl *)(NonConstBindingRequired),fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT),TargetNonConstRequirements))),fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(Comp),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::IsNone (__cdecl *)(fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<T>,fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT)))),fruit::impl::meta::Call (__cdecl *)(fruit::impl::meta::ComposeFunctors (__cdecl *)(fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::ProcessInterfaceBinding,fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT),fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<T>,fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT)),NonConstBindingRequired),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::EnsureProvidedType,TargetRequirements,TargetNonConstRequirements,fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<T>,fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT)),NonConstBindingRequired)),Comp),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(NonConstBindingRequired,fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT),TargetRequirements)),fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::AutoRegister (__cdecl *)(Comp,TargetRequirements,TargetNonConstRequirements,fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT)),fruit::impl::NoBindingFoundErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<AnnotatedT>),fruit::impl::NoBindingFoundForAbstractClassErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<AnnotatedT>),fruit::impl::meta::AutoRegister (__cdecl *)(Comp,TargetRequirements,TargetNonConstRequirements,fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT))))))>' being compiled\r\n          with\r\n          [\r\n              AnnotatedT=fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>,\r\n              MetaExpr=fruit::impl::meta::Type<Multiplier>,\r\n              NonConstBindingRequired=fruit::impl::meta::Bool<false>,\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              TargetRequirements=fruit::impl::meta::Vector<>,\r\n              TargetNonConstRequirements=fruit::impl::meta::Vector<>,\r\n              T=fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(117): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::EnsureProvidedType (Comp,MetaExpr,MetaExpr,fruit::impl::meta::Type<std::function<Signature>>,fruit::impl::meta::Bool<false>)>' being compiled\r\n          with\r\n          [\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              MetaExpr=fruit::impl::meta::Vector<>,\r\n              Signature=std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(249): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<MaybeErrorMetaExpr>' being compiled\r\n          with\r\n          [\r\n              MaybeErrorMetaExpr=fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>,fruit::impl::meta::Bool<false>>::type (__cdecl *)(fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>)))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(220): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ElseMetaExpr=fruit::impl::meta::PropagateError (__cdecl *)(fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>,fruit::impl::meta::Bool<false>>::type (__cdecl *)(fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>))),fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctorIdentity,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>,fruit::impl::meta::Bool<false>>::type>::type::apply<fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>>::Op)\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(236): note: see reference to class template instantiation 'fruit::impl::meta::EvalPropagateError<fruit::impl::meta::ComponentFunctorIdentity::apply<fruit::impl::meta::Comp<RsSupersetParam,PsParam,NonConstRsPsParam,DepsParam,InterfaceBindingsParam,DeferredBindingFunctorsParam>>::type,ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              RsSupersetParam=fruit::impl::meta::Vector<>,\r\n              PsParam=fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,\r\n              NonConstRsPsParam=fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,\r\n              DepsParam=fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,\r\n              InterfaceBindingsParam=fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,\r\n              DeferredBindingFunctorsParam=fruit::impl::meta::EmptyList,\r\n              ElseMetaExpr=fruit::impl::meta::PropagateError (__cdecl *)(fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>,fruit::impl::meta::Bool<false>>::type (__cdecl *)(fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>))),fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctorIdentity,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>,fruit::impl::meta::Bool<false>>::type>::type::apply<fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>>::Op)\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(117): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::PropagateError (fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(Comp),fruit::impl::meta::PropagateError (__cdecl *)(fruit::impl::meta::ComponentFunctor::apply<MetaExpr,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Type<std::function<Signature>>,fruit::impl::meta::Bool<false>>::type (__cdecl *)(fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(Comp))),fruit::impl::meta::Compose2ComponentFunctors::apply<InitialValue,T0>::type::apply<Comp>::Op))>' being compiled\r\n          with\r\n          [\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              MetaExpr=fruit::impl::meta::EnsureProvidedType,\r\n              Signature=std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double),\r\n              InitialValue=fruit::impl::meta::ComponentFunctorIdentity,\r\n              T0=fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>,fruit::impl::meta::Bool<false>>::type\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(236): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<MaybeErrorMetaExpr>' being compiled\r\n          with\r\n          [\r\n              MaybeErrorMetaExpr=fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctorIdentity,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>,fruit::impl::meta::Bool<false>>::type>::type (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>)\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(117): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::PropagateError (fruit::impl::meta::Compose2ComponentFunctors::apply<InitialValue,T0>::type (__cdecl *)(Comp),fruit::impl::meta::PropagateError (__cdecl *)(fruit::impl::meta::ComponentFunctor::apply<MetaExpr,fruit::impl::meta::Type<ReturnType (const T &)>,fruit::impl::meta::Type<ReturnType (const T &)>>::type (__cdecl *)(fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::Compose2ComponentFunctors::apply<InitialValue,T0>::type (__cdecl *)(Comp))),fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<InitialValue,T0>::type,T1>::type::apply<Comp>::Op))>' being compiled\r\n          with\r\n          [\r\n              InitialValue=fruit::impl::meta::ComponentFunctorIdentity,\r\n              T0=fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>,fruit::impl::meta::Bool<false>>::type,\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              MetaExpr=fruit::impl::meta::PreProcessRegisterProvider,\r\n              ReturnType=ScalerFactory,\r\n              T=std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>,\r\n              T1=fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::PreProcessRegisterProvider,fruit::impl::meta::Type<ScalerFactory (const std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)> &)>,fruit::impl::meta::Type<ScalerFactory (const std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)> &)>>::type\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(236): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<MaybeErrorMetaExpr>' being compiled\r\n          with\r\n          [\r\n              MaybeErrorMetaExpr=fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctorIdentity,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>,fruit::impl::meta::Bool<false>>::type>::type,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::PreProcessRegisterProvider,fruit::impl::meta::Type<ScalerFactory (const std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)> &)>,fruit::impl::meta::Type<ScalerFactory (const std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)> &)>>::type>::type (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>)\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(117): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::PropagateError (fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<InitialValue,T0>::type,T1>::type (__cdecl *)(Comp),fruit::impl::meta::PropagateError (__cdecl *)(fruit::impl::meta::ComponentFunctor::apply<MetaExpr,fruit::impl::meta::Type<ReturnType (const T &)>,fruit::impl::meta::Type<ReturnType (const T &)>>::type (__cdecl *)(fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<InitialValue,T0>::type,T1>::type (__cdecl *)(Comp))),fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<InitialValue,T0>::type,T1>::type,T2>::type::apply<Comp>::Op))>' being compiled\r\n          with\r\n          [\r\n              InitialValue=fruit::impl::meta::ComponentFunctorIdentity,\r\n              T0=fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Type<std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>>,fruit::impl::meta::Bool<false>>::type,\r\n              T1=fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::PreProcessRegisterProvider,fruit::impl::meta::Type<ScalerFactory (const std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)> &)>,fruit::impl::meta::Type<ScalerFactory (const std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)> &)>>::type,\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              MetaExpr=fruit::impl::meta::PostProcessRegisterProvider,\r\n              ReturnType=ScalerFactory,\r\n              T=std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)>,\r\n              T2=fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::PostProcessRegisterProvider,fruit::impl::meta::Type<ScalerFactory (const std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)> &)>,fruit::impl::meta::Type<ScalerFactory (const std::function<std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)> &)>>::type\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(236): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<MaybeErrorMetaExpr>' being compiled\r\n          with\r\n          [\r\n              MaybeErrorMetaExpr=fruit::impl::meta::Call (__cdecl *)(fruit::impl::meta::ComposeFunctors (__cdecl *)(fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::Type<ScalerImpl>,fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::Type<ScalerImpl>)),fruit::impl::meta::Type<double>))),fruit::impl::meta::Bool<false>),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::PreProcessRegisterProvider,fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<Scaler,std::default_delete<Scaler>> (double)>),fruit::impl::meta::Type<Scaler>),fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::Type<Scaler>),fruit::impl::meta::Type<double>))),fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::Type<ScalerImpl>,fruit::impl::meta::ConsConstReference (__cdecl *)(fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::Type<ScalerImpl>)),fruit::impl::meta::Type<double>))))),fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::Type<Scaler>),fruit::impl::meta::Type<double>)),fruit::impl::meta::ConsConstReference (__cdecl *)(fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::Type<ScalerImpl>)),fruit::impl::meta::Type<double>))))),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::PostProcessRegisterProvider,fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(fruit::impl::meta::Type<std::unique_ptr<Scaler,std::default_delete<Scaler>> (double)>),fruit::impl::meta::Type<Scaler>),fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::Type<Scaler>),fruit::impl::meta::Type<double>))),fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::Type<ScalerImpl>,fruit::impl::meta::ConsConstReference (__cdecl *)(fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::Type<ScalerImpl>)),fruit::impl::meta::Type<double>))))),fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::Type<Scaler>),fruit::impl::meta::Type<double>)),fruit::impl::meta::ConsConstReference (__cdecl *)(fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::Type<ScalerImpl>)),fruit::impl::meta::Type<double>)))))),fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>)\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(102): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::PropagateError (fruit::impl::meta::Call (__cdecl *)(fruit::impl::meta::ComposeFunctors (__cdecl *)(fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::EnsureProvidedType,TargetRequirements,TargetNonConstRequirements,fruit::impl::meta::CopyAnnotation (__cdecl *)(AnnotatedC,fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(AnnotatedC)),fruit::impl::meta::Type<double>))),fruit::impl::meta::Bool<false>),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::PreProcessRegisterProvider,fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature),fruit::impl::meta::Type<I>),fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::Type<I>),fruit::impl::meta::Type<double>))),fruit::impl::meta::CopyAnnotation (__cdecl *)(AnnotatedC,fruit::impl::meta::ConsConstReference (__cdecl *)(fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(AnnotatedC)),fruit::impl::meta::Type<double>))))),fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::Type<I>),fruit::impl::meta::Type<double>)),fruit::impl::meta::ConsConstReference (__cdecl *)(fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(AnnotatedC)),fruit::impl::meta::Type<double>))))),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::PostProcessRegisterProvider,fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::CopyAnnotation (__cdecl *)(fruit::impl::meta::SignatureType (__cdecl *)(AnnotatedSignature),fruit::impl::meta::Type<I>),fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::Type<I>),fruit::impl::meta::Type<double>))),fruit::impl::meta::CopyAnnotation (__cdecl *)(AnnotatedC,fruit::impl::meta::ConsConstReference (__cdecl *)(fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(AnnotatedC)),fruit::impl::meta::Type<double>))))),fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::Type<I>),fruit::impl::meta::Type<double>)),fruit::impl::meta::ConsConstReference (__cdecl *)(fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(AnnotatedC)),fruit::impl::meta::Type<double>)))))),Comp),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::HasVirtualDestructor (__cdecl *)(fruit::impl::meta::Type<I>)),fruit::impl::meta::ConstructError (__cdecl *)(fruit::impl::FactoryBindingForUniquePtrOfClassWithNoVirtualDestructorErrorTag,fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::Type<I>),fruit::impl::meta::Type<double>)),fruit::impl::meta::ConsStdFunction (__cdecl *)(fruit::impl::meta::ConsSignature (__cdecl *)(fruit::impl::meta::ConsUniquePtr (__cdecl *)(fruit::impl::meta::RemoveAnnotations (__cdecl *)(AnnotatedC)),fruit::impl::meta::Type<double>))),fruit::impl::meta::AutoRegisterFactoryHelper::apply<Comp,TargetRequirements,TargetNonConstRequirements,fruit::impl::meta::Type<C>,fruit::impl::meta::Bool<false>,fruit::impl::meta::Bool<true>,MetaExpr,AnnotatedSignature,fruit::impl::meta::Type<double>>::Op))>' being compiled\r\n          with\r\n          [\r\n              TargetRequirements=fruit::impl::meta::Vector<>,\r\n              TargetNonConstRequirements=fruit::impl::meta::Vector<>,\r\n              AnnotatedC=fruit::impl::meta::Type<ScalerImpl>,\r\n              AnnotatedSignature=fruit::impl::meta::Type<std::unique_ptr<Scaler,std::default_delete<Scaler>> (double)>,\r\n              I=Scaler,\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              C=ScalerImpl,\r\n              MetaExpr=fruit::impl::meta::Type<std::unique_ptr<Scaler,std::default_delete<Scaler>>>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(117): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::AutoRegisterFactoryHelper (Comp,TargetRequirements,TargetNonConstRequirements,fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<T>,fruit::impl::meta::Type<I>),fruit::impl::meta::HasInjectAnnotation (__cdecl *)(fruit::impl::meta::Type<I>),fruit::impl::meta::IsAbstract (__cdecl *)(fruit::impl::meta::Type<I>),fruit::impl::meta::Type<std::unique_ptr<Scaler,std::default_delete<Scaler>>>,fruit::impl::meta::Type<std::unique_ptr<Scaler,std::default_delete<Scaler>> (double)>,fruit::impl::meta::RemoveAnnotations (__cdecl *)(fruit::impl::meta::Type<double>))>' being compiled\r\n          with\r\n          [\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              TargetRequirements=fruit::impl::meta::Vector<>,\r\n              TargetNonConstRequirements=fruit::impl::meta::Vector<>,\r\n              T=fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>,\r\n              I=Scaler\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(191): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ElseMetaExpr=fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(215): note: see reference to class template instantiation 'fruit::impl::meta::EvalIf<fruit::impl::meta::Bool<false>,ThenMetaExpr,ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ThenMetaExpr=fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::NoBindingFoundErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<ScalerFactory>>),fruit::impl::NoBindingFoundForAbstractClassErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<ScalerFactory>>),\r\n              ElseMetaExpr=fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(191): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ElseMetaExpr=fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type,fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>),fruit::impl::meta::Vector<>)),fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::NoBindingFoundErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<ScalerFactory>>),fruit::impl::NoBindingFoundForAbstractClassErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<ScalerFactory>>),fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(215): note: see reference to class template instantiation 'fruit::impl::meta::EvalIf<fruit::impl::meta::Bool<false>,ThenMetaExpr,ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ThenMetaExpr=fruit::impl::meta::Call (__cdecl *)(fruit::impl::meta::ComposeFunctors (__cdecl *)(fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::ProcessInterfaceBinding,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>),fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type)),fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>),\r\n              ElseMetaExpr=fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type,fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>),fruit::impl::meta::Vector<>)),fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::NoBindingFoundErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<ScalerFactory>>),fruit::impl::NoBindingFoundForAbstractClassErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<ScalerFactory>>),fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(191): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ElseMetaExpr=fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::IsNone (__cdecl *)(fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)))),fruit::impl::meta::Call (__cdecl *)(fruit::impl::meta::ComposeFunctors (__cdecl *)(fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::ProcessInterfaceBinding,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>),fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type)),fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type,fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>),fruit::impl::meta::Vector<>)),fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::NoBindingFoundErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<ScalerFactory>>),fruit::impl::NoBindingFoundForAbstractClassErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<ScalerFactory>>),fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>))))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(215): note: see reference to class template instantiation 'fruit::impl::meta::EvalIf<fruit::impl::meta::Bool<false>,ThenMetaExpr,ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ThenMetaExpr=fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>),\r\n              ElseMetaExpr=fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::IsNone (__cdecl *)(fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)))),fruit::impl::meta::Call (__cdecl *)(fruit::impl::meta::ComposeFunctors (__cdecl *)(fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::ProcessInterfaceBinding,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>),fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type)),fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type,fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>),fruit::impl::meta::Vector<>)),fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::NoBindingFoundErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<ScalerFactory>>),fruit::impl::NoBindingFoundForAbstractClassErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<ScalerFactory>>),fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>))))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(191): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ElseMetaExpr=fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>),fruit::impl::meta::Vector<>),fruit::impl::meta::Or (__cdecl *)(fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type),fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>),fruit::impl::meta::Vector<>))),fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::IsNone (__cdecl *)(fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)))),fruit::impl::meta::Call (__cdecl *)(fruit::impl::meta::ComposeFunctors (__cdecl *)(fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::ProcessInterfaceBinding,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>),fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type)),fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type,fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>),fruit::impl::meta::Vector<>)),fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::NoBindingFoundErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<ScalerFactory>>),fruit::impl::NoBindingFoundForAbstractClassErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<ScalerFactory>>),fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)))))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(202): note: see reference to class template instantiation 'fruit::impl::meta::EvalIf<fruit::impl::meta::Bool<false>,ThenMetaExpr,ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ThenMetaExpr=fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type,fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>),fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>))),fruit::impl::meta::ConstructError (__cdecl *)(fruit::impl::NonConstBindingRequiredButConstBindingProvidedErrorTag,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>)),\r\n              ElseMetaExpr=fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>),fruit::impl::meta::Vector<>),fruit::impl::meta::Or (__cdecl *)(fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type),fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>),fruit::impl::meta::Vector<>))),fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::IsNone (__cdecl *)(fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)))),fruit::impl::meta::Call (__cdecl *)(fruit::impl::meta::ComposeFunctors (__cdecl *)(fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::ProcessInterfaceBinding,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>),fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type)),fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type,fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>),fruit::impl::meta::Vector<>)),fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)),fruit::impl::NoBindingFoundErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<ScalerFactory>>),fruit::impl::NoBindingFoundForAbstractClassErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<fruit::impl::meta::Type<ScalerFactory>>),fruit::impl::meta::AutoRegister (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::NormalizeType (__cdecl *)(fruit::impl::meta::Type<ScalerFactory>)))))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(102): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::If (fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT),fruit::impl::meta::Vector<MetaExpr>),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(NonConstBindingRequired,fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT),fruit::impl::meta::Vector<MetaExpr>))),fruit::impl::meta::ConstructError (__cdecl *)(fruit::impl::NonConstBindingRequiredButConstBindingProvidedErrorTag,fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT)),fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(Comp)),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT),TargetRequirements),fruit::impl::meta::Or (__cdecl *)(fruit::impl::meta::Not (__cdecl *)(NonConstBindingRequired),fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT),TargetNonConstRequirements))),fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(Comp),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::Not (__cdecl *)(fruit::impl::meta::IsNone (__cdecl *)(fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<T>,fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT)))),fruit::impl::meta::Call (__cdecl *)(fruit::impl::meta::ComposeFunctors (__cdecl *)(fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::ProcessInterfaceBinding,fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT),fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<T>,fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT)),NonConstBindingRequired),fruit::impl::meta::ComponentFunctor (__cdecl *)(fruit::impl::meta::EnsureProvidedType,TargetRequirements,TargetNonConstRequirements,fruit::impl::meta::FindInMap (__cdecl *)(fruit::impl::meta::Vector<T>,fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT)),NonConstBindingRequired)),Comp),fruit::impl::meta::If (__cdecl *)(fruit::impl::meta::And (__cdecl *)(NonConstBindingRequired,fruit::impl::meta::IsInSet (__cdecl *)(fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT),TargetRequirements)),fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::Catch (__cdecl *)(fruit::impl::meta::AutoRegister (__cdecl *)(Comp,TargetRequirements,TargetNonConstRequirements,fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT)),fruit::impl::NoBindingFoundErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<AnnotatedT>),fruit::impl::NoBindingFoundForAbstractClassErrorTag,fruit::impl::meta::EnsureProvidedTypeErrorHandler<AnnotatedT>),fruit::impl::meta::AutoRegister (__cdecl *)(Comp,TargetRequirements,TargetNonConstRequirements,fruit::impl::meta::NormalizeType (__cdecl *)(AnnotatedT))))))>' being compiled\r\n          with\r\n          [\r\n              AnnotatedT=fruit::impl::meta::Type<ScalerFactory>,\r\n              MetaExpr=fruit::impl::meta::Type<Multiplier>,\r\n              NonConstBindingRequired=fruit::impl::meta::IsSame::apply<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Type<ScalerFactory>>::type,\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              TargetRequirements=fruit::impl::meta::Vector<>,\r\n              TargetNonConstRequirements=fruit::impl::meta::Vector<>,\r\n              T=fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(117): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::EnsureProvidedType (Comp,MetaExpr,MetaExpr,fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Bool<true>)>' being compiled\r\n          with\r\n          [\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              MetaExpr=fruit::impl::meta::Vector<>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(236): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<MaybeErrorMetaExpr>' being compiled\r\n          with\r\n          [\r\n              MaybeErrorMetaExpr=fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::EnsureProvidedType,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Bool<true>>::type (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>)\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(102): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::PropagateError (fruit::impl::meta::ComponentFunctor::apply<MetaExpr,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Bool<true>>::type (__cdecl *)(Comp),fruit::impl::meta::PropagateError (__cdecl *)(fruit::impl::meta::ComponentFunctorIdentity (__cdecl *)(fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::ComponentFunctor::apply<MetaExpr,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Bool<true>>::type (__cdecl *)(Comp))),fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctor::apply<MetaExpr,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Bool<true>>::type,fruit::impl::meta::ComponentFunctorIdentity>::type::apply<Comp>::Op))>' being compiled\r\n          with\r\n          [\r\n              MetaExpr=fruit::impl::meta::EnsureProvidedType,\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(102): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::Call (fruit::impl::meta::FoldVector (__cdecl *)(TypesToProvide,fruit::impl::meta::EnsureProvidedTypes::apply<MetaExpr,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,TypesToProvide,fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>>::Helper,fruit::impl::meta::ComponentFunctorIdentity),Comp)>' being compiled\r\n          with\r\n          [\r\n              TypesToProvide=fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,\r\n              MetaExpr=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(102): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::EnsureProvidedTypes (SourceComp,fruit::impl::meta::SetDifference (__cdecl *)(fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<MetaExpr>),fruit::impl::meta::SetIntersection (__cdecl *)(fruit::impl::meta::SetDifference (__cdecl *)(fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<MetaExpr>),fruit::impl::meta::Vector<MetaExpr>),fruit::impl::meta::SetToVector (__cdecl *)(fruit::impl::meta::SetUnion (__cdecl *)(fruit::impl::meta::SetDifference (__cdecl *)(fruit::impl::meta::SetUnion (__cdecl *)(fruit::impl::meta::Vector<MetaExpr>,fruit::impl::meta::SetDifference (__cdecl *)(fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>)),fruit::impl::meta::SetUnion (__cdecl *)(fruit::impl::meta::SetDifference (__cdecl *)(fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<MetaExpr>),fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>)),fruit::impl::meta::SetIntersection (__cdecl *)(fruit::impl::meta::SetUnion (__cdecl *)(fruit::impl::meta::SetIntersection (__cdecl *)(fruit::impl::meta::Vector<MetaExpr>,fruit::impl::meta::Vector<MetaExpr>),fruit::impl::meta::SetIntersection (__cdecl *)(fruit::impl::meta::SetDifference (__cdecl *)(fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>),fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>)),fruit::impl::meta::SetUnion (__cdecl *)(fruit::impl::meta::SetDifference (__cdecl *)(fruit::impl::meta::SetDifference (__cdecl *)(fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<MetaExpr>),fruit::impl::meta::Vector<MetaExpr>),fruit::impl::meta::SetDifference (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>))))),fruit::impl::meta::SetIntersection (__cdecl *)(fruit::impl::meta::SetUnion (__cdecl *)(fruit::impl::meta::SetDifference (__cdecl *)(fruit::impl::meta::SetUnion (__cdecl *)(fruit::impl::meta::Vector<MetaExpr>,fruit::impl::meta::SetDifference (__cdecl *)(fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>)),fruit::impl::meta::SetUnion (__cdecl *)(fruit::impl::meta::SetDifference (__cdecl *)(fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<MetaExpr>),fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>)),fruit::impl::meta::SetIntersection (__cdecl *)(fruit::impl::meta::SetUnion (__cdecl *)(fruit::impl::meta::SetIntersection (__cdecl *)(fruit::impl::meta::Vector<MetaExpr>,fruit::impl::meta::Vector<MetaExpr>),fruit::impl::meta::SetIntersection (__cdecl *)(fruit::impl::meta::SetDifference (__cdecl *)(fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>),fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>)),fruit::impl::meta::SetUnion (__cdecl *)(fruit::impl::meta::SetDifference (__cdecl *)(fruit::impl::meta::SetDifference (__cdecl *)(fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<MetaExpr>),fruit::impl::meta::Vector<MetaExpr>),fruit::impl::meta::SetDifference (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>)))),fruit::impl::meta::SetUnion (__cdecl *)(fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<MetaExpr>)))>' being compiled\r\n          with\r\n          [\r\n              SourceComp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              MetaExpr=fruit::impl::meta::Type<ScalerFactory>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(117): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::ConvertComponent (Comp,MetaExpr)>' being compiled\r\n          with\r\n          [\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<Multiplier>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Multiplier>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>>,fruit::impl::meta::EmptyList>,\r\n              MetaExpr=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<>,fruit::impl::meta::EmptyList>\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(249): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<MaybeErrorMetaExpr>' being compiled\r\n          with\r\n          [\r\n              MaybeErrorMetaExpr=fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::ConvertComponent,fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<>,fruit::impl::meta::EmptyList>>::type (__cdecl *)(fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::AddDeferredInterfaceBinding,fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>::type,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::InstallComponentHelper,fruit::impl::meta::Type<Multiplier>>::type>::type,fruit::impl::meta::ProcessDeferredBindings>::type (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::EmptyList>)))\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(220): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              ElseMetaExpr=fruit::impl::meta::PropagateError (__cdecl *)(fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::ConvertComponent,fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<>,fruit::impl::meta::EmptyList>>::type (__cdecl *)(fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::AddDeferredInterfaceBinding,fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>::type,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::InstallComponentHelper,fruit::impl::meta::Type<Multiplier>>::type>::type,fruit::impl::meta::ProcessDeferredBindings>::type (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::EmptyList>))),fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::AddDeferredInterfaceBinding,fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>::type,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::InstallComponentHelper,fruit::impl::meta::Type<Multiplier>>::type>::type,fruit::impl::meta::ProcessDeferredBindings>::type,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::ConvertComponent,fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<>,fruit::impl::meta::EmptyList>>::type>::type::apply<fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::EmptyList>>::Op)\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(236): note: see reference to class template instantiation 'fruit::impl::meta::EvalPropagateError<fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctor::apply<MetaExpr,fruit::impl::meta::Type<I>,fruit::impl::meta::Type<C>>::type,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::InstallComponentHelper,fruit::impl::meta::Type<Multiplier>>::type>::type,fruit::impl::meta::ProcessDeferredBindings>::type::apply<fruit::impl::meta::Comp<RsSupersetParam,PsParam,NonConstRsPsParam,DepsParam,InterfaceBindingsParam,DeferredBindingFunctorsParam>>::Op,ElseMetaExpr>' being compiled\r\n          with\r\n          [\r\n              MetaExpr=fruit::impl::meta::AddDeferredInterfaceBinding,\r\n              I=Scaler,\r\n              C=ScalerImpl,\r\n              RsSupersetParam=fruit::impl::meta::Vector<>,\r\n              PsParam=fruit::impl::meta::Vector<>,\r\n              NonConstRsPsParam=fruit::impl::meta::Vector<>,\r\n              DepsParam=fruit::impl::meta::Vector<>,\r\n              InterfaceBindingsParam=fruit::impl::meta::Vector<>,\r\n              DeferredBindingFunctorsParam=fruit::impl::meta::EmptyList,\r\n              ElseMetaExpr=fruit::impl::meta::PropagateError (__cdecl *)(fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::ConvertComponent,fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<>,fruit::impl::meta::EmptyList>>::type (__cdecl *)(fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::AddDeferredInterfaceBinding,fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>::type,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::InstallComponentHelper,fruit::impl::meta::Type<Multiplier>>::type>::type,fruit::impl::meta::ProcessDeferredBindings>::type (__cdecl *)(fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::EmptyList>))),fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::AddDeferredInterfaceBinding,fruit::impl::meta::Type<Scaler>,fruit::impl::meta::Type<ScalerImpl>>::type,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::InstallComponentHelper,fruit::impl::meta::Type<Multiplier>>::type>::type,fruit::impl::meta::ProcessDeferredBindings>::type,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::ConvertComponent,fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Vector<>>>,fruit::impl::meta::Vector<>,fruit::impl::meta::EmptyList>>::type>::type::apply<fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::EmptyList>>::Op)\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/meta/eval.h(102): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::PropagateError (fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctor::apply<MetaExpr,fruit::impl::meta::Type<I>,fruit::impl::meta::Type<C>>::type,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::InstallComponentHelper,fruit::impl::meta::Type<Multiplier>>::type>::type,fruit::impl::meta::ProcessDeferredBindings>::type (__cdecl *)(Comp),fruit::impl::meta::PropagateError (__cdecl *)(fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::ConvertComponent,fruit::impl::meta::Comp<RsSupersetParam,PsParam,NonConstRsPsParam,DepsParam,InterfaceBindingsParam,DeferredBindingFunctorsParam>>::type (__cdecl *)(fruit::impl::meta::GetResult (__cdecl *)(fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctor::apply<MetaExpr,fruit::impl::meta::Type<I>,fruit::impl::meta::Type<C>>::type,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::InstallComponentHelper,fruit::impl::meta::Type<Multiplier>>::type>::type,fruit::impl::meta::ProcessDeferredBindings>::type (__cdecl *)(Comp))),fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::Compose2ComponentFunctors::apply<fruit::impl::meta::ComponentFunctor::apply<MetaExpr,fruit::impl::meta::Type<I>,fruit::impl::meta::Type<C>>::type,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::InstallComponentHelper,fruit::impl::meta::Type<Multiplier>>::type>::type,fruit::impl::meta::ProcessDeferredBindings>::type,fruit::impl::meta::ComponentFunctor::apply<fruit::impl::meta::ConvertComponent,fruit::impl::meta::Comp<RsSupersetParam,PsParam,NonConstRsPsParam,DepsParam,InterfaceBindingsParam,DeferredBindingFunctorsParam>>::type>::type::apply<Comp>::Op))>' being compiled\r\n          with\r\n          [\r\n              MetaExpr=fruit::impl::meta::AddDeferredInterfaceBinding,\r\n              I=Scaler,\r\n              C=ScalerImpl,\r\n              Comp=fruit::impl::meta::Comp<fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::Vector<>,fruit::impl::meta::EmptyList>,\r\n              RsSupersetParam=fruit::impl::meta::Vector<>,\r\n              PsParam=fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,\r\n              NonConstRsPsParam=fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,\r\n              DepsParam=fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Vector<>>>,\r\n              InterfaceBindingsParam=fruit::impl::meta::Vector<>,\r\n              DeferredBindingFunctorsParam=fruit::impl::meta::EmptyList\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/component.defn.h(37): note: see reference to class template instantiation 'fruit::impl::meta::DoEval<fruit::impl::meta::Call (fruit::impl::meta::ReverseComposeFunctors (fruit::impl::meta::ComponentFunctor (fruit::impl::meta::ConvertComponent,fruit::impl::meta::Comp<RsSupersetParam,PsParam,NonConstRsPsParam,DepsParam,InterfaceBindingsParam,DeferredBindingFunctorsParam>),fruit::impl::meta::ProcessDeferredBindings,fruit::impl::meta::ProcessBinding (fruit::impl::InstallComponent<fruit::Component<Multiplier> (void)>),fruit::impl::meta::ProcessBinding (fruit::impl::Bind<Scaler,ScalerImpl>)),fruit::impl::meta::ConstructComponentImpl (void))>' being compiled\r\n          with\r\n          [\r\n              RsSupersetParam=fruit::impl::meta::Vector<>,\r\n              PsParam=fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,\r\n              NonConstRsPsParam=fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,\r\n              DepsParam=fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Vector<>>>,\r\n              InterfaceBindingsParam=fruit::impl::meta::Vector<>,\r\n              DeferredBindingFunctorsParam=fruit::impl::meta::EmptyList\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/component.defn.h(37): note: see reference to alias template instantiation 'fruit::impl::meta::Eval<fruit::impl::meta::Call(fruit::impl::meta::ReverseComposeFunctors (fruit::impl::meta::ComponentFunctor (fruit::impl::meta::ConvertComponent,fruit::impl::meta::Comp<RsSupersetParam,PsParam,NonConstRsPsParam,DepsParam,InterfaceBindingsParam,DeferredBindingFunctorsParam>),fruit::impl::meta::ProcessDeferredBindings,fruit::impl::meta::ProcessBinding (fruit::impl::InstallComponent<fruit::Component<Multiplier> (void)>),fruit::impl::meta::ProcessBinding (fruit::impl::Bind<Scaler,ScalerImpl>)),fruit::impl::meta::ConstructComponentImpl (void))>' being compiled\r\n          with\r\n          [\r\n              RsSupersetParam=fruit::impl::meta::Vector<>,\r\n              PsParam=fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,\r\n              NonConstRsPsParam=fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,\r\n              DepsParam=fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Vector<>>>,\r\n              InterfaceBindingsParam=fruit::impl::meta::Vector<>,\r\n              DeferredBindingFunctorsParam=fruit::impl::meta::EmptyList\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/component.defn.h(55): note: see reference to alias template instantiation 'fruit::impl::meta::OpForComponent<fruit::impl::InstallComponent<fruit::Component<Multiplier> (void)>,fruit::impl::Bind<Scaler,ScalerImpl>>::ConvertTo<fruit::impl::meta::Comp<RsSupersetParam,PsParam,NonConstRsPsParam,DepsParam,InterfaceBindingsParam,DeferredBindingFunctorsParam>>' being compiled\r\n          with\r\n          [\r\n              RsSupersetParam=fruit::impl::meta::Vector<>,\r\n              PsParam=fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,\r\n              NonConstRsPsParam=fruit::impl::meta::Vector<fruit::impl::meta::Type<ScalerFactory>>,\r\n              DepsParam=fruit::impl::meta::Vector<fruit::impl::meta::Pair<fruit::impl::meta::Type<ScalerFactory>,fruit::impl::meta::Vector<>>>,\r\n              InterfaceBindingsParam=fruit::impl::meta::Vector<>,\r\n              DeferredBindingFunctorsParam=fruit::impl::meta::EmptyList\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\examples\\scaling_doubles\\scaler.cpp(38): note: see reference to function template instantiation 'fruit::Component<ScalerFactory>::Component<fruit::impl::InstallComponent<fruit::Component<Multiplier> (void)>,fruit::impl::Bind<Scaler,ScalerImpl>>(fruit::PartialComponent<fruit::impl::InstallComponent<fruit::Component<Multiplier> (void)>,fruit::impl::Bind<Scaler,ScalerImpl>> &&) noexcept' being compiled\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\examples\\scaling_doubles\\scaler.cpp(38): note: see reference to function template instantiation 'fruit::Component<ScalerFactory>::Component<fruit::impl::InstallComponent<fruit::Component<Multiplier> (void)>,fruit::impl::Bind<Scaler,ScalerImpl>>(fruit::PartialComponent<fruit::impl::InstallComponent<fruit::Component<Multiplier> (void)>,fruit::impl::Bind<Scaler,ScalerImpl>> &&) noexcept' being compiled`\r\n\r\nError 2 and 3 (same line:)\r\n`F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit\\impl\\component_functors.defn.h(455): error C3536: 'object_provider': cannot be used before it is initialized\r\nF:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit\\impl\\component_functors.defn.h(455): error C2440: '<function-style-cast>': cannot convert from 'int' to 'std::function<Signature>'\r\n          with\r\n          [\r\n              Signature=std::unique_ptr<ScalerImpl,std::default_delete<ScalerImpl>> (double)\r\n          ]\r\n  F:\\VisualStudio Projects\\Libraries\\fruit\\include\\fruit/impl/component_functors.defn.h(455): note: No constructor could take the source type, or constructor overload resolution was ambiguous`\r\n  \r\nI started off with Visual Studio 2019 as thats what I'm targetting, and when that didn't work I tried VS2022, and when that failed I tried VS2022 Preview seeing as another cmake project I tried to build failed with the standard VS2022 version but succeeded in the Preview.\r\n\r\nHowever I can only build the project if I used GCC, but the codebase I want to use it with is all in VS2019\r\n  \r\n", "reactions": {"url": "https://api.github.com/repos/google/fruit/issues/138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/google/fruit/issues/138/timeline", "performed_via_github_app": null}, "comment": {"url": "https://api.github.com/repos/google/fruit/issues/comments/1130189900", "html_url": "https://github.com/google/fruit/issues/138#issuecomment-1130189900", "issue_url": "https://api.github.com/repos/google/fruit/issues/138", "id": 1130189900, "node_id": "IC_kwDOAT7oy85DXVRM", "user": {"login": "IrisPeter", "id": 47663858, "node_id": "MDQ6VXNlcjQ3NjYzODU4", "avatar_url": "https://avatars.githubusercontent.com/u/47663858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IrisPeter", "html_url": "https://github.com/IrisPeter", "followers_url": "https://api.github.com/users/IrisPeter/followers", "following_url": "https://api.github.com/users/IrisPeter/following{/other_user}", "gists_url": "https://api.github.com/users/IrisPeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/IrisPeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IrisPeter/subscriptions", "organizations_url": "https://api.github.com/users/IrisPeter/orgs", "repos_url": "https://api.github.com/users/IrisPeter/repos", "events_url": "https://api.github.com/users/IrisPeter/events{/privacy}", "received_events_url": "https://api.github.com/users/IrisPeter/received_events", "type": "User", "site_admin": false}, "created_at": "2022-05-18T15:47:46Z", "updated_at": "2022-05-18T15:47:46Z", "author_association": "NONE", "body": "@poletti-marco \r\n\r\nI think we can probably close this issue, as it doesn't exist in the last released version of fruit-3.6.0, it only occurs when cloning the current state of the repository.\r\n\r\nOr would you like it to stay open to log the fact there is a problem specific to MSVC in the repository as it stands?", "reactions": {"url": "https://api.github.com/repos/google/fruit/issues/comments/1130189900/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "performed_via_github_app": null}}, "public": true, "created_at": "2022-05-18T15:47:46Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858395103", "type": "IssueCommentEvent", "actor": {"id": 55858104, "login": "google-cla[bot]", "display_login": "google-cla", "gravatar_id": "", "url": "https://api.github.com/users/google-cla[bot]", "avatar_url": "https://avatars.githubusercontent.com/u/55858104?"}, "repo": {"id": 228683419, "name": "google/it-cert-automation-practice", "url": "https://api.github.com/repos/google/it-cert-automation-practice"}, "payload": {"action": "created", "issue": {"url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21385", "repository_url": "https://api.github.com/repos/google/it-cert-automation-practice", "labels_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21385/labels{/name}", "comments_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21385/comments", "events_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21385/events", "html_url": "https://github.com/google/it-cert-automation-practice/pull/21385", "id": 1240161663, "node_id": "PR_kwDODaFum844CXfo", "number": 21385, "title": "Updated if statements in validations.py", "user": {"login": "LloydObs", "id": 92602419, "node_id": "U_kgDOBYUAMw", "avatar_url": "https://avatars.githubusercontent.com/u/92602419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LloydObs", "html_url": "https://github.com/LloydObs", "followers_url": "https://api.github.com/users/LloydObs/followers", "following_url": "https://api.github.com/users/LloydObs/following{/other_user}", "gists_url": "https://api.github.com/users/LloydObs/gists{/gist_id}", "starred_url": "https://api.github.com/users/LloydObs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LloydObs/subscriptions", "organizations_url": "https://api.github.com/users/LloydObs/orgs", "repos_url": "https://api.github.com/users/LloydObs/repos", "events_url": "https://api.github.com/users/LloydObs/events{/privacy}", "received_events_url": "https://api.github.com/users/LloydObs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2022-05-18T15:47:23Z", "updated_at": "2022-05-18T15:47:27Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/21385", "html_url": "https://github.com/google/it-cert-automation-practice/pull/21385", "diff_url": "https://github.com/google/it-cert-automation-practice/pull/21385.diff", "patch_url": "https://github.com/google/it-cert-automation-practice/pull/21385.patch", "merged_at": null}, "body": "Fixed the if statements so that code names with dots and underscores at the beginning return false.\r\nCloses: #1\r\n\r\n\r\nFixes #<issue_number_goes_here>\r\n\r\n\r\n> It's a good idea to open an issue first for discussion.\r\n\r\n- [ ] Tests pass\r\n- [ ] Appropriate changes to README are included in PR", "reactions": {"url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21385/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21385/timeline", "performed_via_github_app": null}, "comment": {"url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/comments/1130189583", "html_url": "https://github.com/google/it-cert-automation-practice/pull/21385#issuecomment-1130189583", "issue_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21385", "id": 1130189583, "node_id": "IC_kwDODaFum85DXVMP", "user": {"login": "google-cla[bot]", "id": 55858104, "node_id": "MDM6Qm90NTU4NTgxMDQ=", "avatar_url": "https://avatars.githubusercontent.com/in/42202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google-cla%5Bbot%5D", "html_url": "https://github.com/apps/google-cla", "followers_url": "https://api.github.com/users/google-cla%5Bbot%5D/followers", "following_url": "https://api.github.com/users/google-cla%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/google-cla%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/google-cla%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google-cla%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/google-cla%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/google-cla%5Bbot%5D/repos", "events_url": "https://api.github.com/users/google-cla%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/google-cla%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "created_at": "2022-05-18T15:47:27Z", "updated_at": "2022-05-18T15:47:27Z", "author_association": "NONE", "body": "Thanks for your pull request! It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\nFor more information, open the [CLA check for this pull request](https://github.com/google/it-cert-automation-practice/pull/21385/checks?check_run_id=6492605804).", "reactions": {"url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/comments/1130189583/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "performed_via_github_app": null}}, "public": true, "created_at": "2022-05-18T15:47:27Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858393881", "type": "PullRequestEvent", "actor": {"id": 92602419, "login": "LloydObs", "display_login": "LloydObs", "gravatar_id": "", "url": "https://api.github.com/users/LloydObs", "avatar_url": "https://avatars.githubusercontent.com/u/92602419?"}, "repo": {"id": 228683419, "name": "google/it-cert-automation-practice", "url": "https://api.github.com/repos/google/it-cert-automation-practice"}, "payload": {"action": "opened", "number": 21385, "pull_request": {"url": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/21385", "id": 940144616, "node_id": "PR_kwDODaFum844CXfo", "html_url": "https://github.com/google/it-cert-automation-practice/pull/21385", "diff_url": "https://github.com/google/it-cert-automation-practice/pull/21385.diff", "patch_url": "https://github.com/google/it-cert-automation-practice/pull/21385.patch", "issue_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21385", "number": 21385, "state": "open", "locked": false, "title": "Updated if statements in validations.py", "user": {"login": "LloydObs", "id": 92602419, "node_id": "U_kgDOBYUAMw", "avatar_url": "https://avatars.githubusercontent.com/u/92602419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LloydObs", "html_url": "https://github.com/LloydObs", "followers_url": "https://api.github.com/users/LloydObs/followers", "following_url": "https://api.github.com/users/LloydObs/following{/other_user}", "gists_url": "https://api.github.com/users/LloydObs/gists{/gist_id}", "starred_url": "https://api.github.com/users/LloydObs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LloydObs/subscriptions", "organizations_url": "https://api.github.com/users/LloydObs/orgs", "repos_url": "https://api.github.com/users/LloydObs/repos", "events_url": "https://api.github.com/users/LloydObs/events{/privacy}", "received_events_url": "https://api.github.com/users/LloydObs/received_events", "type": "User", "site_admin": false}, "body": "Fixed the if statements so that code names with dots and underscores at the beginning return false.\r\nCloses: #1\r\n\r\n\r\nFixes #<issue_number_goes_here>\r\n\r\n\r\n> It's a good idea to open an issue first for discussion.\r\n\r\n- [ ] Tests pass\r\n- [ ] Appropriate changes to README are included in PR", "created_at": "2022-05-18T15:47:23Z", "updated_at": "2022-05-18T15:47:23Z", "closed_at": null, "merged_at": null, "merge_commit_sha": null, "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/21385/commits", "review_comments_url": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/21385/comments", "review_comment_url": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21385/comments", "statuses_url": "https://api.github.com/repos/google/it-cert-automation-practice/statuses/2a58ebd619646a95951504727b3148b0e01c75ca", "head": {"label": "LloydObs:improve-username-behavior", "ref": "improve-username-behavior", "sha": "2a58ebd619646a95951504727b3148b0e01c75ca", "user": {"login": "LloydObs", "id": 92602419, "node_id": "U_kgDOBYUAMw", "avatar_url": "https://avatars.githubusercontent.com/u/92602419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LloydObs", "html_url": "https://github.com/LloydObs", "followers_url": "https://api.github.com/users/LloydObs/followers", "following_url": "https://api.github.com/users/LloydObs/following{/other_user}", "gists_url": "https://api.github.com/users/LloydObs/gists{/gist_id}", "starred_url": "https://api.github.com/users/LloydObs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LloydObs/subscriptions", "organizations_url": "https://api.github.com/users/LloydObs/orgs", "repos_url": "https://api.github.com/users/LloydObs/repos", "events_url": "https://api.github.com/users/LloydObs/events{/privacy}", "received_events_url": "https://api.github.com/users/LloydObs/received_events", "type": "User", "site_admin": false}, "repo": {"id": 493708613, "node_id": "R_kgDOHW1lRQ", "name": "it-cert-automation-practice", "full_name": "LloydObs/it-cert-automation-practice", "private": false, "owner": {"login": "LloydObs", "id": 92602419, "node_id": "U_kgDOBYUAMw", "avatar_url": "https://avatars.githubusercontent.com/u/92602419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LloydObs", "html_url": "https://github.com/LloydObs", "followers_url": "https://api.github.com/users/LloydObs/followers", "following_url": "https://api.github.com/users/LloydObs/following{/other_user}", "gists_url": "https://api.github.com/users/LloydObs/gists{/gist_id}", "starred_url": "https://api.github.com/users/LloydObs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LloydObs/subscriptions", "organizations_url": "https://api.github.com/users/LloydObs/orgs", "repos_url": "https://api.github.com/users/LloydObs/repos", "events_url": "https://api.github.com/users/LloydObs/events{/privacy}", "received_events_url": "https://api.github.com/users/LloydObs/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/LloydObs/it-cert-automation-practice", "description": "Google IT Automation with Python Professional Certificate - Practice files", "fork": true, "url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice", "forks_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/forks", "keys_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/teams", "hooks_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/hooks", "issue_events_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/issues/events{/number}", "events_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/events", "assignees_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/assignees{/user}", "branches_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/branches{/branch}", "tags_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/tags", "blobs_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/git/refs{/sha}", "trees_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/statuses/{sha}", "languages_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/languages", "stargazers_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/stargazers", "contributors_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/contributors", "subscribers_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/subscribers", "subscription_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/subscription", "commits_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/commits{/sha}", "git_commits_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/git/commits{/sha}", "comments_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/comments{/number}", "issue_comment_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/issues/comments{/number}", "contents_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/contents/{+path}", "compare_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/merges", "archive_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/downloads", "issues_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/issues{/number}", "pulls_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/pulls{/number}", "milestones_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/milestones{/number}", "notifications_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/labels{/name}", "releases_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/releases{/id}", "deployments_url": "https://api.github.com/repos/LloydObs/it-cert-automation-practice/deployments", "created_at": "2022-05-18T14:55:25Z", "updated_at": "2022-05-15T19:27:17Z", "pushed_at": "2022-05-18T15:43:50Z", "git_url": "git://github.com/LloydObs/it-cert-automation-practice.git", "ssh_url": "git@github.com:LloydObs/it-cert-automation-practice.git", "clone_url": "https://github.com/LloydObs/it-cert-automation-practice.git", "svn_url": "https://github.com/LloydObs/it-cert-automation-practice", "homepage": "", "size": 16, "stargazers_count": 0, "watchers_count": 0, "language": null, "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "google:master", "ref": "master", "sha": "33be82d3312541acf8e83e3d8b9c4e23c7b1dab6", "user": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 228683419, "node_id": "MDEwOlJlcG9zaXRvcnkyMjg2ODM0MTk=", "name": "it-cert-automation-practice", "full_name": "google/it-cert-automation-practice", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/it-cert-automation-practice", "description": "Google IT Automation with Python Professional Certificate - Practice files", "fork": false, "url": "https://api.github.com/repos/google/it-cert-automation-practice", "forks_url": "https://api.github.com/repos/google/it-cert-automation-practice/forks", "keys_url": "https://api.github.com/repos/google/it-cert-automation-practice/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/it-cert-automation-practice/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/it-cert-automation-practice/teams", "hooks_url": "https://api.github.com/repos/google/it-cert-automation-practice/hooks", "issue_events_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/events{/number}", "events_url": "https://api.github.com/repos/google/it-cert-automation-practice/events", "assignees_url": "https://api.github.com/repos/google/it-cert-automation-practice/assignees{/user}", "branches_url": "https://api.github.com/repos/google/it-cert-automation-practice/branches{/branch}", "tags_url": "https://api.github.com/repos/google/it-cert-automation-practice/tags", "blobs_url": "https://api.github.com/repos/google/it-cert-automation-practice/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/it-cert-automation-practice/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/it-cert-automation-practice/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/it-cert-automation-practice/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/it-cert-automation-practice/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/it-cert-automation-practice/languages", "stargazers_url": "https://api.github.com/repos/google/it-cert-automation-practice/stargazers", "contributors_url": "https://api.github.com/repos/google/it-cert-automation-practice/contributors", "subscribers_url": "https://api.github.com/repos/google/it-cert-automation-practice/subscribers", "subscription_url": "https://api.github.com/repos/google/it-cert-automation-practice/subscription", "commits_url": "https://api.github.com/repos/google/it-cert-automation-practice/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/it-cert-automation-practice/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/it-cert-automation-practice/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/it-cert-automation-practice/contents/{+path}", "compare_url": "https://api.github.com/repos/google/it-cert-automation-practice/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/it-cert-automation-practice/merges", "archive_url": "https://api.github.com/repos/google/it-cert-automation-practice/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/it-cert-automation-practice/downloads", "issues_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues{/number}", "pulls_url": "https://api.github.com/repos/google/it-cert-automation-practice/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/it-cert-automation-practice/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/it-cert-automation-practice/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/it-cert-automation-practice/labels{/name}", "releases_url": "https://api.github.com/repos/google/it-cert-automation-practice/releases{/id}", "deployments_url": "https://api.github.com/repos/google/it-cert-automation-practice/deployments", "created_at": "2019-12-17T19:04:12Z", "updated_at": "2022-05-15T19:27:17Z", "pushed_at": "2022-05-18T15:37:33Z", "git_url": "git://github.com/google/it-cert-automation-practice.git", "ssh_url": "git@github.com:google/it-cert-automation-practice.git", "clone_url": "https://github.com/google/it-cert-automation-practice.git", "svn_url": "https://github.com/google/it-cert-automation-practice", "homepage": "", "size": 16, "stargazers_count": 503, "watchers_count": 503, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 25866, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 17697, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 25866, "open_issues": 17697, "watchers": 503, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/21385"}, "html": {"href": "https://github.com/google/it-cert-automation-practice/pull/21385"}, "issue": {"href": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21385"}, "comments": {"href": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21385/comments"}, "review_comments": {"href": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/21385/comments"}, "review_comment": {"href": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/21385/commits"}, "statuses": {"href": "https://api.github.com/repos/google/it-cert-automation-practice/statuses/2a58ebd619646a95951504727b3148b0e01c75ca"}}, "author_association": "NONE", "auto_merge": null, "active_lock_reason": null, "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 0, "review_comments": 0, "maintainer_can_modify": true, "commits": 2, "additions": 7, "deletions": 1, "changed_files": 2}}, "public": true, "created_at": "2022-05-18T15:47:24Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858393052", "type": "PushEvent", "actor": {"id": 56741989, "login": "copybara-service[bot]", "display_login": "copybara-service", "gravatar_id": "", "url": "https://api.github.com/users/copybara-service[bot]", "avatar_url": "https://avatars.githubusercontent.com/u/56741989?"}, "repo": {"id": 131212638, "name": "google/gvisor", "url": "https://api.github.com/repos/google/gvisor"}, "payload": {"push_id": 9918265608, "size": 17, "distinct_size": 1, "ref": "refs/heads/test/cl448334931", "head": "d853b637980d43c799693cf96c6398f4540a1e9e", "before": "b2c668b8ba8c7c2404f21630ac6fa5624d51970e", "commits": [{"sha": "d4652bd6dfd3a7ed086c4fd134ded1bee8cf1f32", "author": {"email": "gvisor-bot@google.com", "name": "gVisor bot"}, "message": "Use syscall() for fchmod() calls\n\nAvoids Bionic when running on Android.\nSee https://android-review.googlesource.com/c/platform/bionic/+/127908\n\nPiperOrigin-RevId: 448378850", "distinct": false, "url": "https://api.github.com/repos/google/gvisor/commits/d4652bd6dfd3a7ed086c4fd134ded1bee8cf1f32"}, {"sha": "db16575cb5fd54e1d910412c1d0a7c2492450fc1", "author": {"email": "bogomolov@google.com", "name": "Konstantin Bogomolov"}, "message": "KVM machine.Get(): Use up vCPU pool before scanning for available ones.\n\nPreviously, we created vCPUs on demand, and so taking an unused vCPU from the\npool was expensive. Now, we pre-create all vCPUs at the start, so it makes\nsense to use them all to reduce contention.\n\nPiperOrigin-RevId: 448382485", "distinct": false, "url": "https://api.github.com/repos/google/gvisor/commits/db16575cb5fd54e1d910412c1d0a7c2492450fc1"}, {"sha": "d44862f6725c585792e4181b74c74bc82a9d5886", "author": {"email": "avagin@google.com", "name": "Andrei Vagin"}, "message": "sentry/socket: use lockdep mutexes\n\nPiperOrigin-RevId: 448382489", "distinct": false, "url": "https://api.github.com/repos/google/gvisor/commits/d44862f6725c585792e4181b74c74bc82a9d5886"}, {"sha": "add538a44f15b449f24f262cdd85844c2b26d6e2", "author": {"email": "nahurley@google.com", "name": "Nate Hurley"}, "message": "Run multicast cleanup routine only when needed.\n\nAside from saving resources, this is also a workaround for the case where\ntimers are bound after the netstack is initialized.\n\nUpdates #7338.\n\nPiperOrigin-RevId: 448509194", "distinct": false, "url": "https://api.github.com/repos/google/gvisor/commits/add538a44f15b449f24f262cdd85844c2b26d6e2"}, {"sha": "fa2a88887d23ca5cb385e26ecad2b97448ed81ab", "author": {"email": "fvoznika@google.com", "name": "Fabricio Voznika"}, "message": "Deprecate --vfs2 flag and always enable by default\n\nAlso remove VFS1 dimension from runsc unit tests.\n\nUpdates #1624\n\nStartblock:\n  after 2022-05-30\nPiperOrigin-RevId: 448552271", "distinct": false, "url": "https://api.github.com/repos/google/gvisor/commits/fa2a88887d23ca5cb385e26ecad2b97448ed81ab"}, {"sha": "e189fb68860820c1903dc12fe3c7670d9ceacde2", "author": {"email": "fvoznika@google.com", "name": "Fabricio Voznika"}, "message": "Add version handshake before communication is stablished\n\nDetails on how it works is in wire.Handshake.\n\nUpdates #4805\n\nPiperOrigin-RevId: 448552448", "distinct": false, "url": "https://api.github.com/repos/google/gvisor/commits/e189fb68860820c1903dc12fe3c7670d9ceacde2"}, {"sha": "ae508f406429537e77252fcc7336460a7a653a87", "author": {"email": "ghanan@google.com", "name": "Ghanan Gowripalan"}, "message": "Track packets dropped by full device TX queue\n\nQDisc/LinkEndpoint may drop packets if the device's send/transmit queue\nis full.\n\nBUG: https://fxbug.dev/98974\nPiperOrigin-RevId: 448570489", "distinct": false, "url": "https://api.github.com/repos/google/gvisor/commits/ae508f406429537e77252fcc7336460a7a653a87"}, {"sha": "3b83c30622c043d57a393b26018ad6a41b924684", "author": {"email": "bogomolov@google.com", "name": "Konstantin Bogomolov"}, "message": "Fix regression in KVM due to metric in machine.Get().\n\nReplaced timer metric with counter, which seems to give similar performance to\nremoving the metric outright.\n\nPiperOrigin-RevId: 448576866", "distinct": false, "url": "https://api.github.com/repos/google/gvisor/commits/3b83c30622c043d57a393b26018ad6a41b924684"}, {"sha": "58e9ba2724a7b8e07cdd4d2915119ee11d02f830", "author": {"email": "avagin@google.com", "name": "Andrei Vagin"}, "message": "buildkite: don't run docker tests on COS\n\nOn COS, buildkite agents are running inside docker containers and so\nwe can't modify a docker config and restart a docker daemon.\n\nPiperOrigin-RevId: 449063929", "distinct": false, "url": "https://api.github.com/repos/google/gvisor/commits/58e9ba2724a7b8e07cdd4d2915119ee11d02f830"}, {"sha": "e7508b5ecc505809edbf9b76a61d603ba7373b8b", "author": {"email": "avagin@google.com", "name": "Andrei Vagin"}, "message": "buildkite: require kvm for Benchmarks smoke test\n\nPiperOrigin-RevId: 449079133", "distinct": false, "url": "https://api.github.com/repos/google/gvisor/commits/e7508b5ecc505809edbf9b76a61d603ba7373b8b"}, {"sha": "251f2c0561bd91db414658c37db8b25afa7cfc40", "author": {"email": "avagin@google.com", "name": "Andrei Vagin"}, "message": "mm: use lockdep mutexes\n\nPiperOrigin-RevId: 449117356", "distinct": false, "url": "https://api.github.com/repos/google/gvisor/commits/251f2c0561bd91db414658c37db8b25afa7cfc40"}, {"sha": "f6ed4523dceb2f90b4894b1f696a474da0a5341f", "author": {"email": "ayushranjan@google.com", "name": "Ayush Ranjan"}, "message": "Reformat codebase.\n\nPiperOrigin-RevId: 449358041", "distinct": false, "url": "https://api.github.com/repos/google/gvisor/commits/f6ed4523dceb2f90b4894b1f696a474da0a5341f"}, {"sha": "2ed45d09645283d358d393b05661df72e6b0de50", "author": {"email": "avagin@google.com", "name": "Andrei Vagin"}, "message": "buildkite: run \"Release tests\" on amd64\n\nThis test fails on arm64:\nERROR: vdso/BUILD:12:8: Executing genrule //vdso:vdso failed: (Exit 1):\nbash failed: error executing command /bin/bash -c ...\n\nUse --sandbox_debug to see verbose messages from the sandbox\ngcc: error: unrecognized command line option '-m64'\nTarget //runsc:runsc failed to build\nPiperOrigin-RevId: 449398920", "distinct": false, "url": "https://api.github.com/repos/google/gvisor/commits/2ed45d09645283d358d393b05661df72e6b0de50"}, {"sha": "a3d5746ce0974329cf81ca72b592b831d35dc507", "author": {"email": "ayushranjan@google.com", "name": "Ayush Ranjan"}, "message": "Automated rollback of changelist 359350716\n\nPiperOrigin-RevId: 449414348", "distinct": false, "url": "https://api.github.com/repos/google/gvisor/commits/a3d5746ce0974329cf81ca72b592b831d35dc507"}, {"sha": "bda5ce7977bd88379ba59291e2a9ef04a98ce239", "author": {"email": "ayushranjan@google.com", "name": "Ayush Ranjan"}, "message": "Simplify codebase.\n\nRan gofmt -w -s ./\n\nPiperOrigin-RevId: 449415155", "distinct": false, "url": "https://api.github.com/repos/google/gvisor/commits/bda5ce7977bd88379ba59291e2a9ef04a98ce239"}, {"sha": "98f5323163c41328aea6845a516d560bbfa8065b", "author": {"email": "nahurley@google.com", "name": "Nate Hurley"}, "message": "Use testutil.MustParse4/6 instead of net.ParseIP in tcpip test utils.\n\nAlso dedupe the RemoteIPv4Addr.\n\nUpdates #7338.\n\nPiperOrigin-RevId: 449488567", "distinct": false, "url": "https://api.github.com/repos/google/gvisor/commits/98f5323163c41328aea6845a516d560bbfa8065b"}, {"sha": "d853b637980d43c799693cf96c6398f4540a1e9e", "author": {"email": "avagin@gmail.com", "name": "Andrei Vagin"}, "message": "runsc-race: Fix compile time errors on arm64\n\nrunsc/fsgofer/filter/extra_filters_race.go:38:3: undefined: unix.SYS_OPEN\nrunsc/fsgofer/filter/extra_filters_race.go:42:3: undefined: unix.SYS_TIME\n\nFUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/google/gvisor/pull/7559 from avagin:runsc-race-arm64 bc80e774c050fefc1e9bf56d2c76e3e87f146d4b\nPiperOrigin-RevId: 448334931", "distinct": true, "url": "https://api.github.com/repos/google/gvisor/commits/d853b637980d43c799693cf96c6398f4540a1e9e"}]}, "public": true, "created_at": "2022-05-18T15:47:21Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858379961", "type": "WatchEvent", "actor": {"id": 46703789, "login": "vrsct", "display_login": "vrsct", "gravatar_id": "", "url": "https://api.github.com/users/vrsct", "avatar_url": "https://avatars.githubusercontent.com/u/46703789?"}, "repo": {"id": 16389681, "name": "google/j2objc", "url": "https://api.github.com/repos/google/j2objc"}, "payload": {"action": "started"}, "public": true, "created_at": "2022-05-18T15:46:43Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858371323", "type": "PushEvent", "actor": {"id": 36927374, "login": "ncooke3", "display_login": "ncooke3", "gravatar_id": "", "url": "https://api.github.com/users/ncooke3", "avatar_url": "https://avatars.githubusercontent.com/u/36927374?"}, "repo": {"id": 330423998, "name": "google/GoogleDataTransport", "url": "https://api.github.com/repos/google/GoogleDataTransport"}, "payload": {"push_id": 9918255136, "size": 1, "distinct_size": 1, "ref": "refs/heads/nc/metrics-controller", "head": "3a878f2e2cfeb55b9174f56fb8a3027ee3856b5d", "before": "19b1b5ad1265da32988237472620e562246f56cf", "commits": [{"sha": "3a878f2e2cfeb55b9174f56fb8a3027ee3856b5d", "author": {"email": "nickcooke@google.com", "name": "Nick Cooke"}, "message": "Disable failing test", "distinct": true, "url": "https://api.github.com/repos/google/GoogleDataTransport/commits/3a878f2e2cfeb55b9174f56fb8a3027ee3856b5d"}]}, "public": true, "created_at": "2022-05-18T15:46:19Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858365353", "type": "IssueCommentEvent", "actor": {"id": 103200612, "login": "davidorlov12", "display_login": "davidorlov12", "gravatar_id": "", "url": "https://api.github.com/users/davidorlov12", "avatar_url": "https://avatars.githubusercontent.com/u/103200612?"}, "repo": {"id": 23086893, "name": "google/re2", "url": "https://api.github.com/repos/google/re2"}, "payload": {"action": "created", "issue": {"url": "https://api.github.com/repos/google/re2/issues/375", "repository_url": "https://api.github.com/repos/google/re2", "labels_url": "https://api.github.com/repos/google/re2/issues/375/labels{/name}", "comments_url": "https://api.github.com/repos/google/re2/issues/375/comments", "events_url": "https://api.github.com/repos/google/re2/issues/375/events", "html_url": "https://github.com/google/re2/issues/375", "id": 1240093620, "node_id": "I_kwDOAWBHLc5J6lO0", "number": 375, "title": "google-re2 python library is broken in macos", "user": {"login": "davidorlov12", "id": 103200612, "node_id": "U_kgDOBia3ZA", "avatar_url": "https://avatars.githubusercontent.com/u/103200612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidorlov12", "html_url": "https://github.com/davidorlov12", "followers_url": "https://api.github.com/users/davidorlov12/followers", "following_url": "https://api.github.com/users/davidorlov12/following{/other_user}", "gists_url": "https://api.github.com/users/davidorlov12/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidorlov12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidorlov12/subscriptions", "organizations_url": "https://api.github.com/users/davidorlov12/orgs", "repos_url": "https://api.github.com/users/davidorlov12/repos", "events_url": "https://api.github.com/users/davidorlov12/events{/privacy}", "received_events_url": "https://api.github.com/users/davidorlov12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2022-05-18T14:55:42Z", "updated_at": "2022-05-18T15:46:02Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "`Collecting google-re2\r\n  Using cached google-re2-0.2.20220401.tar.gz (8.9 kB)\r\nUsing legacy 'setup.py install' for google-re2, since package 'wheel' is not installed.\r\nInstalling collected packages: google-re2\r\n  Attempting uninstall: google-re2\r\n    Found existing installation: google-re2 0.2.20220401\r\n    Uninstalling google-re2-0.2.20220401:\r\n      Successfully uninstalled google-re2-0.2.20220401\r\n    Running setup.py install for google-re2 ... error\r\n    ERROR: Command errored out with exit status 1:\r\n     command: /usr/local/bin/python3 -u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/private/var/folders/gw/r4wz7n_s5xv7573tnjjbz43w0000gn/T/pip-install-ef9hfwko/google-re2_d9c8e8123a6642909bb2495dfef98321/setup.py'\"'\"'; __file__='\"'\"'/private/var/folders/gw/r4wz7n_s5xv7573tnjjbz43w0000gn/T/pip-install-ef9hfwko/google-re2_d9c8e8123a6642909bb2495dfef98321/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /private/var/folders/gw/r4wz7n_s5xv7573tnjjbz43w0000gn/T/pip-record-nk0t09sm/install-record.txt --single-version-externally-managed --compile --install-headers /Library/Frameworks/Python.framework/Versions/3.10/include/python3.10/google-re2\r\n         cwd: /private/var/folders/gw/r4wz7n_s5xv7573tnjjbz43w0000gn/T/pip-install-ef9hfwko/google-re2_d9c8e8123a6642909bb2495dfef98321/\r\n    Complete output (176 lines):\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build/lib.macosx-10.9-universal2-3.10\r\n    copying re2.py -> build/lib.macosx-10.9-universal2-3.10\r\n    running build_ext\r\n    building '_re2' extension\r\n    creating build/temp.macosx-10.9-universal2-3.10\r\n    clang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch arm64 -arch x86_64 -g -I/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pybind11/include -I/Library/Frameworks/Python.framework/Versions/3.10/include/python3.10 -c _re2.cc -o build/temp.macosx-10.9-universal2-3.10/_re2.o -fvisibility=hidden\r\n    In file included from _re2.cc:11:\r\n    In file included from /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pybind11/include/pybind11/pybind11.h:13:\r\n    In file included from /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pybind11/include/pybind11/detail/class.h:12:\r\n    In file included from /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pybind11/include/pybind11/detail/../attr.h:13:\r\n    In file included from /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pybind11/include/pybind11/cast.h:13:\r\n    /Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pybind11/include/pybind11/detail/common.h:460:17: warning: alias declarations are a C++11 extension [-Wc++11-extensions]\r\n    using ssize_t = Py_ssize_t;\r\n                    ^\r\n.\r\n.\r\n.\r\n.\r\n.\r\n.\r\n`\r\n\r\n\r\n\r\nto fix this run:\r\nbrew install re2\r\nbrew install pybind11\r\nexport CFLAGS=\"-std=c++11 -I/opt/homebrew/include\" LDFLAGS=\"-L/opt/homebrew/lib/\"\r\npip3 install google-re2", "reactions": {"url": "https://api.github.com/repos/google/re2/issues/375/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/google/re2/issues/375/timeline", "performed_via_github_app": null}, "comment": {"url": "https://api.github.com/repos/google/re2/issues/comments/1130188051", "html_url": "https://github.com/google/re2/issues/375#issuecomment-1130188051", "issue_url": "https://api.github.com/repos/google/re2/issues/375", "id": 1130188051, "node_id": "IC_kwDOAWBHLc5DXU0T", "user": {"login": "davidorlov12", "id": 103200612, "node_id": "U_kgDOBia3ZA", "avatar_url": "https://avatars.githubusercontent.com/u/103200612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidorlov12", "html_url": "https://github.com/davidorlov12", "followers_url": "https://api.github.com/users/davidorlov12/followers", "following_url": "https://api.github.com/users/davidorlov12/following{/other_user}", "gists_url": "https://api.github.com/users/davidorlov12/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidorlov12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidorlov12/subscriptions", "organizations_url": "https://api.github.com/users/davidorlov12/orgs", "repos_url": "https://api.github.com/users/davidorlov12/repos", "events_url": "https://api.github.com/users/davidorlov12/events{/privacy}", "received_events_url": "https://api.github.com/users/davidorlov12/received_events", "type": "User", "site_admin": false}, "created_at": "2022-05-18T15:46:01Z", "updated_at": "2022-05-18T15:46:01Z", "author_association": "NONE", "body": "haha until the Homebrew folks will add insights to make it Just Work\u2122, can it be added to the PyPI google-re2 package description ?\r\nso other lost souls like my self can use re2 easily in macOS? ", "reactions": {"url": "https://api.github.com/repos/google/re2/issues/comments/1130188051/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "performed_via_github_app": null}}, "public": true, "created_at": "2022-05-18T15:46:02Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858358360", "type": "IssueCommentEvent", "actor": {"id": 55858104, "login": "google-cla[bot]", "display_login": "google-cla", "gravatar_id": "", "url": "https://api.github.com/users/google-cla[bot]", "avatar_url": "https://avatars.githubusercontent.com/u/55858104?"}, "repo": {"id": 19953044, "name": "google/flatbuffers", "url": "https://api.github.com/repos/google/flatbuffers"}, "payload": {"action": "created", "issue": {"url": "https://api.github.com/repos/google/flatbuffers/issues/7312", "repository_url": "https://api.github.com/repos/google/flatbuffers", "labels_url": "https://api.github.com/repos/google/flatbuffers/issues/7312/labels{/name}", "comments_url": "https://api.github.com/repos/google/flatbuffers/issues/7312/comments", "events_url": "https://api.github.com/repos/google/flatbuffers/issues/7312/events", "html_url": "https://github.com/google/flatbuffers/pull/7312", "id": 1240159488, "node_id": "PR_kwDOATB1lM44CXB9", "number": 7312, "title": "Add explicit return types to lobster generated code", "user": {"login": "bartwe", "id": 117214, "node_id": "MDQ6VXNlcjExNzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/117214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartwe", "html_url": "https://github.com/bartwe", "followers_url": "https://api.github.com/users/bartwe/followers", "following_url": "https://api.github.com/users/bartwe/following{/other_user}", "gists_url": "https://api.github.com/users/bartwe/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartwe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartwe/subscriptions", "organizations_url": "https://api.github.com/users/bartwe/orgs", "repos_url": "https://api.github.com/users/bartwe/repos", "events_url": "https://api.github.com/users/bartwe/events{/privacy}", "received_events_url": "https://api.github.com/users/bartwe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-05-18T15:45:37Z", "updated_at": "2022-05-18T15:45:40Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/google/flatbuffers/pulls/7312", "html_url": "https://github.com/google/flatbuffers/pull/7312", "diff_url": "https://github.com/google/flatbuffers/pull/7312.diff", "patch_url": "https://github.com/google/flatbuffers/pull/7312.patch", "merged_at": null}, "body": "Adds explicit return type signatures to the generated lobster bindings as discussed with @aardappel ", "reactions": {"url": "https://api.github.com/repos/google/flatbuffers/issues/7312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/google/flatbuffers/issues/7312/timeline", "performed_via_github_app": null}, "comment": {"url": "https://api.github.com/repos/google/flatbuffers/issues/comments/1130187667", "html_url": "https://github.com/google/flatbuffers/pull/7312#issuecomment-1130187667", "issue_url": "https://api.github.com/repos/google/flatbuffers/issues/7312", "id": 1130187667, "node_id": "IC_kwDOATB1lM5DXUuT", "user": {"login": "google-cla[bot]", "id": 55858104, "node_id": "MDM6Qm90NTU4NTgxMDQ=", "avatar_url": "https://avatars.githubusercontent.com/in/42202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google-cla%5Bbot%5D", "html_url": "https://github.com/apps/google-cla", "followers_url": "https://api.github.com/users/google-cla%5Bbot%5D/followers", "following_url": "https://api.github.com/users/google-cla%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/google-cla%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/google-cla%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google-cla%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/google-cla%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/google-cla%5Bbot%5D/repos", "events_url": "https://api.github.com/users/google-cla%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/google-cla%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "created_at": "2022-05-18T15:45:40Z", "updated_at": "2022-05-18T15:45:40Z", "author_association": "NONE", "body": "Thanks for your pull request! It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\nFor more information, open the [CLA check for this pull request](https://github.com/google/flatbuffers/pull/7312/checks?check_run_id=6492576740).", "reactions": {"url": "https://api.github.com/repos/google/flatbuffers/issues/comments/1130187667/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "performed_via_github_app": null}}, "public": true, "created_at": "2022-05-18T15:45:40Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858357419", "type": "PullRequestEvent", "actor": {"id": 117214, "login": "bartwe", "display_login": "bartwe", "gravatar_id": "", "url": "https://api.github.com/users/bartwe", "avatar_url": "https://avatars.githubusercontent.com/u/117214?"}, "repo": {"id": 19953044, "name": "google/flatbuffers", "url": "https://api.github.com/repos/google/flatbuffers"}, "payload": {"action": "opened", "number": 7312, "pull_request": {"url": "https://api.github.com/repos/google/flatbuffers/pulls/7312", "id": 940142717, "node_id": "PR_kwDOATB1lM44CXB9", "html_url": "https://github.com/google/flatbuffers/pull/7312", "diff_url": "https://github.com/google/flatbuffers/pull/7312.diff", "patch_url": "https://github.com/google/flatbuffers/pull/7312.patch", "issue_url": "https://api.github.com/repos/google/flatbuffers/issues/7312", "number": 7312, "state": "open", "locked": false, "title": "Add explicit return types to lobster generated code", "user": {"login": "bartwe", "id": 117214, "node_id": "MDQ6VXNlcjExNzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/117214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartwe", "html_url": "https://github.com/bartwe", "followers_url": "https://api.github.com/users/bartwe/followers", "following_url": "https://api.github.com/users/bartwe/following{/other_user}", "gists_url": "https://api.github.com/users/bartwe/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartwe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartwe/subscriptions", "organizations_url": "https://api.github.com/users/bartwe/orgs", "repos_url": "https://api.github.com/users/bartwe/repos", "events_url": "https://api.github.com/users/bartwe/events{/privacy}", "received_events_url": "https://api.github.com/users/bartwe/received_events", "type": "User", "site_admin": false}, "body": "Adds explicit return type signatures to the generated lobster bindings as discussed with @aardappel ", "created_at": "2022-05-18T15:45:37Z", "updated_at": "2022-05-18T15:45:37Z", "closed_at": null, "merged_at": null, "merge_commit_sha": null, "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/google/flatbuffers/pulls/7312/commits", "review_comments_url": "https://api.github.com/repos/google/flatbuffers/pulls/7312/comments", "review_comment_url": "https://api.github.com/repos/google/flatbuffers/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/google/flatbuffers/issues/7312/comments", "statuses_url": "https://api.github.com/repos/google/flatbuffers/statuses/abd7c1d1f06e30529a5fd15e0732dad783423377", "head": {"label": "bartwe:master", "ref": "master", "sha": "abd7c1d1f06e30529a5fd15e0732dad783423377", "user": {"login": "bartwe", "id": 117214, "node_id": "MDQ6VXNlcjExNzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/117214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartwe", "html_url": "https://github.com/bartwe", "followers_url": "https://api.github.com/users/bartwe/followers", "following_url": "https://api.github.com/users/bartwe/following{/other_user}", "gists_url": "https://api.github.com/users/bartwe/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartwe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartwe/subscriptions", "organizations_url": "https://api.github.com/users/bartwe/orgs", "repos_url": "https://api.github.com/users/bartwe/repos", "events_url": "https://api.github.com/users/bartwe/events{/privacy}", "received_events_url": "https://api.github.com/users/bartwe/received_events", "type": "User", "site_admin": false}, "repo": {"id": 493725883, "node_id": "R_kgDOHW2ouw", "name": "flatbuffers", "full_name": "bartwe/flatbuffers", "private": false, "owner": {"login": "bartwe", "id": 117214, "node_id": "MDQ6VXNlcjExNzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/117214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartwe", "html_url": "https://github.com/bartwe", "followers_url": "https://api.github.com/users/bartwe/followers", "following_url": "https://api.github.com/users/bartwe/following{/other_user}", "gists_url": "https://api.github.com/users/bartwe/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartwe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartwe/subscriptions", "organizations_url": "https://api.github.com/users/bartwe/orgs", "repos_url": "https://api.github.com/users/bartwe/repos", "events_url": "https://api.github.com/users/bartwe/events{/privacy}", "received_events_url": "https://api.github.com/users/bartwe/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/bartwe/flatbuffers", "description": "FlatBuffers: Memory Efficient Serialization Library", "fork": true, "url": "https://api.github.com/repos/bartwe/flatbuffers", "forks_url": "https://api.github.com/repos/bartwe/flatbuffers/forks", "keys_url": "https://api.github.com/repos/bartwe/flatbuffers/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/bartwe/flatbuffers/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/bartwe/flatbuffers/teams", "hooks_url": "https://api.github.com/repos/bartwe/flatbuffers/hooks", "issue_events_url": "https://api.github.com/repos/bartwe/flatbuffers/issues/events{/number}", "events_url": "https://api.github.com/repos/bartwe/flatbuffers/events", "assignees_url": "https://api.github.com/repos/bartwe/flatbuffers/assignees{/user}", "branches_url": "https://api.github.com/repos/bartwe/flatbuffers/branches{/branch}", "tags_url": "https://api.github.com/repos/bartwe/flatbuffers/tags", "blobs_url": "https://api.github.com/repos/bartwe/flatbuffers/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/bartwe/flatbuffers/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/bartwe/flatbuffers/git/refs{/sha}", "trees_url": "https://api.github.com/repos/bartwe/flatbuffers/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/bartwe/flatbuffers/statuses/{sha}", "languages_url": "https://api.github.com/repos/bartwe/flatbuffers/languages", "stargazers_url": "https://api.github.com/repos/bartwe/flatbuffers/stargazers", "contributors_url": "https://api.github.com/repos/bartwe/flatbuffers/contributors", "subscribers_url": "https://api.github.com/repos/bartwe/flatbuffers/subscribers", "subscription_url": "https://api.github.com/repos/bartwe/flatbuffers/subscription", "commits_url": "https://api.github.com/repos/bartwe/flatbuffers/commits{/sha}", "git_commits_url": "https://api.github.com/repos/bartwe/flatbuffers/git/commits{/sha}", "comments_url": "https://api.github.com/repos/bartwe/flatbuffers/comments{/number}", "issue_comment_url": "https://api.github.com/repos/bartwe/flatbuffers/issues/comments{/number}", "contents_url": "https://api.github.com/repos/bartwe/flatbuffers/contents/{+path}", "compare_url": "https://api.github.com/repos/bartwe/flatbuffers/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/bartwe/flatbuffers/merges", "archive_url": "https://api.github.com/repos/bartwe/flatbuffers/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/bartwe/flatbuffers/downloads", "issues_url": "https://api.github.com/repos/bartwe/flatbuffers/issues{/number}", "pulls_url": "https://api.github.com/repos/bartwe/flatbuffers/pulls{/number}", "milestones_url": "https://api.github.com/repos/bartwe/flatbuffers/milestones{/number}", "notifications_url": "https://api.github.com/repos/bartwe/flatbuffers/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/bartwe/flatbuffers/labels{/name}", "releases_url": "https://api.github.com/repos/bartwe/flatbuffers/releases{/id}", "deployments_url": "https://api.github.com/repos/bartwe/flatbuffers/deployments", "created_at": "2022-05-18T15:41:26Z", "updated_at": "2022-05-18T15:44:02Z", "pushed_at": "2022-05-18T15:43:53Z", "git_url": "git://github.com/bartwe/flatbuffers.git", "ssh_url": "git@github.com:bartwe/flatbuffers.git", "clone_url": "https://github.com/bartwe/flatbuffers.git", "svn_url": "https://github.com/bartwe/flatbuffers", "homepage": "http://google.github.io/flatbuffers/", "size": 16203, "stargazers_count": 0, "watchers_count": 0, "language": "C++", "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "google:master", "ref": "master", "sha": "74a25536be1d3242f52d98007a6a03934b675cbd", "user": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 19953044, "node_id": "MDEwOlJlcG9zaXRvcnkxOTk1MzA0NA==", "name": "flatbuffers", "full_name": "google/flatbuffers", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/flatbuffers", "description": "FlatBuffers: Memory Efficient Serialization Library", "fork": false, "url": "https://api.github.com/repos/google/flatbuffers", "forks_url": "https://api.github.com/repos/google/flatbuffers/forks", "keys_url": "https://api.github.com/repos/google/flatbuffers/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/flatbuffers/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/flatbuffers/teams", "hooks_url": "https://api.github.com/repos/google/flatbuffers/hooks", "issue_events_url": "https://api.github.com/repos/google/flatbuffers/issues/events{/number}", "events_url": "https://api.github.com/repos/google/flatbuffers/events", "assignees_url": "https://api.github.com/repos/google/flatbuffers/assignees{/user}", "branches_url": "https://api.github.com/repos/google/flatbuffers/branches{/branch}", "tags_url": "https://api.github.com/repos/google/flatbuffers/tags", "blobs_url": "https://api.github.com/repos/google/flatbuffers/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/flatbuffers/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/flatbuffers/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/flatbuffers/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/flatbuffers/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/flatbuffers/languages", "stargazers_url": "https://api.github.com/repos/google/flatbuffers/stargazers", "contributors_url": "https://api.github.com/repos/google/flatbuffers/contributors", "subscribers_url": "https://api.github.com/repos/google/flatbuffers/subscribers", "subscription_url": "https://api.github.com/repos/google/flatbuffers/subscription", "commits_url": "https://api.github.com/repos/google/flatbuffers/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/flatbuffers/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/flatbuffers/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/flatbuffers/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/flatbuffers/contents/{+path}", "compare_url": "https://api.github.com/repos/google/flatbuffers/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/flatbuffers/merges", "archive_url": "https://api.github.com/repos/google/flatbuffers/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/flatbuffers/downloads", "issues_url": "https://api.github.com/repos/google/flatbuffers/issues{/number}", "pulls_url": "https://api.github.com/repos/google/flatbuffers/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/flatbuffers/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/flatbuffers/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/flatbuffers/labels{/name}", "releases_url": "https://api.github.com/repos/google/flatbuffers/releases{/id}", "deployments_url": "https://api.github.com/repos/google/flatbuffers/deployments", "created_at": "2014-05-19T18:33:01Z", "updated_at": "2022-05-18T10:41:24Z", "pushed_at": "2022-05-17T16:56:50Z", "git_url": "git://github.com/google/flatbuffers.git", "ssh_url": "git@github.com:google/flatbuffers.git", "clone_url": "https://github.com/google/flatbuffers.git", "svn_url": "https://github.com/google/flatbuffers", "homepage": "http://google.github.io/flatbuffers/", "size": 16203, "stargazers_count": 17896, "watchers_count": 17896, "language": "C++", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": true, "forks_count": 2787, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 151, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "allow_forking": true, "is_template": false, "topics": ["c", "c-plus-plus", "c-sharp", "cross-platform", "flatbuffers", "go", "grpc", "java", "javascript", "json-parser", "marshalling", "mmap", "protobuf", "python", "rpc", "rust", "serialization", "serialization-library", "typescript", "zero-copy"], "visibility": "public", "forks": 2787, "open_issues": 151, "watchers": 17896, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/google/flatbuffers/pulls/7312"}, "html": {"href": "https://github.com/google/flatbuffers/pull/7312"}, "issue": {"href": "https://api.github.com/repos/google/flatbuffers/issues/7312"}, "comments": {"href": "https://api.github.com/repos/google/flatbuffers/issues/7312/comments"}, "review_comments": {"href": "https://api.github.com/repos/google/flatbuffers/pulls/7312/comments"}, "review_comment": {"href": "https://api.github.com/repos/google/flatbuffers/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/google/flatbuffers/pulls/7312/commits"}, "statuses": {"href": "https://api.github.com/repos/google/flatbuffers/statuses/abd7c1d1f06e30529a5fd15e0732dad783423377"}}, "author_association": "NONE", "auto_merge": null, "active_lock_reason": null, "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 0, "review_comments": 0, "maintainer_can_modify": true, "commits": 1, "additions": 21, "deletions": 7, "changed_files": 1}}, "public": true, "created_at": "2022-05-18T15:45:37Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858337381", "type": "WatchEvent", "actor": {"id": 57204004, "login": "acodervic", "display_login": "acodervic", "gravatar_id": "", "url": "https://api.github.com/users/acodervic", "avatar_url": "https://avatars.githubusercontent.com/u/57204004?"}, "repo": {"id": 20300177, "name": "google/guava", "url": "https://api.github.com/repos/google/guava"}, "payload": {"action": "started"}, "public": true, "created_at": "2022-05-18T15:44:38Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858288843", "type": "PushEvent", "actor": {"id": 36927374, "login": "ncooke3", "display_login": "ncooke3", "gravatar_id": "", "url": "https://api.github.com/users/ncooke3", "avatar_url": "https://avatars.githubusercontent.com/u/36927374?"}, "repo": {"id": 330423998, "name": "google/GoogleDataTransport", "url": "https://api.github.com/repos/google/GoogleDataTransport"}, "payload": {"push_id": 9918215481, "size": 1, "distinct_size": 1, "ref": "refs/heads/nc/metrics-controller", "head": "19b1b5ad1265da32988237472620e562246f56cf", "before": "2d225b52cbeb755cc2e89dcd6343aaffc6511f57", "commits": [{"sha": "19b1b5ad1265da32988237472620e562246f56cf", "author": {"email": "nickcooke@google.com", "name": "Nick Cooke"}, "message": "Update API for better readability", "distinct": true, "url": "https://api.github.com/repos/google/GoogleDataTransport/commits/19b1b5ad1265da32988237472620e562246f56cf"}]}, "public": true, "created_at": "2022-05-18T15:42:18Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858270689", "type": "ForkEvent", "actor": {"id": 117214, "login": "bartwe", "display_login": "bartwe", "gravatar_id": "", "url": "https://api.github.com/users/bartwe", "avatar_url": "https://avatars.githubusercontent.com/u/117214?"}, "repo": {"id": 19953044, "name": "google/flatbuffers", "url": "https://api.github.com/repos/google/flatbuffers"}, "payload": {"forkee": {"id": 493725883, "node_id": "R_kgDOHW2ouw", "name": "flatbuffers", "full_name": "bartwe/flatbuffers", "private": false, "owner": {"login": "bartwe", "id": 117214, "node_id": "MDQ6VXNlcjExNzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/117214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bartwe", "html_url": "https://github.com/bartwe", "followers_url": "https://api.github.com/users/bartwe/followers", "following_url": "https://api.github.com/users/bartwe/following{/other_user}", "gists_url": "https://api.github.com/users/bartwe/gists{/gist_id}", "starred_url": "https://api.github.com/users/bartwe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bartwe/subscriptions", "organizations_url": "https://api.github.com/users/bartwe/orgs", "repos_url": "https://api.github.com/users/bartwe/repos", "events_url": "https://api.github.com/users/bartwe/events{/privacy}", "received_events_url": "https://api.github.com/users/bartwe/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/bartwe/flatbuffers", "description": "FlatBuffers: Memory Efficient Serialization Library", "fork": true, "url": "https://api.github.com/repos/bartwe/flatbuffers", "forks_url": "https://api.github.com/repos/bartwe/flatbuffers/forks", "keys_url": "https://api.github.com/repos/bartwe/flatbuffers/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/bartwe/flatbuffers/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/bartwe/flatbuffers/teams", "hooks_url": "https://api.github.com/repos/bartwe/flatbuffers/hooks", "issue_events_url": "https://api.github.com/repos/bartwe/flatbuffers/issues/events{/number}", "events_url": "https://api.github.com/repos/bartwe/flatbuffers/events", "assignees_url": "https://api.github.com/repos/bartwe/flatbuffers/assignees{/user}", "branches_url": "https://api.github.com/repos/bartwe/flatbuffers/branches{/branch}", "tags_url": "https://api.github.com/repos/bartwe/flatbuffers/tags", "blobs_url": "https://api.github.com/repos/bartwe/flatbuffers/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/bartwe/flatbuffers/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/bartwe/flatbuffers/git/refs{/sha}", "trees_url": "https://api.github.com/repos/bartwe/flatbuffers/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/bartwe/flatbuffers/statuses/{sha}", "languages_url": "https://api.github.com/repos/bartwe/flatbuffers/languages", "stargazers_url": "https://api.github.com/repos/bartwe/flatbuffers/stargazers", "contributors_url": "https://api.github.com/repos/bartwe/flatbuffers/contributors", "subscribers_url": "https://api.github.com/repos/bartwe/flatbuffers/subscribers", "subscription_url": "https://api.github.com/repos/bartwe/flatbuffers/subscription", "commits_url": "https://api.github.com/repos/bartwe/flatbuffers/commits{/sha}", "git_commits_url": "https://api.github.com/repos/bartwe/flatbuffers/git/commits{/sha}", "comments_url": "https://api.github.com/repos/bartwe/flatbuffers/comments{/number}", "issue_comment_url": "https://api.github.com/repos/bartwe/flatbuffers/issues/comments{/number}", "contents_url": "https://api.github.com/repos/bartwe/flatbuffers/contents/{+path}", "compare_url": "https://api.github.com/repos/bartwe/flatbuffers/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/bartwe/flatbuffers/merges", "archive_url": "https://api.github.com/repos/bartwe/flatbuffers/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/bartwe/flatbuffers/downloads", "issues_url": "https://api.github.com/repos/bartwe/flatbuffers/issues{/number}", "pulls_url": "https://api.github.com/repos/bartwe/flatbuffers/pulls{/number}", "milestones_url": "https://api.github.com/repos/bartwe/flatbuffers/milestones{/number}", "notifications_url": "https://api.github.com/repos/bartwe/flatbuffers/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/bartwe/flatbuffers/labels{/name}", "releases_url": "https://api.github.com/repos/bartwe/flatbuffers/releases{/id}", "deployments_url": "https://api.github.com/repos/bartwe/flatbuffers/deployments", "created_at": "2022-05-18T15:41:26Z", "updated_at": "2022-05-18T10:41:24Z", "pushed_at": "2022-05-17T16:56:50Z", "git_url": "git://github.com/bartwe/flatbuffers.git", "ssh_url": "git@github.com:bartwe/flatbuffers.git", "clone_url": "https://github.com/bartwe/flatbuffers.git", "svn_url": "https://github.com/bartwe/flatbuffers", "homepage": "http://google.github.io/flatbuffers/", "size": 16203, "stargazers_count": 0, "watchers_count": 0, "language": null, "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "main", "public": true}}, "public": true, "created_at": "2022-05-18T15:41:27Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858263366", "type": "ForkEvent", "actor": {"id": 105805251, "login": "olehsinkevych-fb", "display_login": "olehsinkevych-fb", "gravatar_id": "", "url": "https://api.github.com/users/olehsinkevych-fb", "avatar_url": "https://avatars.githubusercontent.com/u/105805251?"}, "repo": {"id": 116309308, "name": "google/data-transfer-project", "url": "https://api.github.com/repos/google/data-transfer-project"}, "payload": {"forkee": {"id": 493725762, "node_id": "R_kgDOHW2oQg", "name": "data-transfer-project", "full_name": "olehsinkevych-fb/data-transfer-project", "private": false, "owner": {"login": "olehsinkevych-fb", "id": 105805251, "node_id": "U_kgDOBk51ww", "avatar_url": "https://avatars.githubusercontent.com/u/105805251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olehsinkevych-fb", "html_url": "https://github.com/olehsinkevych-fb", "followers_url": "https://api.github.com/users/olehsinkevych-fb/followers", "following_url": "https://api.github.com/users/olehsinkevych-fb/following{/other_user}", "gists_url": "https://api.github.com/users/olehsinkevych-fb/gists{/gist_id}", "starred_url": "https://api.github.com/users/olehsinkevych-fb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olehsinkevych-fb/subscriptions", "organizations_url": "https://api.github.com/users/olehsinkevych-fb/orgs", "repos_url": "https://api.github.com/users/olehsinkevych-fb/repos", "events_url": "https://api.github.com/users/olehsinkevych-fb/events{/privacy}", "received_events_url": "https://api.github.com/users/olehsinkevych-fb/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/olehsinkevych-fb/data-transfer-project", "description": "The Data Transfer Project makes it easy for people to transfer their data between online service providers. We are establishing a common framework, including data models and protocols, to enable direct transfer of data both into and out of participating online service providers.", "fork": true, "url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project", "forks_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/forks", "keys_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/teams", "hooks_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/hooks", "issue_events_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/issues/events{/number}", "events_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/events", "assignees_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/assignees{/user}", "branches_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/branches{/branch}", "tags_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/tags", "blobs_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/git/refs{/sha}", "trees_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/statuses/{sha}", "languages_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/languages", "stargazers_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/stargazers", "contributors_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/contributors", "subscribers_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/subscribers", "subscription_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/subscription", "commits_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/commits{/sha}", "git_commits_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/git/commits{/sha}", "comments_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/comments{/number}", "issue_comment_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/issues/comments{/number}", "contents_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/contents/{+path}", "compare_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/merges", "archive_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/downloads", "issues_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/issues{/number}", "pulls_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/pulls{/number}", "milestones_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/milestones{/number}", "notifications_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/labels{/name}", "releases_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/releases{/id}", "deployments_url": "https://api.github.com/repos/olehsinkevych-fb/data-transfer-project/deployments", "created_at": "2022-05-18T15:41:04Z", "updated_at": "2022-05-16T07:01:39Z", "pushed_at": "2022-05-18T14:57:35Z", "git_url": "git://github.com/olehsinkevych-fb/data-transfer-project.git", "ssh_url": "git@github.com:olehsinkevych-fb/data-transfer-project.git", "clone_url": "https://github.com/olehsinkevych-fb/data-transfer-project.git", "svn_url": "https://github.com/olehsinkevych-fb/data-transfer-project", "homepage": "http://datatransferproject.dev", "size": 9013, "stargazers_count": 0, "watchers_count": 0, "language": null, "has_issues": false, "has_projects": true, "has_downloads": false, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "main", "public": true}}, "public": true, "created_at": "2022-05-18T15:41:06Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858258271", "type": "PushEvent", "actor": {"id": 41898282, "login": "github-actions[bot]", "display_login": "github-actions", "gravatar_id": "", "url": "https://api.github.com/users/github-actions[bot]", "avatar_url": "https://avatars.githubusercontent.com/u/41898282?"}, "repo": {"id": 191387173, "name": "google/site-kit-wp", "url": "https://api.github.com/repos/google/site-kit-wp"}, "payload": {"push_id": 9918200619, "size": 1, "distinct_size": 1, "ref": "refs/heads/gh-pages", "head": "4529b2e48ed70dcaa75ba6b0f5542ba356bf6328", "before": "7178837ef19eab36e24f8c31f2b59f70ef98d880", "commits": [{"sha": "4529b2e48ed70dcaa75ba6b0f5542ba356bf6328", "author": {"email": "tofumatt@users.noreply.github.com", "name": "tofumatt"}, "message": "Deploy storybook for pull/5222.", "distinct": true, "url": "https://api.github.com/repos/google/site-kit-wp/commits/4529b2e48ed70dcaa75ba6b0f5542ba356bf6328"}]}, "public": true, "created_at": "2022-05-18T15:40:51Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858253165", "type": "WatchEvent", "actor": {"id": 11364490, "login": "kwea123", "display_login": "kwea123", "gravatar_id": "", "url": "https://api.github.com/users/kwea123", "avatar_url": "https://avatars.githubusercontent.com/u/11364490?"}, "repo": {"id": 82729529, "name": "google/python-fire", "url": "https://api.github.com/repos/google/python-fire"}, "payload": {"action": "started"}, "public": true, "created_at": "2022-05-18T15:40:36Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858250108", "type": "WatchEvent", "actor": {"id": 62458905, "login": "lemonsama123", "display_login": "lemonsama123", "gravatar_id": "", "url": "https://api.github.com/users/lemonsama123", "avatar_url": "https://avatars.githubusercontent.com/u/62458905?"}, "repo": {"id": 67390307, "name": "google/budou", "url": "https://api.github.com/repos/google/budou"}, "payload": {"action": "started"}, "public": true, "created_at": "2022-05-18T15:40:27Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858248764", "type": "PushEvent", "actor": {"id": 56741989, "login": "copybara-service[bot]", "display_login": "copybara-service", "gravatar_id": "", "url": "https://api.github.com/users/copybara-service[bot]", "avatar_url": "https://avatars.githubusercontent.com/u/56741989?"}, "repo": {"id": 390085292, "name": "google/quiche", "url": "https://api.github.com/repos/google/quiche"}, "payload": {"push_id": 9918196066, "size": 1, "distinct_size": 1, "ref": "refs/heads/main", "head": "7ddea9b1f700989d097536d5b4f6ae2f4c24c2b6", "before": "842dc4ac880bdfd715fb1b6f1abb84fc9f101775", "commits": [{"sha": "7ddea9b1f700989d097536d5b4f6ae2f4c24c2b6", "author": {"email": "bnc@google.com", "name": "bnc"}, "message": "Move QUICHE test helper functions and classes into quiche::test namespace.\n\nMove QuicheFlagSaver, QuicheTest, QuicheTestWithParam<>,\nScopedEnvironmentForThreads, and QuicheGetTestMemoryCachePathImpl() from top\nlevel namespace to quiche::test.\n\nMove QuicFlagSaver, QuicTest, and QuicTestWithParam<> from top level namespace to\nquic::test.\n\nThere were two implementations of QuicheTestImpl and of QuicheTestWithParamImpl\nin net/quic/platform_overrides/quiche_platform_impl/quiche_test_impl.h, one each\nwithin quiche::test on lines 24-27, one each in the top level namespace on lines\n186-205 (not actually used).  This CL removes the unused ones.\n\nPiperOrigin-RevId: 449490232", "distinct": true, "url": "https://api.github.com/repos/google/quiche/commits/7ddea9b1f700989d097536d5b4f6ae2f4c24c2b6"}]}, "public": true, "created_at": "2022-05-18T15:40:23Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858241131", "type": "WatchEvent", "actor": {"id": 11872405, "login": "delikely", "display_login": "delikely", "gravatar_id": "", "url": "https://api.github.com/users/delikely", "avatar_url": "https://avatars.githubusercontent.com/u/11872405?"}, "repo": {"id": 88987546, "name": "google/security-research-pocs", "url": "https://api.github.com/repos/google/security-research-pocs"}, "payload": {"action": "started"}, "public": true, "created_at": "2022-05-18T15:40:01Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858215688", "type": "PushEvent", "actor": {"id": 51282458, "login": "gvisor-go-bot", "display_login": "gvisor-go-bot", "gravatar_id": "", "url": "https://api.github.com/users/gvisor-go-bot", "avatar_url": "https://avatars.githubusercontent.com/u/51282458?"}, "repo": {"id": 131212638, "name": "google/gvisor", "url": "https://api.github.com/repos/google/gvisor"}, "payload": {"push_id": 9918180089, "size": 2, "distinct_size": 1, "ref": "refs/heads/go", "head": "47feb71ed9a6c5307ca2f6b8220f047bd5b1352d", "before": "cbf54ea7a6c4f145564124ff08f20ec4ed82326b", "commits": [{"sha": "98f5323163c41328aea6845a516d560bbfa8065b", "author": {"email": "nahurley@google.com", "name": "Nate Hurley"}, "message": "Use testutil.MustParse4/6 instead of net.ParseIP in tcpip test utils.\n\nAlso dedupe the RemoteIPv4Addr.\n\nUpdates #7338.\n\nPiperOrigin-RevId: 449488567", "distinct": false, "url": "https://api.github.com/repos/google/gvisor/commits/98f5323163c41328aea6845a516d560bbfa8065b"}, {"sha": "47feb71ed9a6c5307ca2f6b8220f047bd5b1352d", "author": {"email": "gvisor-bot@google.com", "name": "gVisor bot"}, "message": "Merge release-20220510.0-33-g98f532316 (automated)", "distinct": true, "url": "https://api.github.com/repos/google/gvisor/commits/47feb71ed9a6c5307ca2f6b8220f047bd5b1352d"}]}, "public": true, "created_at": "2022-05-18T15:38:49Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858200302", "type": "IssueCommentEvent", "actor": {"id": 6949191, "login": "hanhanW", "display_login": "hanhanW", "gravatar_id": "", "url": "https://api.github.com/users/hanhanW", "avatar_url": "https://avatars.githubusercontent.com/u/6949191?"}, "repo": {"id": 208145128, "name": "google/iree", "url": "https://api.github.com/repos/google/iree"}, "payload": {"action": "created", "issue": {"url": "https://api.github.com/repos/google/iree/issues/9155", "repository_url": "https://api.github.com/repos/google/iree", "labels_url": "https://api.github.com/repos/google/iree/issues/9155/labels{/name}", "comments_url": "https://api.github.com/repos/google/iree/issues/9155/comments", "events_url": "https://api.github.com/repos/google/iree/issues/9155/events", "html_url": "https://github.com/google/iree/issues/9155", "id": 1240013264, "node_id": "I_kwDODGgK6M5J6RnQ", "number": 9155, "title": "vmvx: error: failed to legalize operation 'memref.alloca' that was explicitly marked illegal", "user": {"login": "silvasean", "id": 24583347, "node_id": "MDQ6VXNlcjI0NTgzMzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/24583347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/silvasean", "html_url": "https://github.com/silvasean", "followers_url": "https://api.github.com/users/silvasean/followers", "following_url": "https://api.github.com/users/silvasean/following{/other_user}", "gists_url": "https://api.github.com/users/silvasean/gists{/gist_id}", "starred_url": "https://api.github.com/users/silvasean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/silvasean/subscriptions", "organizations_url": "https://api.github.com/users/silvasean/orgs", "repos_url": "https://api.github.com/users/silvasean/repos", "events_url": "https://api.github.com/users/silvasean/events{/privacy}", "received_events_url": "https://api.github.com/users/silvasean/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1553038945, "node_id": "MDU6TGFiZWwxNTUzMDM4OTQ1", "url": "https://api.github.com/repos/google/iree/labels/bug%20%F0%9F%90%9E", "name": "bug \ud83d\udc1e", "color": "d73a4a", "default": false, "description": "Something isn't working"}, {"id": 1553038953, "node_id": "MDU6TGFiZWwxNTUzMDM4OTUz", "url": "https://api.github.com/repos/google/iree/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2022-05-18T14:00:40Z", "updated_at": "2022-05-18T15:38:05Z", "closed_at": null, "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nerror: failed to legalize operation 'memref.alloca' that was explicitly marked illegal\r\n\r\nFYI, the reproducer is the same as in https://github.com/google/iree/issues/9126 cc @hanhanW for insights.\r\n\r\nFull log: https://gist.github.com/silvasean/72957031fea1be083f0172508f94358b\r\n\r\nNote: this blocks running BERT on IREE's vmvx backend!\r\n\r\n\r\n\r\n**To Reproduce**\r\n\r\n```\r\niree-compile --iree-hal-target-backends=vmvx  /tmp/iree-temps/core-input.mlir\r\n```\r\n\r\n```\r\n#map0 = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>\r\n#map1 = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, 0)>\r\nmodule attributes {torch.debug_module_name = \"OnlyLogitsHuggingFaceModel\"} {\r\n  func.func @forward(%arg0: tensor<1x12xi64>, %arg1: tensor<1x12x12x12xf32>) -> tensor<1x12x12x1xf32> {\r\n    %c0_i64 = arith.constant 0 : i64\r\n    %cst = arith.constant -3.40282347E+38 : f32\r\n    %0 = linalg.init_tensor [1, 12, 12, 1] : tensor<1x12x12x1xi64>\r\n    %1 = linalg.fill ins(%c0_i64 : i64) outs(%0 : tensor<1x12x12x1xi64>) -> tensor<1x12x12x1xi64>\r\n    %2 = linalg.init_tensor [1, 12, 12, 1] : tensor<1x12x12x1xf32>\r\n    %3 = linalg.fill ins(%cst : f32) outs(%2 : tensor<1x12x12x1xf32>) -> tensor<1x12x12x1xf32>\r\n    %4:2 = linalg.generic {indexing_maps = [#map0, #map1, #map1], iterator_types = [\"parallel\", \"parallel\", \"parallel\", \"reduction\"]} ins(%arg1 : tensor<1x12x12x12xf32>) outs(%3, %1 : tensor<1x12x12x1xf32>, tensor<1x12x12x1xi64>) {\r\n    ^bb0(%arg2: f32, %arg3: f32, %arg4: i64):\r\n      %5 = linalg.index 3 : index\r\n      %6 = arith.index_cast %5 : index to i64\r\n      %7 = arith.cmpf ogt, %arg2, %arg3 : f32\r\n      %8 = arith.select %7, %arg2, %arg3 : f32\r\n      %9 = arith.select %7, %6, %arg4 : i64\r\n      linalg.yield %8, %9 : f32, i64\r\n    } -> (tensor<1x12x12x1xf32>, tensor<1x12x12x1xi64>)\r\n    return %4#0 : tensor<1x12x12x1xf32>\r\n  }\r\n}\r\n```", "reactions": {"url": "https://api.github.com/repos/google/iree/issues/9155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/google/iree/issues/9155/timeline", "performed_via_github_app": null}, "comment": {"url": "https://api.github.com/repos/google/iree/issues/comments/1130179610", "html_url": "https://github.com/google/iree/issues/9155#issuecomment-1130179610", "issue_url": "https://api.github.com/repos/google/iree/issues/9155", "id": 1130179610, "node_id": "IC_kwDODGgK6M5DXSwa", "user": {"login": "hanhanW", "id": 6949191, "node_id": "MDQ6VXNlcjY5NDkxOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/6949191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hanhanW", "html_url": "https://github.com/hanhanW", "followers_url": "https://api.github.com/users/hanhanW/followers", "following_url": "https://api.github.com/users/hanhanW/following{/other_user}", "gists_url": "https://api.github.com/users/hanhanW/gists{/gist_id}", "starred_url": "https://api.github.com/users/hanhanW/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hanhanW/subscriptions", "organizations_url": "https://api.github.com/users/hanhanW/orgs", "repos_url": "https://api.github.com/users/hanhanW/repos", "events_url": "https://api.github.com/users/hanhanW/events{/privacy}", "received_events_url": "https://api.github.com/users/hanhanW/received_events", "type": "User", "site_admin": false}, "created_at": "2022-05-18T15:38:05Z", "updated_at": "2022-05-18T15:38:05Z", "author_association": "COLLABORATOR", "body": "cool, if we accept bounded stack allocs for vmvx backend, I can take a look at it.", "reactions": {"url": "https://api.github.com/repos/google/iree/issues/comments/1130179610/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "performed_via_github_app": null}}, "public": true, "created_at": "2022-05-18T15:38:05Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858197941", "type": "WatchEvent", "actor": {"id": 301036, "login": "kylehowells", "display_login": "kylehowells", "gravatar_id": "", "url": "https://api.github.com/users/kylehowells", "avatar_url": "https://avatars.githubusercontent.com/u/301036?"}, "repo": {"id": 34353751, "name": "google/google-toolbox-for-mac", "url": "https://api.github.com/repos/google/google-toolbox-for-mac"}, "payload": {"action": "started"}, "public": true, "created_at": "2022-05-18T15:37:59Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858190428", "type": "IssueCommentEvent", "actor": {"id": 55858104, "login": "google-cla[bot]", "display_login": "google-cla", "gravatar_id": "", "url": "https://api.github.com/users/google-cla[bot]", "avatar_url": "https://avatars.githubusercontent.com/u/55858104?"}, "repo": {"id": 228683419, "name": "google/it-cert-automation-practice", "url": "https://api.github.com/repos/google/it-cert-automation-practice"}, "payload": {"action": "created", "issue": {"url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21384", "repository_url": "https://api.github.com/repos/google/it-cert-automation-practice", "labels_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21384/labels{/name}", "comments_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21384/comments", "events_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21384/events", "html_url": "https://github.com/google/it-cert-automation-practice/pull/21384", "id": 1240150105, "node_id": "PR_kwDODaFum844CVBP", "number": 21384, "title": "Updated validations.py python script", "user": {"login": "ivcvy", "id": 100193316, "node_id": "U_kgDOBfjUJA", "avatar_url": "https://avatars.githubusercontent.com/u/100193316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivcvy", "html_url": "https://github.com/ivcvy", "followers_url": "https://api.github.com/users/ivcvy/followers", "following_url": "https://api.github.com/users/ivcvy/following{/other_user}", "gists_url": "https://api.github.com/users/ivcvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivcvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivcvy/subscriptions", "organizations_url": "https://api.github.com/users/ivcvy/orgs", "repos_url": "https://api.github.com/users/ivcvy/repos", "events_url": "https://api.github.com/users/ivcvy/events{/privacy}", "received_events_url": "https://api.github.com/users/ivcvy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2022-05-18T15:37:32Z", "updated_at": "2022-05-18T15:37:37Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "draft": false, "pull_request": {"url": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/21384", "html_url": "https://github.com/google/it-cert-automation-practice/pull/21384", "diff_url": "https://github.com/google/it-cert-automation-practice/pull/21384.diff", "patch_url": "https://github.com/google/it-cert-automation-practice/pull/21384.patch", "merged_at": null}, "body": "Fixed validations issue for username starting with symbol\r\n\r\nAdded symbols that return False if typed as the first character in username\r\n\r\nFixes #<issue_number_goes_here>\r\n\r\n> It's a good idea to open an issue first for discussion.\r\n\r\n- [ ] Tests pass\r\n- [ ] Appropriate changes to README are included in PR", "reactions": {"url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21384/timeline", "performed_via_github_app": null}, "comment": {"url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/comments/1130179122", "html_url": "https://github.com/google/it-cert-automation-practice/pull/21384#issuecomment-1130179122", "issue_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21384", "id": 1130179122, "node_id": "IC_kwDODaFum85DXSoy", "user": {"login": "google-cla[bot]", "id": 55858104, "node_id": "MDM6Qm90NTU4NTgxMDQ=", "avatar_url": "https://avatars.githubusercontent.com/in/42202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google-cla%5Bbot%5D", "html_url": "https://github.com/apps/google-cla", "followers_url": "https://api.github.com/users/google-cla%5Bbot%5D/followers", "following_url": "https://api.github.com/users/google-cla%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/google-cla%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/google-cla%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google-cla%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/google-cla%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/google-cla%5Bbot%5D/repos", "events_url": "https://api.github.com/users/google-cla%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/google-cla%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "created_at": "2022-05-18T15:37:37Z", "updated_at": "2022-05-18T15:37:37Z", "author_association": "NONE", "body": "Thanks for your pull request! It looks like this may be your first contribution to a Google open source project. Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\nFor more information, open the [CLA check for this pull request](https://github.com/google/it-cert-automation-practice/pull/21384/checks?check_run_id=6492443166).", "reactions": {"url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/comments/1130179122/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "performed_via_github_app": null}}, "public": true, "created_at": "2022-05-18T15:37:37Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858189252", "type": "PullRequestEvent", "actor": {"id": 100193316, "login": "ivcvy", "display_login": "ivcvy", "gravatar_id": "", "url": "https://api.github.com/users/ivcvy", "avatar_url": "https://avatars.githubusercontent.com/u/100193316?"}, "repo": {"id": 228683419, "name": "google/it-cert-automation-practice", "url": "https://api.github.com/repos/google/it-cert-automation-practice"}, "payload": {"action": "opened", "number": 21384, "pull_request": {"url": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/21384", "id": 940134479, "node_id": "PR_kwDODaFum844CVBP", "html_url": "https://github.com/google/it-cert-automation-practice/pull/21384", "diff_url": "https://github.com/google/it-cert-automation-practice/pull/21384.diff", "patch_url": "https://github.com/google/it-cert-automation-practice/pull/21384.patch", "issue_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21384", "number": 21384, "state": "open", "locked": false, "title": "Updated validations.py python script", "user": {"login": "ivcvy", "id": 100193316, "node_id": "U_kgDOBfjUJA", "avatar_url": "https://avatars.githubusercontent.com/u/100193316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivcvy", "html_url": "https://github.com/ivcvy", "followers_url": "https://api.github.com/users/ivcvy/followers", "following_url": "https://api.github.com/users/ivcvy/following{/other_user}", "gists_url": "https://api.github.com/users/ivcvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivcvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivcvy/subscriptions", "organizations_url": "https://api.github.com/users/ivcvy/orgs", "repos_url": "https://api.github.com/users/ivcvy/repos", "events_url": "https://api.github.com/users/ivcvy/events{/privacy}", "received_events_url": "https://api.github.com/users/ivcvy/received_events", "type": "User", "site_admin": false}, "body": "Fixed validations issue for username starting with symbol\r\n\r\nAdded symbols that return False if typed as the first character in username\r\n\r\nFixes #<issue_number_goes_here>\r\n\r\n> It's a good idea to open an issue first for discussion.\r\n\r\n- [ ] Tests pass\r\n- [ ] Appropriate changes to README are included in PR", "created_at": "2022-05-18T15:37:32Z", "updated_at": "2022-05-18T15:37:32Z", "closed_at": null, "merged_at": null, "merge_commit_sha": null, "assignee": null, "assignees": [], "requested_reviewers": [], "requested_teams": [], "labels": [], "milestone": null, "draft": false, "commits_url": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/21384/commits", "review_comments_url": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/21384/comments", "review_comment_url": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/comments{/number}", "comments_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21384/comments", "statuses_url": "https://api.github.com/repos/google/it-cert-automation-practice/statuses/cf2379b90db9ec83956dd9e39aa4d5b332d5b142", "head": {"label": "ivcvy:improve-username-behavior", "ref": "improve-username-behavior", "sha": "cf2379b90db9ec83956dd9e39aa4d5b332d5b142", "user": {"login": "ivcvy", "id": 100193316, "node_id": "U_kgDOBfjUJA", "avatar_url": "https://avatars.githubusercontent.com/u/100193316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivcvy", "html_url": "https://github.com/ivcvy", "followers_url": "https://api.github.com/users/ivcvy/followers", "following_url": "https://api.github.com/users/ivcvy/following{/other_user}", "gists_url": "https://api.github.com/users/ivcvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivcvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivcvy/subscriptions", "organizations_url": "https://api.github.com/users/ivcvy/orgs", "repos_url": "https://api.github.com/users/ivcvy/repos", "events_url": "https://api.github.com/users/ivcvy/events{/privacy}", "received_events_url": "https://api.github.com/users/ivcvy/received_events", "type": "User", "site_admin": false}, "repo": {"id": 493713156, "node_id": "R_kgDOHW13BA", "name": "it-cert-automation-practice", "full_name": "ivcvy/it-cert-automation-practice", "private": false, "owner": {"login": "ivcvy", "id": 100193316, "node_id": "U_kgDOBfjUJA", "avatar_url": "https://avatars.githubusercontent.com/u/100193316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivcvy", "html_url": "https://github.com/ivcvy", "followers_url": "https://api.github.com/users/ivcvy/followers", "following_url": "https://api.github.com/users/ivcvy/following{/other_user}", "gists_url": "https://api.github.com/users/ivcvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivcvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivcvy/subscriptions", "organizations_url": "https://api.github.com/users/ivcvy/orgs", "repos_url": "https://api.github.com/users/ivcvy/repos", "events_url": "https://api.github.com/users/ivcvy/events{/privacy}", "received_events_url": "https://api.github.com/users/ivcvy/received_events", "type": "User", "site_admin": false}, "html_url": "https://github.com/ivcvy/it-cert-automation-practice", "description": "Google IT Automation with Python Professional Certificate - Practice files", "fork": true, "url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice", "forks_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/forks", "keys_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/teams", "hooks_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/hooks", "issue_events_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/issues/events{/number}", "events_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/events", "assignees_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/assignees{/user}", "branches_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/branches{/branch}", "tags_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/tags", "blobs_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/git/refs{/sha}", "trees_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/statuses/{sha}", "languages_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/languages", "stargazers_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/stargazers", "contributors_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/contributors", "subscribers_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/subscribers", "subscription_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/subscription", "commits_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/commits{/sha}", "git_commits_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/git/commits{/sha}", "comments_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/comments{/number}", "issue_comment_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/issues/comments{/number}", "contents_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/contents/{+path}", "compare_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/merges", "archive_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/downloads", "issues_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/issues{/number}", "pulls_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/pulls{/number}", "milestones_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/milestones{/number}", "notifications_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/labels{/name}", "releases_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/releases{/id}", "deployments_url": "https://api.github.com/repos/ivcvy/it-cert-automation-practice/deployments", "created_at": "2022-05-18T15:07:10Z", "updated_at": "2022-05-15T19:27:17Z", "pushed_at": "2022-05-18T15:32:26Z", "git_url": "git://github.com/ivcvy/it-cert-automation-practice.git", "ssh_url": "git@github.com:ivcvy/it-cert-automation-practice.git", "clone_url": "https://github.com/ivcvy/it-cert-automation-practice.git", "svn_url": "https://github.com/ivcvy/it-cert-automation-practice", "homepage": "", "size": 16, "stargazers_count": 0, "watchers_count": 0, "language": null, "has_issues": false, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 0, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 0, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 0, "open_issues": 0, "watchers": 0, "default_branch": "master"}}, "base": {"label": "google:master", "ref": "master", "sha": "33be82d3312541acf8e83e3d8b9c4e23c7b1dab6", "user": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "repo": {"id": 228683419, "node_id": "MDEwOlJlcG9zaXRvcnkyMjg2ODM0MTk=", "name": "it-cert-automation-practice", "full_name": "google/it-cert-automation-practice", "private": false, "owner": {"login": "google", "id": 1342004, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEzNDIwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/google", "html_url": "https://github.com/google", "followers_url": "https://api.github.com/users/google/followers", "following_url": "https://api.github.com/users/google/following{/other_user}", "gists_url": "https://api.github.com/users/google/gists{/gist_id}", "starred_url": "https://api.github.com/users/google/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/google/subscriptions", "organizations_url": "https://api.github.com/users/google/orgs", "repos_url": "https://api.github.com/users/google/repos", "events_url": "https://api.github.com/users/google/events{/privacy}", "received_events_url": "https://api.github.com/users/google/received_events", "type": "Organization", "site_admin": false}, "html_url": "https://github.com/google/it-cert-automation-practice", "description": "Google IT Automation with Python Professional Certificate - Practice files", "fork": false, "url": "https://api.github.com/repos/google/it-cert-automation-practice", "forks_url": "https://api.github.com/repos/google/it-cert-automation-practice/forks", "keys_url": "https://api.github.com/repos/google/it-cert-automation-practice/keys{/key_id}", "collaborators_url": "https://api.github.com/repos/google/it-cert-automation-practice/collaborators{/collaborator}", "teams_url": "https://api.github.com/repos/google/it-cert-automation-practice/teams", "hooks_url": "https://api.github.com/repos/google/it-cert-automation-practice/hooks", "issue_events_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/events{/number}", "events_url": "https://api.github.com/repos/google/it-cert-automation-practice/events", "assignees_url": "https://api.github.com/repos/google/it-cert-automation-practice/assignees{/user}", "branches_url": "https://api.github.com/repos/google/it-cert-automation-practice/branches{/branch}", "tags_url": "https://api.github.com/repos/google/it-cert-automation-practice/tags", "blobs_url": "https://api.github.com/repos/google/it-cert-automation-practice/git/blobs{/sha}", "git_tags_url": "https://api.github.com/repos/google/it-cert-automation-practice/git/tags{/sha}", "git_refs_url": "https://api.github.com/repos/google/it-cert-automation-practice/git/refs{/sha}", "trees_url": "https://api.github.com/repos/google/it-cert-automation-practice/git/trees{/sha}", "statuses_url": "https://api.github.com/repos/google/it-cert-automation-practice/statuses/{sha}", "languages_url": "https://api.github.com/repos/google/it-cert-automation-practice/languages", "stargazers_url": "https://api.github.com/repos/google/it-cert-automation-practice/stargazers", "contributors_url": "https://api.github.com/repos/google/it-cert-automation-practice/contributors", "subscribers_url": "https://api.github.com/repos/google/it-cert-automation-practice/subscribers", "subscription_url": "https://api.github.com/repos/google/it-cert-automation-practice/subscription", "commits_url": "https://api.github.com/repos/google/it-cert-automation-practice/commits{/sha}", "git_commits_url": "https://api.github.com/repos/google/it-cert-automation-practice/git/commits{/sha}", "comments_url": "https://api.github.com/repos/google/it-cert-automation-practice/comments{/number}", "issue_comment_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues/comments{/number}", "contents_url": "https://api.github.com/repos/google/it-cert-automation-practice/contents/{+path}", "compare_url": "https://api.github.com/repos/google/it-cert-automation-practice/compare/{base}...{head}", "merges_url": "https://api.github.com/repos/google/it-cert-automation-practice/merges", "archive_url": "https://api.github.com/repos/google/it-cert-automation-practice/{archive_format}{/ref}", "downloads_url": "https://api.github.com/repos/google/it-cert-automation-practice/downloads", "issues_url": "https://api.github.com/repos/google/it-cert-automation-practice/issues{/number}", "pulls_url": "https://api.github.com/repos/google/it-cert-automation-practice/pulls{/number}", "milestones_url": "https://api.github.com/repos/google/it-cert-automation-practice/milestones{/number}", "notifications_url": "https://api.github.com/repos/google/it-cert-automation-practice/notifications{?since,all,participating}", "labels_url": "https://api.github.com/repos/google/it-cert-automation-practice/labels{/name}", "releases_url": "https://api.github.com/repos/google/it-cert-automation-practice/releases{/id}", "deployments_url": "https://api.github.com/repos/google/it-cert-automation-practice/deployments", "created_at": "2019-12-17T19:04:12Z", "updated_at": "2022-05-15T19:27:17Z", "pushed_at": "2022-05-18T15:37:33Z", "git_url": "git://github.com/google/it-cert-automation-practice.git", "ssh_url": "git@github.com:google/it-cert-automation-practice.git", "clone_url": "https://github.com/google/it-cert-automation-practice.git", "svn_url": "https://github.com/google/it-cert-automation-practice", "homepage": "", "size": 16, "stargazers_count": 503, "watchers_count": 503, "language": "Python", "has_issues": true, "has_projects": true, "has_downloads": true, "has_wiki": true, "has_pages": false, "forks_count": 25867, "mirror_url": null, "archived": false, "disabled": false, "open_issues_count": 17696, "license": {"key": "apache-2.0", "name": "Apache License 2.0", "spdx_id": "Apache-2.0", "url": "https://api.github.com/licenses/apache-2.0", "node_id": "MDc6TGljZW5zZTI="}, "allow_forking": true, "is_template": false, "topics": [], "visibility": "public", "forks": 25867, "open_issues": 17696, "watchers": 503, "default_branch": "master"}}, "_links": {"self": {"href": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/21384"}, "html": {"href": "https://github.com/google/it-cert-automation-practice/pull/21384"}, "issue": {"href": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21384"}, "comments": {"href": "https://api.github.com/repos/google/it-cert-automation-practice/issues/21384/comments"}, "review_comments": {"href": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/21384/comments"}, "review_comment": {"href": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/comments{/number}"}, "commits": {"href": "https://api.github.com/repos/google/it-cert-automation-practice/pulls/21384/commits"}, "statuses": {"href": "https://api.github.com/repos/google/it-cert-automation-practice/statuses/cf2379b90db9ec83956dd9e39aa4d5b332d5b142"}}, "author_association": "NONE", "auto_merge": null, "active_lock_reason": null, "merged": false, "mergeable": null, "rebaseable": null, "mergeable_state": "unknown", "merged_by": null, "comments": 0, "review_comments": 0, "maintainer_can_modify": true, "commits": 1, "additions": 8, "deletions": 1, "changed_files": 1}}, "public": true, "created_at": "2022-05-18T15:37:33Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}, {"id": "21858173187", "type": "WatchEvent", "actor": {"id": 422915, "login": "rjansen", "display_login": "rjansen", "gravatar_id": "", "url": "https://api.github.com/users/rjansen", "avatar_url": "https://avatars.githubusercontent.com/u/422915?"}, "repo": {"id": 202366095, "name": "google/android-emulator-container-scripts", "url": "https://api.github.com/repos/google/android-emulator-container-scripts"}, "payload": {"action": "started"}, "public": true, "created_at": "2022-05-18T15:36:46Z", "org": {"id": 1342004, "login": "google", "gravatar_id": "", "url": "https://api.github.com/orgs/google", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?"}}], "hooks_url": {"message": "Not Found", "documentation_url": "https://docs.github.com/rest/reference/orgs#list-organization-webhooks"}, "issues_url": {"message": "Not Found", "documentation_url": "https://docs.github.com/rest/reference/issues#list-organization-issues-assigned-to-the-authenticated-user"}, "members_url": "https://api.github.com/orgs/google/members{/member}", "public_members_url": "https://api.github.com/orgs/google/public_members{/member}", "avatar_url": "https://avatars.githubusercontent.com/u/1342004?v=4", "description": "Google \u2764\ufe0f Open Source", "name": "Google", "company": null, "blog": "https://opensource.google/", "location": null, "email": "opensource@google.com", "twitter_username": "GoogleOSS", "is_verified": true, "has_organization_projects": true, "has_repository_projects": true, "public_repos": 2255, "public_gists": 0, "followers": 0, "following": 0, "html_url": "https://github.com/google", "created_at": "2012-01-18T01:30:18Z", "updated_at": "2021-12-30T01:40:20Z", "type": "Organization"}